{
  "name": "mbpp_438_count_bidirectional",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_438_count_bidirectional.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1_eaqvp.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1_eaqvp.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1_eaqvp.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) count += map(i)\n            if (map.contains(-i)) map(i) = map(-i) + 1\n            else map(i) = 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0oxxzuyp.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0oxxzuyp.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0oxxzuyp.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val count = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (count.contains(i)) count(i) += 1\n            else count(i) = 1\n        }\n        var result = 0L\n        for (i <- count.keys) {\n            if (count.contains(-i)) result += count(i) * count(-i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0r2e4i8.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0r2e4i8.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi0r2e4i8.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) count += test_map(i) * test_map(-i)\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mcdhueq.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mcdhueq.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mcdhueq.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) {\n                count += test_map(i) * test_map(-i)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ihidu1m.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ihidu1m.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ihidu1m.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpokwlp_rv.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk4xuv2j.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk4xuv2j.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk4xuv2j.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length - 1) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj8313hs.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj8313hs.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj8313hs.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val tuple_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val tuple = test_list(i)\n            if (tuple_map.contains(tuple)) {\n                count += tuple_map(tuple)\n                tuple_map(tuple) += 1\n            } else {\n                tuple_map(tuple) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh49_0ji.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh49_0ji.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh49_0ji.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var result = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                result += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqfiyjcp.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqfiyjcp.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxqfiyjcp.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            for (j <- test_set) {\n                if (i != j && test_set.contains(i + j)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcz6q1fle.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcz6q1fle.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcz6q1fle.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6i85jhet.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) count += test_map(i)\n            if (test_map.contains(-i)) test_map(i) = test_map(-i) + 1\n            else test_map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx5hymi6.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx5hymi6.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppx5hymi6.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) {\n                count += map(i) * (map(i) - 1)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpijtd3vds.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpijtd3vds.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpijtd3vds.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ip4_bwc.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ip4_bwc.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ip4_bwc.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            result += test_map(i) * (test_map(i) - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2xkuqe8b.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2xkuqe8b.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2xkuqe8b.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphtlqpksw.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        test_list.map(x => test_set.count(_ < x)).sum\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxqjrbpf.scala:10:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxqjrbpf.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxqjrbpf.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0L\n        for (i <- 0 until sorted_list.length) {\n            val x = sorted_list(i)\n            val y = x * x\n            val index = sorted_list.indexOf(y)\n            if (index != -1) {\n                count += 1\n                sorted_list.remove(index)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphuob50xw.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                sorted_list.remove(index)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue remove is not a member of List[Long] - did you mean sorted_list.reduce?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphuob50xw.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphuob50xw.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphuob50xw.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var result = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) result += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgl86dnb.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgl86dnb.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprgl86dnb.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ujegfbz.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ujegfbz.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6ujegfbz.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe467n9ai.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = x * x\n            val index = test_list_sorted.indexOf(y)\n            if (index != -1) {\n                count += index\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj7__4zv.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj7__4zv.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj7__4zv.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1lofv_8.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1lofv_8.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1lofv_8.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count : Long = 0\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            }\n            else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ymplepz.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ymplepz.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ymplepz.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.size) {\n            val x = sorted_list(i)\n            val y = sorted_list(sorted_list.size - i - 1)\n            if (x == y) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkdbsoe9y.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkdbsoe9y.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkdbsoe9y.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) {\n                count += test_map(test_list(i))\n                test_map(test_list(i)) += 1\n            }\n            else test_map(test_list(i)) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkavcsm.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkavcsm.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkavcsm.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            val j = map(i)\n            if (j > 1) count += j * (j - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyteolku.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyteolku.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmyteolku.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list.indices) {\n            val a = test_list(i)\n            val b = test_list(i)\n            if (test_set.contains(a) && test_set.contains(b)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqplbic7.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqplbic7.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqplbic7.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length - 1) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_set.contains(test_list_sorted(i) * test_list_sorted(j))) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_6vfo7q.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_6vfo7q.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_6vfo7q.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        var set = Set[Long]()\n        for (i <- test_list) {\n            if (set.contains(i)) count += 1\n            set += i\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124070,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzcmycops.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzcmycops.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzcmycops.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_list_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjv4pu03.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjv4pu03.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsjv4pu03.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuhc1r_c4.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuhc1r_c4.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuhc1r_c4.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqpz3oqy.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqpz3oqy.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiqpz3oqy.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) count += test_map(i) * test_map(-i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepyhbfk4.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepyhbfk4.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepyhbfk4.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = Map[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3oowpw8.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3oowpw8.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm3oowpw8.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map += (i -> 1)\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124070,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpocbdgmfl.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpocbdgmfl.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpocbdgmfl.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g7j8_y5.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g7j8_y5.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g7j8_y5.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_list_sorted(i) * test_list_sorted(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nlcug6d.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        var map = Map[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6766j0.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6766j0.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk6766j0.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var result = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) result += map(i) * (map(i) - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptzbdzowt.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptzbdzowt.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptzbdzowt.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length) {\n            for (j <- i + 1 until sorted_list.length) {\n                if (sorted_list(i) * sorted_list(j) <= 1000000) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt2u3f5j0.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt2u3f5j0.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt2u3f5j0.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeo2lyi2t.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = test_list(test_list.length - i - 1)\n            if (test_map.contains(x)) {\n                if (test_map(x) == y) count += 1\n            } else {\n                test_map += x -> y\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpizess1z7.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpizess1z7.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpizess1z7.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9arlpoh4.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9arlpoh4.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9arlpoh4.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (x <- test_list) {\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            }\n            else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6u305zp0.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6u305zp0.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6u305zp0.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- 0 until test_list.length) {\n                if (test_list(i) == test_list(j) && i != j) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) map(x) += 1\n            else map(x) = 1\n        }\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                val y = map(x)\n                if (y > 1) count += y * (y - 1) / 2\n                map(x) = 0\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4uz0hr1s.scala:24:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4uz0hr1s.scala:24:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4uz0hr1s.scala:24:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) >= 2) count += map(i) * (map(i) - 1) / 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8taihax.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8taihax.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8taihax.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124089,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqqof06z.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val set = new HashSet[Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (set.contains(i)) count += 1\n            set.add(i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1wb4dxq2.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1wb4dxq2.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1wb4dxq2.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var result = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) result += map(i) * (map(i) - 1)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp972oy31m.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp972oy31m.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp972oy31m.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result : Long = 0\n        for (i <- test_map.keys) {\n            if (test_map(i) > 1) result += test_map(i) * (test_map(i) - 1) / 2\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88anrtyy.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88anrtyy.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88anrtyy.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt6rwbrzx.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_i42t_y.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_i42t_y.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph_i42t_y.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toString.reverse.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnq5loyc.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnq5loyc.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnq5loyc.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = x * x\n            val index = test_list_sorted.indexOf(y)\n            if (index != -1) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2hkl1opa.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2hkl1opa.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2hkl1opa.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = Map[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0hx84nd.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0hx84nd.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0hx84nd.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpatim5jmd.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) == test_list(j)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmxzy17y.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpks6rt4nz.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpks6rt4nz.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpks6rt4nz.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var result = 0L\n        for (i <- map.keys) {\n            val count = map(i)\n            result += count * (count - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp57zwd3d2.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp57zwd3d2.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp57zwd3d2.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpufm4_pw9.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpufm4_pw9.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpufm4_pw9.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk0wkfme1.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk0wkfme1.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk0wkfme1.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            for (j <- i + 1 until test_list_sorted.length) {\n                if (test_set.contains(test_list_sorted(i) + test_list_sorted(j))) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf71pmp2v.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdc68jkb1.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val a = test_list_sorted(i)\n            for (j <- i + 1 until test_list_sorted.length) {\n                val b = test_list_sorted(j)\n                if (test_set.contains(a + b)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n            }\n            if (map.contains(-i)) {\n                map(i) = map(-i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf1yqcq4.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf1yqcq4.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf1yqcq4.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * 3\n            if (test_set.contains(y)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvsmujteu.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvsmujteu.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvsmujteu.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            for (j <- i + 1 until test_list.length) {\n                val y = test_list(j)\n                if (x * y < 0) {\n                    val key = x * y\n                    val value = map.getOrElse(key, 0L)\n                    map.put(key, value + 1)\n                }\n            }\n        }\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            for (j <- i + 1 until test_list.length) {\n                val y = test_list(j)\n                if (x * y > 0) {\n                    val key = x * y\n                    val value = map.getOrElse(key, 0L)\n                    count += value\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dyexxse.scala:33:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dyexxse.scala:33:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6dyexxse.scala:33:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = test_list_sorted(test_list_sorted.length - 1 - i)\n            if (x == y) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpluetlh6l.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpluetlh6l.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpluetlh6l.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_size = test_list.size\n        var count = 0\n        for (i <- 0 until test_list_size) {\n            val a = test_list(i)\n            for (j <- i + 1 until test_list_size) {\n                val b = test_list(j)\n                if (test_set.contains(a + b)) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124108,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf8jzh9e.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf8jzh9e.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaf8jzh9e.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) test_map(test_list(i)) += 1\n            else test_map(test_list(i)) = 1\n        }\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            if (test_map.contains(test_list(i))) {\n                count += test_map(test_list(i)) * (test_map(test_list(i)) - 1)\n                test_map -= test_list(i)\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdspx0nq8.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdspx0nq8.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdspx0nq8.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvbrdjf9.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvbrdjf9.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprvbrdjf9.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(i)) {\n                count += test_map(i) * test_map(i - 1)\n                test_map(i - 1) = 0\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3rt5ahgr.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3rt5ahgr.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3rt5ahgr.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong * -1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcowtw5nh.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcowtw5nh.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcowtw5nh.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = Map[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) count += map(x)\n            for (j <- i + 1 until test_list.length) {\n                val y = test_list(j)\n                if (map.contains(y)) map(y) += 1\n                else map(y) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbkteo6di.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbkteo6di.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbkteo6di.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i - 1)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy71gklhn.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g5w0blh.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppl3n0opb.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i + 1)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp87kg5kvv.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofymdn0t.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93uld1az.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93uld1az.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp93uld1az.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- 0 until test_list.length) {\n                if (test_list(i) == test_list(j) && i != j) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkexk_iah.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        for (x <- test_list) {\n            if (map.contains(x)) map(x) += 1\n            else map(x) = 1\n        }\n        var count = 0L\n        for (x <- test_list) {\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) = 0\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1w1va1x.scala:21:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1w1va1x.scala:21:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp1w1va1x.scala:21:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        val test_list_sorted_set = test_list_sorted.toSet\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = x * x\n            if (test_list_sorted_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgg06ovx.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgg06ovx.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgg06ovx.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplsgavvs6.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val hash_map = new HashMap[Long, Long]()\n        for (i <- 0 until test_list.length) {\n            if (hash_map.contains(test_list(i))) {\n                hash_map(test_list(i)) += 1\n            } else {\n                hash_map(test_list(i)) = 1\n            }\n        }\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            if (hash_map.contains(test_list(i) * 2)) {\n                result += hash_map(test_list(i) * 2)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpan0ifc27.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpan0ifc27.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpan0ifc27.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i.toLong)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124109,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzzfdnqu.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        test_list.map(x => test_set.count(_ > x)).sum\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (x <- test_list) {\n            if (map.contains(x)) count += map(x)\n            if (map.contains(-x)) map(x) = map(-x) + 1\n            else map(x) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazqlk5zh.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazqlk5zh.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpazqlk5zh.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) > 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz1cxoulq.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz1cxoulq.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz1cxoulq.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val m = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (m.contains(x)) {\n                count += m(x)\n            }\n            m(x) = m.getOrElse(x, 0L) + 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2040nfm1.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2040nfm1.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2040nfm1.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toString.reverse.toLong)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9ep1f79.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9ep1f79.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9ep1f79.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8l0kiug0.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * 3\n            if (test_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ywg7kbf.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ywg7kbf.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ywg7kbf.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(i)) {\n                val count = test_map(i)\n                result += count * (count - 1) / 2\n                test_map.remove(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1tlimh4.scala:22:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1tlimh4.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf1tlimh4.scala:22:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2oiv9yal.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_list_set.contains(i * i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqee6crk5.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqee6crk5.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqee6crk5.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) count += test_map(i) * test_map(-i)\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124126,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa15aet7x.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa15aet7x.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa15aet7x.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm6wgsny2.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm6wgsny2.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm6wgsny2.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = x * x\n            val y_index = test_list_sorted.indexOf(y)\n            if (y_index != -1) {\n                val z = sqrt(y).toLong\n                val z_index = test_list_sorted.indexOf(z)\n                if (z_index != -1) {\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1z94qoo3.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1z94qoo3.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1z94qoo3.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val x = test_list_sorted(i)\n            val y = x * x\n            val y_sqrt = sqrt(y).toLong\n            if (y_sqrt * y_sqrt == y) {\n                val index = test_list_sorted.indexOf(y_sqrt)\n                if (index != -1) {\n                    count += index + 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ysengw1.scala:22:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ysengw1.scala:22:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ysengw1.scala:22:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            val j = i * i\n            if (test_set.contains(j)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy1ggz8mv.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) {\n                count += 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsba9vzz.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsba9vzz.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsba9vzz.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphey8bojy.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            for (j <- i + 1 until test_list.length) {\n                val y = test_list(j)\n                val g = gcd(x, y)\n                val key = x / g * y\n                map(key) = map.getOrElse(key, 0) + 1\n            }\n        }\n        var result = 0L\n        for (value <- map.values) {\n            result += value * (value - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzg9b9al.scala:11:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mg\u001b[0m = gcd(x, y)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: gcd\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjzg9b9al.scala:13:49 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                map(key) = map.getOrElse(key, \u001b[31m0\u001b[0m) + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue + is not a member of AnyVal, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might make progress towards fixing the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.Fractional.Implicits.infixFractionalOps\n\u001b[31m   |\u001b[0m  import math.Integral.Implicits.infixIntegralOps\n\u001b[31m   |\u001b[0m  import math.Numeric.Implicits.infixNumericOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjzg9b9al.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjzg9b9al.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val sorted_list = test_list.sorted\n        var count = 0\n        for (i <- 0 until sorted_list.length - 1) {\n            for (j <- i + 1 until sorted_list.length) {\n                if (sorted_list(i) * sorted_list(j) < 0) {\n                    count += 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt06yta2p.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt06yta2p.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt06yta2p.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Int]\n        var count = 0\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbsttn5u7.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbsttn5u7.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbsttn5u7.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i.toString.reverse.toLong)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpos_l8sn0.scala:16:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpos_l8sn0.scala:16:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpos_l8sn0.scala:16:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        test_list.map(x => test_set.count(_ > x)).sum\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplfa0tqmn.scala:10:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        val test_list_sorted = test_list.sorted\n        var count = 0L\n        for (i <- 0 until test_list_sorted.length) {\n            val a = test_list_sorted(i)\n            for (j <- i + 1 until test_list_sorted.length) {\n                val b = test_list_sorted(j)\n                if (test_set.contains(a + b)) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz0lv_k7.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124110,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20731pev.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) + test_list(j) == 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg2cgvf5.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoxw72f_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = test_list(test_list.length - 1 - i)\n            if (x == y) {\n                count += 1\n            }\n            else {\n                if (map.contains(x)) {\n                    count += map(x)\n                }\n                if (map.contains(y)) {\n                    count += map(y)\n                }\n                if (map.contains(x)) {\n                    map(x) += 1\n                }\n                else {\n                    map(x) = 1\n                }\n                if (map.contains(y)) {\n                    map(y) += 1\n                }\n                else {\n                    map(y) = 1\n                }\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes6c6u8i.scala:38:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes6c6u8i.scala:38:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes6c6u8i.scala:38:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- test_list) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppjctec56.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length - 1) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124053,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp36j70if.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_list) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwja7gz9.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var result = 0L\n        for (i <- test_map.keys) {\n            if (test_map.contains(-i)) result += test_map(i) * test_map(-i)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrwbzx1e.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrwbzx1e.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplrwbzx1e.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 to test_list.length - 1) {\n            for (j <- i + 1 to test_list.length - 1) {\n                if (test_list(i) * test_list(j) > 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_a_q7c71.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_a_q7c71.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_a_q7c71.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var result = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            if (map.contains(x)) {\n                result += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9avi5_g.scala:20:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9avi5_g.scala:20:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9avi5_g.scala:20:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi1azhm_.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0L\n        for (i <- test_set) {\n            val j = i * i\n            if (test_set.contains(j)) {\n                count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3lfw43qd.scala:17:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (i <- test_set) {\n            if (test_set.contains(i * 2)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhcaj3rr.scala:14:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhcaj3rr.scala:14:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqhcaj3rr.scala:14:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = HashMap[Long, Long]()\n        for (i <- test_list) {\n            if (test_map.contains(i)) test_map(i) += 1\n            else test_map(i) = 1\n        }\n        var count = 0L\n        for (i <- test_map.keys) {\n            if (test_map(i) > 1) count += test_map(i) * (test_map(i) - 1) / 2\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvg2pxgd.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvg2pxgd.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplvg2pxgd.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        for (i <- 0 until test_list.length) {\n            val key = test_list(i)\n            if (map.contains(key)) map(key) += 1\n            else map(key) = 1\n        }\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val key = test_list(i)\n            if (map.contains(key)) {\n                count += map(key)\n                map(key) = 0\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124127,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt3edg82f.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt3edg82f.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt3edg82f.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = test_list(test_list.length - 1 - i)\n            if (map.contains(x)) {\n                count += map(x)\n            }\n            if (map.contains(y)) {\n                count += map(y)\n            }\n            if (x == y) {\n                count += 1\n            }\n            if (map.contains(x)) {\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n            if (map.contains(y)) {\n                map(y) += 1\n            } else {\n                map(y) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp720ii64g.scala:34:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp720ii64g.scala:34:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp720ii64g.scala:34:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (x <- test_list) {\n            if (map.contains(x)) {\n                count += map(x)\n                map(x) += 1\n            } else {\n                map(x) = 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdldfltf4.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdldfltf4.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdldfltf4.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        var count = 0L\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                if (test_list(i) * test_list(j) < 0) count += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509873,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_5i7u7p3.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (test_map.contains(i)) {\n                count += test_map(i)\n                test_map(i) += 1\n            } else {\n                test_map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpid162k8m.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val count = new HashMap[(Long, Long), Long]\n        for (i <- 0 until test_list.length) {\n            for (j <- i + 1 until test_list.length) {\n                val key = (test_list(i), test_list(j))\n                val key_reverse = (test_list(j), test_list(i))\n                if (count.contains(key)) count(key) += 1\n                else if (count.contains(key_reverse)) count(key_reverse) += 1\n                else count(key) = 1\n            }\n        }\n        var result = 0L\n        for (key <- count.keys) {\n            result += count(key) * (count(key) - 1) / 2\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghwkrkca.scala:23:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghwkrkca.scala:23:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpghwkrkca.scala:23:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            }\n            else map(i) = 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124128,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8i8szy9.scala:18:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8i8szy9.scala:18:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8i8szy9.scala:18:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val map = new HashMap[Long, Long]\n        var count = 0L\n        for (i <- test_list) {\n            if (map.contains(i)) {\n                count += map(i)\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps313b1h_.scala:19:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to count bidirectional tuple pairs.\n    def countBidirectional(test_list : List[Long]) : Long = {\n        val test_set = test_list.toSet\n        var count = 0\n        for (x <- test_set) {\n            val y = x * x\n            if (test_set.contains(y)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (3l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 3l), (6l, 5l), (9l, 1l), (6l, 5l), (2l, 1l)))) == (2l));\n    assert(countBidirectional((List[Long]((5l, 6l), (1l, 2l), (6l, 5l), (9l, 2l), (6l, 5l), (2l, 1l)))) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509872,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:52 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgydv8txo.scala:15:62 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(countBidirectional((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m)))) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_445_index_multiplication",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(x => x.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(x => x.toInt).toList\n        val result = tup1.zip(tup2).map(x => x._1 * x._2).sum\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_shbbyo.scala:12:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_shbbyo.scala:12:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_shbbyo.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var tup1_len = tup1.length\n        var tup2_len = tup2.length\n        var len = max(tup1_len, tup2_len)\n        var tup1_new = tup1\n        var tup2_new = tup2\n        if (tup1_len < len) {\n            for (i <- 0 until len - tup1_len) {\n                tup1_new = 0 :: tup1_new\n            }\n        }\n        if (tup2_len < len) {\n            for (i <- 0 until len - tup2_len) {\n                tup2_new = 0 :: tup2_new\n            }\n        }\n        for (i <- 0 until len) {\n            result += tup1_new(i) * tup2_new(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1oj9hga.scala:30:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1oj9hga.scala:30:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe1oj9hga.scala:31:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        for (i <- 0 until test_tup1.toString.length) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var length = max(tup1.length, tup2.length)\n        for (i <- 0 until length) {\n            if (i < tup1.length && i < tup2.length) {\n                result *= tup1(i) * tup2(i)\n            } else if (i < tup1.length) {\n                result *= tup1(i)\n            } else {\n                result *= tup2(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpez4i9tcp.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpez4i9tcp.scala:22:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpez4i9tcp.scala:23:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.map(_.asDigit).toList\n        var tup2 : List[Long] = test_tup2.toString.map(_.asDigit).toList\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgheonmu9.scala:7:66 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtup1\u001b[0m : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] = test_tup1.toString.map(_.asDigit).toList\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    List[\u001b[1m\u001b[31mInt\u001b[0m]\n\u001b[31m  |\u001b[0m                                Required: List[\u001b[1m\u001b[32mLong\u001b[0m]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgheonmu9.scala:8:66 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtup2\u001b[0m : \u001b[35mList\u001b[0m[\u001b[35mLong\u001b[0m] = test_tup2.toString.map(_.asDigit).toList\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    List[\u001b[1m\u001b[31mInt\u001b[0m]\n\u001b[31m  |\u001b[0m                                Required: List[\u001b[1m\u001b[32mLong\u001b[0m]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgheonmu9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgheonmu9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplicatio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg53b3yy2.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg53b3yy2.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg53b3yy2.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2rc7f8e.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2rc7f8e.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz2rc7f8e.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(x => x.asDigit.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(x => x.asDigit.toLong)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_yagoaa.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_yagoaa.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_yagoaa.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08cwm553.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08cwm553.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp08cwm553.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyovt280g.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyovt280g.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyovt280g.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8mzuxwz.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8mzuxwz.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8mzuxwz.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var tup3 = new Array[Long](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) * tup2(i)\n        }\n        return tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_arr = test_tup1.toString.toList.map(_.asDigit)\n        var test_tup2_arr = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 to test_tup1_arr.length - 1) {\n            result = result + test_tup1_arr(i) * test_tup2_arr(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujsecedq.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujsecedq.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpujsecedq.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.map(_.asDigit.toLong).toList\n        var tup2 : List[Long] = test_tup2.toString.map(_.asDigit.toLong).toList\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var test_tup2_list = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 to test_tup1_list.length - 1) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfvlift5.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfvlift5.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfvlift5.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Int] = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 : List[Int] = test_tup2.toString.toList.map(_.toString.toInt)\n        var tup3 : List[Int] = List()\n        if (tup1.length > tup2.length) {\n            for (i <- 0 until tup2.length) {\n                tup3 = tup3 :+ tup1(i) * tup2(i)\n            }\n            for (i <- tup2.length until tup1.length) {\n                tup3 = tup3 :+ tup1(i)\n            }\n        }\n        else {\n            for (i <- 0 until tup1.length) {\n                tup3 = tup3 :+ tup1(i) * tup2(i)\n            }\n            for (i <- tup1.length until tup2.length) {\n                tup3 = tup3 :+ tup2(i)\n            }\n        }\n        result = tup3.mkString.toLong\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz400scqz.scala:30:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz400scqz.scala:30:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz400scqz.scala:31:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var tup1_len = tup1.length\n        var tup2_len = tup2.length\n        var max_len = max(tup1_len, tup2_len)\n        var min_len = min(tup1_len, tup2_len)\n        var diff = max_len - min_len\n        if (tup1_len > tup2_len) {\n            for (i <- 0 until diff) {\n                tup2 = 0 :: tup2\n            }\n        }\n        else {\n            for (i <- 0 until diff) {\n                tup1 = 0 :: tup1\n            }\n        }\n        for (i <- 0 until max_len) {\n            result = result * (tup1(i).asDigit * tup2(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlw78z27.scala:30:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlw78z27.scala:30:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvlw78z27.scala:31:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(x => x.toString.toLong)\n        var tup2 = test_tup2.toString.toList.map(x => x.toString.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vbxj56y.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vbxj56y.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vbxj56y.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            result += (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.toString.toInt)\n        var test_tup2_list = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : List[Long] = test_tup1.toString.toList.map(x => x.asDigit.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(x => x.asDigit.toLong)\n        var result : Long = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8adivq9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8adivq9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8adivq9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(_.toString.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(_.toString.toLong)\n        for (i <- 0 until tup1.length) {\n            sum += tup1(i) * tup2(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctsoqh_i.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctsoqh_i.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctsoqh_i.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgkmvmik.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgkmvmik.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgkmvmik.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_arr_len = test_tup1_arr.length\n        var test_tup2_arr_len = test_tup2_arr.length\n        var test_tup1_arr_rev = test_tup1_arr.reverse\n        var test_tup2_arr_rev = test_tup2_arr.reverse\n        var test_tup1_arr_rev_len = test_tup1_arr_rev.length\n        var test_tup2_arr_rev_len = test_tup2_arr_rev.length\n        var test_tup1_arr_rev_str = test_tup1_arr_rev.mkString(\"\")\n        var test_tup2_arr_rev_str = test_tup2_arr_rev.mkString(\"\")\n        var test_tup1_arr_rev_int = test_tup1_arr_rev_str.toInt\n        var test_tup2_arr_rev_int = test_tup2_arr_rev_str.toInt\n        var test_tup1_arr_rev_int_str = test_tup1_arr_rev_int.toString\n        var test_tup2_arr_rev_int_str = test_tup2_arr_rev_int.toString\n        var test_tup1_arr_rev_int_arr = test_tup1_arr_rev_int_str.toCharArray\n        var test_tup2_arr_rev_int_arr = test_tup2_arr_rev_int_str.toCharArray\n        var test_tup1_arr_rev_int_arr_len = test_tup1_arr_rev_int_arr.length\n        var test_tup2_arr\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1h0dtp4u.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h0dtp4u.scala:26:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h0dtp4u.scala:28:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h0dtp4u.scala:28:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(_.toString.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(_.toString.toLong)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5_jyk7w.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5_jyk7w.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt5_jyk7w.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var i = 0\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxz_27lye.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxz_27lye.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxz_27lye.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 9) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2v7w31nm.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2v7w31nm.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2v7w31nm.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var tup1_size = tup1.size\n        var tup2_size = tup2.size\n        var max_size = max(tup1_size, tup2_size)\n        var min_size = min(tup1_size, tup2_size)\n        var diff = max_size - min_size\n        if (tup1_size > tup2_size) {\n            for (i <- 0 until diff) {\n                tup2 = tup2.::(0)\n            }\n        }\n        else {\n            for (i <- 0 until diff) {\n                tup1 = tup1.::(0)\n            }\n        }\n        for (i <- 0 until max_size) {\n            sum += (tup1(i).asDigit * tup2(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpza3tvt7l.scala:30:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpza3tvt7l.scala:30:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpza3tvt7l.scala:31:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1.toString\n        var tup2 = test_tup2.toString\n        var len = max(tup1.length, tup2.length)\n        while (tup1.length < len) tup1 = \"0\" + tup1\n        while (tup2.length < len) tup2 = \"0\" + tup2\n        for (i <- 0 until len) {\n            result += (tup1(i).asDigit * tup2(i).asDigit) * pow(10, len - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wlv8cd3.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wlv8cd3.scala:18:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wlv8cd3.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 && tup2 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(x => x.toString.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(x => x.toString.toLong)\n        var tup3 : List[Long] = List()\n        if (tup1.length > tup2.length) {\n            for (i <- 0 until tup2.length) {\n                tup3 = tup3 :+ tup1(i) * tup2(i)\n            }\n            for (i <- tup2.length until tup1.length) {\n                tup3 = tup3 :+ tup1(i)\n            }\n        }\n        else {\n            for (i <- 0 until tup1.length) {\n                tup3 = tup3 :+ tup1(i) * tup2(i)\n            }\n            for (i <- tup1.length until tup2.length) {\n                tup3 = tup3 :+ tup2(i)\n            }\n        }\n        for (i <- 0 until tup3.length) {\n            result = result * 10 + tup3(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia7r7kx4.scala:32:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia7r7kx4.scala:32:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia7r7kx4.scala:33:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 != 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += (digit1 * digit2) * pow(10, i).toLong\n            i += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9s6c1m9l.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9s6c1m9l.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9s6c1m9l.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 to tup1.length - 1) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        if (tup1.length > tup2.length) {\n            for (i <- 0 until tup2.length) {\n                result += (tup1(i).asDigit * tup2(i).asDigit)\n            }\n            for (i <- tup2.length until tup1.length) {\n                result += tup1(i).asDigit\n            }\n        }\n        else {\n            for (i <- 0 until tup1.length) {\n                result += (tup1(i).asDigit * tup2(i).asDigit)\n            }\n            for (i <- tup1.length until tup2.length) {\n                result += tup2(i).asDigit\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ydtcc4u.scala:28:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ydtcc4u.scala:28:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ydtcc4u.scala:29:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmwl6swo.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmwl6swo.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxmwl6swo.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 to tup1.length - 1) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm42px0f3.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm42px0f3.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm42px0f3.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqeeab2v.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqeeab2v.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptqeeab2v.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += digit1 * digit2 * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(x => x.toString.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(x => x.toString.toLong)\n        var tup1_len : Int = tup1.length\n        var tup2_len : Int = tup2.length\n        var len : Int = 0\n        if (tup1_len > tup2_len) len = tup1_len\n        else len = tup2_len\n        for (i <- 0 until len) {\n            if (i < tup1_len && i < tup2_len) {\n                result = result + (tup1(i) * tup2(i))\n            }\n            else if (i < tup1_len) {\n                result = result + tup1(i)\n            }\n            else if (i < tup2_len) {\n                result = result + tup2(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiu57lt8s.scala:28:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiu57lt8s.scala:28:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiu57lt8s.scala:29:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzog83odh.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphs13zhyw.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphs13zhyw.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphs13zhyw.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Array[Long] = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 : Array[Long] = test_tup2.toString.split(\"\").map(_.toLong)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4eb7qb1.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4eb7qb1.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4eb7qb1.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until min(tup1.length, tup2.length)) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzt60s9w9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzt60s9w9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzt60s9w9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var index : Int = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, index).toLong\n            tup1 /= 10\n            tup2 /= 10\n            index += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucbxqt9s.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucbxqt9s.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucbxqt9s.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65p6zk1x.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65p6zk1x.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65p6zk1x.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        var count = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).toString.toInt * test_tup2_list(i).toString.toInt) * pow(10, count).toInt\n            count += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zczkqv1.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zczkqv1.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4zczkqv1.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.toString.toInt)\n        var test_tup2_list = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbeilktp8.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 to tup1.length - 1) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var result = 0L\n        for (i <- 0 to test_tup1_str.length - 1) {\n            result += (test_tup1_str(i).asDigit * test_tup2_str(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwapogo5c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwapogo5c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwapogo5c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).asDigit * test_tup2_list(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.asDigit)\n        var test_tup2_list = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 to test_tup1_list.length - 1) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 to tup1.length - 1) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4z0awx5m.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ln4nmz4.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ln4nmz4.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ln4nmz4.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result = result + tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo3sefvf9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo3sefvf9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo3sefvf9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var i : Int = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0;\n        var tup1 : Long = test_tup1;\n        var tup2 : Long = test_tup2;\n        while (tup1 != 0 && tup2 != 0) {\n            result = result + (tup1 % 10) * (tup2 % 10);\n            tup1 = tup1 / 10;\n            tup2 = tup2 / 10;\n        }\n        return result;\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeaoen11j.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeaoen11j.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeaoen11j.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += digit1 * digit2 * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjsf5ud1.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjsf5ud1.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwjsf5ud1.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).asDigit * test_tup2_list(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).asDigit * test_tup2_list(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.asDigit)\n        var test_tup2_list = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += (tup1(i).asDigit * tup2(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp386z1dot.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp386z1dot.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp386z1dot.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 || tup2 != 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprv6xze_4.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprv6xze_4.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprv6xze_4.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.toString.toLong)\n        var test_tup2_list = test_tup2.toString.toList.map(_.toString.toLong)\n        var result_list = ListBuffer[Long]()\n        for (i <- 0 until test_tup1_list.length) {\n            result_list += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result_list.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph41xged4.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph41xged4.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph41xged4.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_arr_rev = test_tup1_arr.reverse\n        var test_tup2_arr_rev = test_tup2_arr.reverse\n        var test_tup1_arr_rev_int = test_tup1_arr_rev.map(_.toString.toInt)\n        var test_tup2_arr_rev_int = test_tup2_arr_rev.map(_.toString.toInt)\n        var test_tup1_arr_rev_int_len = test_tup1_arr_rev_int.length\n        var test_tup2_arr_rev_int_len = test_tup2_arr_rev_int.length\n        var test_tup1_arr_rev_int_len_max = max(test_tup1_arr_rev_int_len, test_tup2_arr_rev_int_len)\n        var test_tup1_arr_rev_int_len_min = min(test_tup1_arr_rev_int_len, test_tup2_arr_rev_int_len)\n        var test_tup1_arr_rev_int_len_max_diff = test_tup1_arr_rev_int_len_max - test_tup1_arr_rev_int_len_min\n        var test_tup1_arr_rev_int_len_max_diff_arr = new Array[Int](test_tup1_arr_rev_int_len_max_diff)\n        var test_tup1_arr_rev_int_len_max_diff_arr_len = test_tup1_arr_rev_int_len_max_diff_arr.length\n        var test_tup1_arr_rev_int_len\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpk_eodoiu.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_eodoiu.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_eodoiu.scala:24:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_eodoiu.scala:24:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0 && tup2 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfzltkz30.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfzltkz30.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfzltkz30.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.map(_.asDigit.toLong).toList\n        var tup2 : List[Long] = test_tup2.toString.map(_.asDigit.toLong).toList\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdrj7p01k.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 != 0 && tup2 != 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += digit1 * digit2 * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwetglerl.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwetglerl.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwetglerl.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123477,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplg1km7ez.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var i = 0\n        while (i < tup1.length) {\n            result += tup1(i) * tup2(i)\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2edkvz16.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2edkvz16.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2edkvz16.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.asDigit)\n        var test_tup2_list = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 to test_tup1_list.length - 1) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv4smcv4e.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").filter(_ != \"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").filter(_ != \"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4op7fc_i.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4op7fc_i.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4op7fc_i.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpca7hqnvq.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result : Long = 0\n        for (i <- 0 to test_tup1_list.length - 1) {\n            result += (test_tup1_list(i).toString.toInt * test_tup2_list(i).toString.toInt)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5b6av7z.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5b6av7z.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk5b6av7z.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 && tup2 != 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkw_589n9.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkw_589n9.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkw_589n9.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 && tup2 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebo1fs3d.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var count = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, count).toLong\n            tup1 /= 10\n            tup2 /= 10\n            count += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2szdun3.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2szdun3.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2szdun3.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        for (i <- 0 until test_tup1.toString.length) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += (tup1(i).toString.toInt * tup2(i).toString.toInt)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqls3g_i.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqls3g_i.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppqls3g_i.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = test_tup1.toString.toList.map(x => x.asDigit.toLong)\n        var tup2 : List[Long] = test_tup2.toString.toList.map(x => x.asDigit.toLong)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgxdjbqa9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Array[Long] = test_tup1.toString.map(_.asDigit).map(_.toLong)\n        var tup2 : Array[Long] = test_tup2.toString.map(_.asDigit).map(_.toLong)\n        for (i <- 0 until tup1.length) {\n            sum += tup1(i) * tup2(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpahr9p2q2.scala:7:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtup1\u001b[0m : \u001b[35mArray\u001b[0m[\u001b[35mLong\u001b[0m] = test_tup1.toString.map(_.asDigit).map(_.toLong)\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 Found:    IndexedSeq[Long]\n\u001b[31m  |\u001b[0m                                 Required: Array[Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpahr9p2q2.scala:8:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtup2\u001b[0m : \u001b[35mArray\u001b[0m[\u001b[35mLong\u001b[0m] = test_tup2.toString.map(_.asDigit).map(_.toLong)\n\u001b[31m\u001b[31m  |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                 Found:    IndexedSeq[Long]\n\u001b[31m  |\u001b[0m                                 Required: Array[Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpahr9p2q2.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpahr9p2q2.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplicatio",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixetmx8j.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var res = 0\n        for (i <- 0 until tup1.length) {\n            res += (tup1(i).toString.toInt * tup2(i).toString.toInt)\n        }\n        return res\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr38b3_sf.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr38b3_sf.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr38b3_sf.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).asDigit * test_tup2_list(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var tup1_len = tup1.length\n        var tup2_len = tup2.length\n        var max_len = max(tup1_len, tup2_len)\n        var min_len = min(tup1_len, tup2_len)\n        var diff = max_len - min_len\n        if (tup1_len > tup2_len) {\n            for (i <- 1 to diff) {\n                tup2 = tup2 :+ '0'\n            }\n        }\n        else {\n            for (i <- 1 to diff) {\n                tup1 = tup1 :+ '0'\n            }\n        }\n        for (i <- 0 until max_len) {\n            result += (tup1(i).asDigit * tup2(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamops1mq.scala:30:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamops1mq.scala:30:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamops1mq.scala:31:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 || tup2 > 0) {\n            result = result + ((tup1 % 10) * (tup2 % 10))\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph6ud4w1f.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph6ud4w1f.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph6ud4w1f.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgknmht10.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgknmht10.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgknmht10.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.map(_.asDigit).toList\n        var tup2 = test_tup2.toString.map(_.asDigit).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 to tup1.length - 1) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwje73in.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += digit1 * digit2 * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            result = result + (tup1 % 10) * (tup2 % 10)\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4752t0l8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4752t0l8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4752t0l8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.asDigit)\n        var test_tup2_list = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1b7iub.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(x => x.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(x => x.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var tup_len = max(tup1.length, tup2.length)\n        for (i <- 0 until tup_len) {\n            if (i < tup1.length && i < tup2.length) {\n                result += tup1(i) * tup2(i)\n            } else if (i < tup1.length) {\n                result += tup1(i)\n            } else {\n                result += tup2(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwszait4c.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwszait4c.scala:22:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwszait4c.scala:23:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy61655b_.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy61655b_.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy61655b_.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        for (i <- 0 until test_tup1_list.length) {\n            result += (test_tup1_list(i).asDigit * test_tup2_list(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123463,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ravq38c.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        var tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj5qwekoe.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            result += (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123444,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq0hxvytj.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var i : Int = 0\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123479,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplmsmqssi.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += tup1 % 10 * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_d_tja6.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_d_tja6.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_d_tja6.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result = result + digit1 * digit2\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplenh8j8l.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplenh8j8l.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplenh8j8l.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(x => x.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(x => x.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dvf1e1f.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += (tup1(i) * tup2(i))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjnilllmo.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjnilllmo.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjnilllmo.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        for (i <- 0 until tup1.length) {\n            result *= (tup1(i).asDigit * tup2(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dzvby7g.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dzvby7g.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9dzvby7g.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Array[Long] = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 : Array[Long] = test_tup2.toString.split(\"\").map(_.toLong)\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vua1s5x.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsvrw3l_t.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var tup3 = new Array[Long](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) * tup2(i)\n        }\n        return tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkpfu837.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123461,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkngnhbwd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzfqb3my.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzfqb3my.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzfqb3my.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 1\n        for (i <- 0 until test_tup1.toString.length) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s90ryrh.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123480,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj5flle.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result *= (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123478,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7szao4a.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnqp_0npd.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.toString.toInt)\n        var test_tup2_list = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0\n        for (i <- 0 to test_tup1_list.length - 1) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk9_x5xt.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk9_x5xt.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk9_x5xt.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        for (i <- 0 until tup1.length) {\n            result += (tup1(i).toString.toInt * tup2(i).toString.toInt)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzw1mpqd9.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzw1mpqd9.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzw1mpqd9.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123445,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxe1_4brf.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 != 0) {\n            result += (tup1 % 10) * (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp679x_7wf.scala:19:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp679x_7wf.scala:19:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp679x_7wf.scala:20:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0.toLong\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56du98n5.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56du98n5.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56du98n5.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var tup3 = ArrayBuffer[Int]()\n        for (i <- 0 until tup1.length) {\n            tup3 += tup1(i) * tup2(i)\n        }\n        return tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvip6zt7.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvip6zt7.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwvip6zt7.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_len = test_tup1_arr.length\n        var test_tup2_len = test_tup2_arr.length\n        var test_tup1_arr_rev = test_tup1_arr.reverse\n        var test_tup2_arr_rev = test_tup2_arr.reverse\n        var test_tup1_arr_rev_int = test_tup1_arr_rev.map(_.toString.toInt)\n        var test_tup2_arr_rev_int = test_tup2_arr_rev.map(_.toString.toInt)\n        var test_tup1_arr_rev_int_len = test_tup1_arr_rev_int.length\n        var test_tup2_arr_rev_int_len = test_tup2_arr_rev_int.length\n        var test_tup1_arr_rev_int_len_max = max(test_tup1_arr_rev_int_len, test_tup2_arr_rev_int_len)\n        var test_tup1_arr_rev_int_len_min = min(test_tup1_arr_rev_int_len, test_tup2_arr_rev_int_len)\n        var test_tup1_arr_rev_int_len_diff = test_tup1_arr_rev_int_len_max - test_tup1_arr_rev_int_len_min\n        var test_tup1_arr_rev_int_len_diff_arr = new Array[Int](test_tup1_arr_rev_int_len_diff)\n        var test_tup1_arr_rev_int_len_diff_arr_len = test_tup1\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxfjwo_k.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxfjwo_k.scala:25:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxfjwo_k.scala:25:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxfjwo_k.scala:26:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            result += digit1 * digit2 * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123460,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:21:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_60__y40.scala:22:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmahafqpa.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var tup3 = new Array[Int](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) * tup2(i)\n        }\n        return tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyczecyps.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result = result + ((tup1 % 10) * (tup2 % 10))\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxea28ze.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxea28ze.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoxea28ze.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var tup3 = new Array[Int](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) * tup2(i)\n        }\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc8zzema.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc8zzema.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplc8zzema.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        var tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var tup3 = new Array[Int](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) * tup2(i)\n        }\n        return tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptyvmhpke.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqd9y75l.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqd9y75l.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmqd9y75l.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplviyri2n.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var tup1_len = tup1.length\n        var tup2_len = tup2.length\n        var len = max(tup1_len, tup2_len)\n        var tup1_arr = new Array[Int](len)\n        var tup2_arr = new Array[Int](len)\n        for (i <- 0 until tup1_len) {\n            tup1_arr(i) = tup1(i).toString.toInt\n        }\n        for (i <- 0 until tup2_len) {\n            tup2_arr(i) = tup2(i).toString.toInt\n        }\n        for (i <- 0 until len) {\n            result += tup1_arr(i) * tup2_arr(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdi6gzue.scala:26:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdi6gzue.scala:26:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdi6gzue.scala:27:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.map(_.asDigit).toList\n        var tup2 = test_tup2.toString.map(_.asDigit).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3s050w7.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 1L\n        for (i <- 0 until test_tup1.toString.length) {\n            result *= (test_tup1.toString.charAt(i).asDigit * test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x5vobob.scala:13:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x5vobob.scala:13:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0x5vobob.scala:14:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 && tup2 != 0) {\n            result = result + ((tup1 % 10) * (tup2 % 10))\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl5roy6_g.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl5roy6_g.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl5roy6_g.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList.map(_.asDigit)\n        var tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            result += tup1(i) * tup2(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1665510618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_ew_7nv2.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzgbgwk5.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList.map(_.toString.toLong)\n        var test_tup2_list = test_tup2.toString.toList.map(_.toString.toLong)\n        var result = 0L\n        for (i <- 0 until test_tup1_list.length) {\n            result += test_tup1_list(i) * test_tup2_list(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju_ycc2y.scala:15:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju_ycc2y.scala:15:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpju_ycc2y.scala:16:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10) * (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123462,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplif75cy8.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    def indexMultiplication(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = test_tup1.toString.toList\n        var test_tup2_list = test_tup2.toString.toList\n        var result = 0\n        var index = 0\n        while (index < test_tup1_list.length) {\n            result += (test_tup1_list(index).asDigit * test_tup2_list(index).asDigit)\n            index += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(indexMultiplication(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((6l, 21l), (12l, 45l), (2l, 9l), (7l, 30l)));\n    assert(indexMultiplication(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((14l, 32l), (20l, 60l), (6l, 20l), (16l, 44l)));\n    assert(indexMultiplication(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((24l, 45l), (30l, 77l), (12l, 33l), (27l, 60l)));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuiw1659g.scala:17:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuiw1659g.scala:17:74 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(indexMultiplication(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m6l\u001b[0m, \u001b[31m21l\u001b[0m), (\u001b[31m12l\u001b[0m, \u001b[31m45l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m30l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuiw1659g.scala:18:31 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(indexMultiplication(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m14l\u001b[0m, \u001b[31m32l\u001b[0m), (\u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
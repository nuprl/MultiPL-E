{
  "name": "mbpp_116_tuple_to_int",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_116_tuple_to_int.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 1\n        while (num > 0) {\n            result += (num % 10) * i\n            i *= 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8lqnbi1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8lqnbi1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8lqnbi1.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 1\n        while (nums > 0) {\n            result += (nums % 10) * i\n            nums /= 10\n            i *= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxpse7r1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var temp : Long = nums\n        var i : Int = 0\n        while (temp > 0) {\n            result += (temp % 10) * pow(10, i).toLong\n            temp /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpco3bguu9.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprw025b3z.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        while (num != 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwdra40n.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwdra40n.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkwdra40n.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0\n        var i = 0\n        while (nums > 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpytkjez78.scala:9:16 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            res += (nums % \u001b[31m10\u001b[0m) * pow(\u001b[31m10\u001b[0m, i).toLong\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpytkjez78.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytkjez78.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytkjez78.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpytkjez78.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        val digits = nums.toString.map(_.asDigit)\n        digits.foldLeft(0)((acc, x) => acc * 10 + x)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kflqxn4.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kflqxn4.scala:11:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kflqxn4.scala:12:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums > 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx5vwlvc1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpco3bguu9.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var count = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, count).toLong\n            count += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp876eq2mt.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp876eq2mt.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp876eq2mt.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp876eq2mt.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp20ty8szo.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        var num : Long = nums\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuk8pcijj.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuk8pcijj.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuk8pcijj.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums > 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx5vwlvc1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Int = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69tck4yo.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69tck4yo.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69tck4yo.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while(nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqrzspz1w.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrzspz1w.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrzspz1w.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqrzspz1w.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums > 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx5vwlvc1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvz850mt3.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz850mt3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz850mt3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvz850mt3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            val digit = nums % 10\n            result += digit * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1vw0h3kc.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var num = nums\n        var result = 0\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toInt\n            i += 1\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc_k362pb.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += (num % \u001b[31m10\u001b[0m) * pow(\u001b[31m10\u001b[0m, i).toInt\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k362pb.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k362pb.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_k362pb.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Long = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            i += 1\n            num /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7e0mwtp.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7e0mwtp.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7e0mwtp.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums > 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx5vwlvc1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx5vwlvc1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var n : Long = nums\n        while (n > 0) {\n            result = result * 10 + n % 10\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tta6gfp.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tta6gfp.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tta6gfp.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        def helper(nums : List[Long], acc : Long) : Long = {\n            if (nums.isEmpty) acc\n            else helper(nums.tail, acc * 10 + nums.head)\n        }\n        helper(nums.toString.toList.map(_.toString.toLong), 0)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxglhnr_.scala:13:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxglhnr_.scala:14:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxglhnr_.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprw025b3z.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprw025b3z.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 1\n        while (nums > 0) {\n            result += (nums % 10) * i\n            nums /= 10\n            i *= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxpse7r1.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxpse7r1.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpud1uedyr.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpud1uedyr.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbz_rf81f.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbz_rf81f.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbz_rf81f.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbz_rf81f.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv99p134.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv99p134.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmv99p134.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp064gzeiq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp064gzeiq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp064gzeiq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp064gzeiq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 1\n        while (nums > 0) {\n            result += (nums % 10) * i\n            i *= 10\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpngiquces.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngiquces.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngiquces.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngiquces.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var n : Long = nums\n        var i : Long = 0\n        while (n > 0) {\n            result += (n % 10) * pow(10, i).toLong\n            n /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123919,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwi0bckw.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwi0bckw.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwi0bckw.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
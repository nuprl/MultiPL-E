{
  "name": "mbpp_750_add_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_750_add_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list : List[Long] = List()\n        for (i <- test_list) {\n            new_list = (i + test_tup) :: new_list\n        }\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbef94_k9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbef94_k9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbef94_k9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        val new_list = test_list :+ test_tup\n        new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnz8fam79.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnz8fam79.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnz8fam79.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list : List[Long] = List()\n        for (i <- 0 to test_list.length - 1) {\n            result_list = result_list :+ test_list(i) + test_tup\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7i33zoc5.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7i33zoc5.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7i33zoc5.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ test_list(i) + test_tup\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = test_tup :: result_list\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        // Write your code here\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzjchs9q1.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var sum = 0L\n        var new_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            sum = test_list(i) + test_tup\n            new_list = new_list :+ sum\n        }\n        new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputy75lrr.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputy75lrr.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmputy75lrr.scala:17:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 to test_list.length - 1) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69lvrema.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69lvrema.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69lvrema.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tg5sbdb.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = (i + test_tup) :: result\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list ::: List(test_tup)\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2nsgmcyl.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2nsgmcyl.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2nsgmcyl.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        // Add the tuple to the list.\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkjm5lw4.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkjm5lw4.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptkjm5lw4.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = (i + test_tup) :: result\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwuoa0g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ i + test_tup\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5k76g56g.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5k76g56g.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5k76g56g.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var test_list_new = test_list\n        test_list_new = test_tup :: test_list_new\n        test_list_new\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdhrt0ht.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            new_list = new_list :+ test_list(i) + test_tup\n        }\n        new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17sas6po.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17sas6po.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17sas6po.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var list = test_list\n        list = list :+ test_tup\n        return list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjeci1dv4.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjeci1dv4.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjeci1dv4.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result : List[Long] = List()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmj_2lwv2.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = test_tup :: result_list\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6b9suy50.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- test_list) {\n            result = result :+ (i + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_sx4nho9.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = result_list :+ test_tup\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        result = test_list :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ test_list(i) + test_tup\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnfprdtkw.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = result_list :+ test_tup\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = new_list :+ test_tup\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz_1choie.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = test_list\n        result_list = result_list :+ test_tup\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8u_lskno.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        result = test_list :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = List[Long]()\n        for (i <- test_list) {\n            result_list = result_list :+ i + test_tup\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyndjuw7e.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyndjuw7e.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyndjuw7e.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result_list = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result_list = result_list :+ (test_list(i) + test_tup)\n        }\n        return result_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprnlwzwe1.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = test_list\n        new_list = test_tup :: new_list\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510439,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4a67bh9h.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var new_list = List[Long]()\n        for (i <- test_list) {\n            new_list = new_list :+ (i + test_tup)\n        }\n        return new_list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplz25lx1b.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplz25lx1b.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplz25lx1b.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) + test_tup)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpip1m8jee.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        return test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu08ix_zn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = test_list\n        result = result :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123200,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8zjflrn.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var result = List[Long]()\n        result = test_list :+ test_tup\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjf2d044q.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        var list = test_list\n        list = list :+ test_tup\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8_xzgrf.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8_xzgrf.scala:12:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8_xzgrf.scala:13:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        if (test_list.isEmpty) test_tup :: Nil\n        else {\n            val (head, tail) = (test_list.head, test_list.tail)\n            if (head < test_tup) head :: addTuple(tail, test_tup)\n            else test_tup :: test_list\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1666123201,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxxxj1ub.scala:14:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxxxj1ub.scala:15:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxxxj1ub.scala:16:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to add the given tuple to the given list.\n    def addTuple(test_list : List[Long], test_tup : Long) : List[Long] = {\n        test_list :+ test_tup\n    }\n    def main(args: Array[String]) = {\n    assert(addTuple((List[Long](5l.toLong, 6l.toLong, 7l.toLong)), (9l, 10l)).equals((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 9l.toLong, 10l.toLong))));\n    assert(addTuple((List[Long](6l.toLong, 7l.toLong, 8l.toLong)), (10l, 11l)).equals((List[Long](6l.toLong, 7l.toLong, 8l.toLong, 10l.toLong, 11l.toLong))));\n    assert(addTuple((List[Long](7l.toLong, 8l.toLong, 9l.toLong)), (11l, 12l)).equals((List[Long](7l.toLong, 8l.toLong, 9l.toLong, 11l.toLong, 12l.toLong))));\n    }\n\n}\n",
      "timestamp": 1665510438,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:9:67 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong)), (\u001b[31m9l\u001b[0m, \u001b[31m10l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m5l\u001b[0m.toLong, \u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                   ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:10:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong)), (\u001b[31m10l\u001b[0m, \u001b[31m11l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m6l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m10l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pmxhps7.scala:11:67 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addTuple((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong)), (\u001b[31m11l\u001b[0m, \u001b[31m12l\u001b[0m)).equals((List[\u001b[35mLong\u001b[0m](\u001b[31m7l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m9l\u001b[0m.toLong, \u001b[31m11l\u001b[0m.toLong, \u001b[31m12l\u001b[0m.toLong))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m             ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
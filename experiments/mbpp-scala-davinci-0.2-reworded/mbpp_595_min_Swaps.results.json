{
  "name": "mbpp_595_min_Swaps",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2\n        else \"Impossible\"\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pquvx5g.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pquvx5g.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pquvx5g.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4o3f9dx.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4o3f9dx.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz4o3f9dx.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvd0oerqm.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvd0oerqm.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvd0oerqm.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val l1 = str1.length\n        val l2 = str2.length\n        if (l1 != l2) {\n            return -1\n        }\n        var count = 0\n        for (i <- 0 until l1) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeq9alx8a.scala:21:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeq9alx8a.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeq9alx8a.scala:23:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 != 0) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val len = str1.length\n        var count = 0\n        for (i <- 0 until len) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocqqqx4o.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocqqqx4o.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpocqqqx4o.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n      val n = str1.length\n      var count = 0\n      for (i <- 0 until n) {\n        if (str1(i) != str2(i)) count += 1\n      }\n      count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68awmez9.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68awmez9.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68awmez9.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2\n        else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe8h55jtz.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe8h55jtz.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe8h55jtz.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if(str1.length != str2.length) return -1\n        var count = 0\n        for(i <- 0 until str1.length) {\n            if(str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if(str1.length != str2.length) return -1\n        var count = 0\n        for(i <- 0 until str1.length) {\n            if(str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Strings are not of same length\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Strings are not of equal length\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2htjofak.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2htjofak.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2htjofak.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid Input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Strings are not of same length\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn2dm7kcf.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val str1Length = str1.length\n        val str2Length = str2.length\n        if (str1Length != str2Length) {\n            return \"Error: Strings are not of equal length\"\n        }\n        var count = 0\n        for (i <- 0 until str1Length) {\n            if (str1.charAt(i) != str2.charAt(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpebfb613j.scala:20:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpebfb613j.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpebfb613j.scala:22:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        val arr1 = str1.toCharArray\n        val arr2 = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (arr1(i) != arr2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt3y1jjti.scala:19:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt3y1jjti.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt3y1jjti.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Strings are not of equal length\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7adgv8lp.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7adgv8lp.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7adgv8lp.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Strings are not of same length\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh12z_18.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh12z_18.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvh12z_18.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count1 = 0\n        var count2 = 0\n        for (i <- 0 until n) {\n            if (str1(i) == '1') count1 += 1\n            if (str2(i) == '1') count2 += 1\n        }\n        if (count1 != count2) return -1\n        var res = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) res += 1\n        }\n        res / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5z1eiy44.scala:23:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5z1eiy44.scala:24:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5z1eiy44.scala:25:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7mg2xf.scala:10:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7mg2xf.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6p7mg2xf.scala:12:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        var i = 0\n        while (i < str1.length) {\n            if (str1(i) != str2(i)) count += 1\n            i += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6puypn4b.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6puypn4b.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6puypn4b.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) -1\n        else count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblc6bsyd.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblc6bsyd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblc6bsyd.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        // Return the number of swaps\n        // Return -1 if the strings are not of equal length\n        // Return -1 if the strings are not binary\n        // Return -1 if the strings are not of equal length\n        // Return -1 if the strings are not binary\n        if (str1.length != str2.length) return -1\n        if (!str1.forall(c => c == '0' || c == '1')) return -1\n        if (!str2.forall(c => c == '0' || c == '1')) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo30lrwyq.scala:22:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo30lrwyq.scala:23:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo30lrwyq.scala:24:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return -1\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        if (str1.length != str2.length) {\n            return \"Invalid input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy452a6q9.scala:19:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy452a6q9.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy452a6q9.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid Input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        else return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275fjsrw.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275fjsrw.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275fjsrw.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return -1\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtl96xvg.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2u93rq0.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2u93rq0.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2u93rq0.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 != 0) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4k9k3_rr.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:16:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzh13d3ma.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2 else -1\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5x8t_fsz.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5x8t_fsz.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5x8t_fsz.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd80g7f_a.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd80g7f_a.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd80g7f_a.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val len = str1.length\n        var count = 0\n        for (i <- 0 until len) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) -1 else count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ozfai9v.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ozfai9v.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5ozfai9v.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid Input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoja7o34q.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 0) count / 2 else \"Impossible\"\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnngm5k19.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnngm5k19.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnngm5k19.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid Input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Not Possible\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8gad822.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8gad822.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd8gad822.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 to str1.length - 1) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122526,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_g552u.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_g552u.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5t_g552u.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122526,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy357gl49.scala:13:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy357gl49.scala:14:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy357gl49.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if(str1.length != str2.length) return -1\n        var count = 0\n        for(i <- 0 until str1.length) {\n            if(str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxk692fpm.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid Input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf_vyd0br.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val str1_arr = str1.toCharArray\n        val str2_arr = str2.toCharArray\n        var count = 0\n        for (i <- 0 to str1_arr.length - 1) {\n            if (str1_arr(i) != str2_arr(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4pa30lro.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4pa30lro.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4pa30lro.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) {\n            return \"Invalid input\"\n        }\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122526,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0gw64b2.scala:18:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0gw64b2.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp0gw64b2.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val l1 = str1.length\n        val l2 = str2.length\n        if (l1 != l2) return -1\n        val diff = str1.zip(str2).filter(x => x._1 != x._2).length\n        if (diff % 2 != 0) return -1\n        return diff / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2hki7yd.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2hki7yd.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2hki7yd.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        val a = str1.toCharArray\n        val b = str2.toCharArray\n        var count = 0\n        for (i <- 0 until n) {\n            if (a(i) != b(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t24zrqo.scala:19:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t24zrqo.scala:20:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t24zrqo.scala:21:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:15:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaztf0coy.scala:17:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid Input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsmdltema.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2_jegjfx.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2_jegjfx.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2_jegjfx.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        return count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpucxzomll.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdf1fy8hw.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdf1fy8hw.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdf1fy8hw.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val len = str1.length\n        var count = 0\n        for (i <- 0 until len) {\n            if (str1(i) != str2(i)) {\n                count += 1\n            }\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp723gtxsl.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp723gtxsl.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp723gtxsl.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return \"Invalid input\"\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexznz6ax.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        if (count % 2 == 1) return -1\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa8_xv5dr.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa8_xv5dr.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa8_xv5dr.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1666122522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: Any\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:10:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1gc5nrb.scala:11:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        // Write your code here\n        val n = str1.length\n        val m = str2.length\n        if (n != m) return -1\n        var count = 0\n        for (i <- 0 until n) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:17:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:18:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplwh5o9wh.scala:19:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n    def minSwaps(str1 : String, str2 : String) : Any = {\n        if (str1.length != str2.length) return -1\n        var count = 0\n        for (i <- 0 until str1.length) {\n            if (str1(i) != str2(i)) count += 1\n        }\n        count / 2\n    }\n    def main(args: Array[String]) = {\n    assert(minSwaps((\"1101\"), (\"1110\")).equals((Any(1l))));\n    assert(minSwaps((\"111\"), (\"000\")).equals((Any(\"Not Possible\"))));\n    assert(minSwaps((\"111\"), (\"110\")).equals((Any(\"Not Possible\"))));\n    }\n\n}\n",
      "timestamp": 1665509809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:14:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minSwaps((\u001b[31m\"1101\"\u001b[0m), (\u001b[31m\"1110\"\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:15:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"000\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpee2md4aa.scala:16:46 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minSwaps((\u001b[31m\"111\"\u001b[0m), (\u001b[31m\"110\"\u001b[0m)).equals((Any(\u001b[31m\"Not Possible\"\u001b[0m))));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
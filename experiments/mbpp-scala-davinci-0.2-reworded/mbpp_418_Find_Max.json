{
  "name": "mbpp_418_Find_Max",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the element of a list having maximum length.\n    def FindMax(lst : Any) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_418_Find_Max.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(FindMax((Any(List[String](\"A\"), List[String](\"A\", \"B\"), List[String](\"A\", \"B\", \"C\")))).equals((Any(\"A\", \"B\", \"C\"))));\n    assert(FindMax((Any(List[Long](1l.toLong), List[Long](1l.toLong, 2l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong)))).equals((Any(1l.toLong, 2l.toLong, 3l.toLong))));\n    assert(FindMax((Any(List[Long](1l.toLong, 1l.toLong), List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong)))).equals((Any(1l.toLong, 5l.toLong, 6l.toLong, 1l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max_len = 0\n        var max_elem = lst.asInstanceOf[List[Any]](0)\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max_len) {\n                max_len = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var maxElement = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                maxElement = i\n            }\n        }\n        maxElement",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.toString.length > max) {\n                max = x.toString.length\n                max_element = x\n            }\n        }\n        return max_element",
    "        var max : Any = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        lst match {\n            case Nil => println(\"Empty list\")\n            case head :: tail => {\n                for (i <- lst) {\n                    if (i.toString.length > max) {\n                        max = i.toString.length\n                        max_element = i\n                    }\n                }\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element : Any = null\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        max_elem",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max",
    "        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = 0\n        var max_elem = lst1(0)\n        for (i <- 0 to lst1.length - 1) {\n            if (lst1(i).toString.length > max) {\n                max = lst1(i).toString.length\n                max_elem = lst1(i)\n            }\n        }\n        return max_elem",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (head.toString.length > max.toString.length) head else max\n                }\n            }\n        }",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case x::xs => {\n                val max = FindMax(xs)\n                if (max.asInstanceOf[List[Any]].length > x.asInstanceOf[List[Any]].length) max else x\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length)\n                max = i\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (head.toString.length > max.toString.length) head else max\n                }\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elem = lst(0)\n        for (elem <- lst) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = lst1(0)\n        for(i <- 1 until lst1.length) {\n            if(lst1(i).toString.length > max.toString.length) max = lst1(i)\n        }\n        max",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val max = FindMax(tl)\n                max match {\n                    case Nil => hd\n                    case _ => if (max.toString.length > hd.toString.length) max else hd\n                }\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst(0)\n        for(i <- 0 to lst.length-1) {\n            if(lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var maxElement : Any = null\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]](i).toString.length > max) {\n                max = lst.asInstanceOf[List[Any]](i).toString.length\n                maxElement = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return maxElement",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.asInstanceOf[List[Any]].length > max) {\n                max = element.asInstanceOf[List[Any]].length\n                max_element = element\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max",
    "        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (max.toString.length > head.toString.length) max else head\n                }\n            }\n        }",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) max = i\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max\n                else x\n            }\n        }",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) max = i\n        }\n        return max",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.asInstanceOf[List[Any]].length > max) {\n                max = element.asInstanceOf[List[Any]].length\n                max_element = element\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_elem = 0\n        for(elem <- lst.asInstanceOf[List[Any]]) {\n            if(elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length > max) {\n                max = x.asInstanceOf[List[Any]].length\n                max_element = x\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = null\n        for (e <- lst.asInstanceOf[List[Any]]) {\n            if (e.toString.length > max) {\n                max = e.toString.length\n                max_element = e\n            }\n        }\n        max_element",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]](0)\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = 0\n        var maxElement : Any = null\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                maxElement = i\n            }\n        }\n        return maxElement",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_elem : Any = null\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case hd :: tl => {\n                val max = FindMax(tl)\n                if (max.asInstanceOf[List[Any]].length > hd.asInstanceOf[List[Any]].length) max else hd\n            }\n        }",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst(0)\n        for (i <- 1 to lst.length - 1) {\n            if (lst(i).length > max.length) {\n                max = lst(i)\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- 0 until lst.asInstanceOf[List[Any]].length) {\n            if (lst.asInstanceOf[List[Any]].apply(i).toString.length > max) {\n                max = lst.asInstanceOf[List[Any]].apply(i).toString.length\n                max_element = lst.asInstanceOf[List[Any]].apply(i)\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max.toString.length) max = elem\n        }\n        max",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        max",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max\n                else x\n            }\n        }",
    "        var max = 0\n        var max_element = \"\"\n        for (i <- lst.asInstanceOf[List[String]]) {\n            if (i.length > max) {\n                max = i.length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (element <- lst.asInstanceOf[List[Any]]) {\n            if (element.toString.length > max) {\n                max = element.toString.length\n                max_element = element\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => if (max.toString.length > head.toString.length) max else head\n                }\n            }\n        }",
    "        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val maxTail = FindMax(xs)\n                if (maxTail.toString.length > x.toString.length) maxTail else x\n            }\n        }",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max) {\n                max = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                max_element = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = lst\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_elem = 0\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 until lst.length) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case head :: tail => {\n                val max = FindMax(tail)\n                max match {\n                    case Nil => head\n                    case _ => {\n                        if (head.toString.length > max.toString.length) head else max\n                    }\n                }\n            }\n        }",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for(i <- lst.asInstanceOf[List[Any]]) {\n            if(i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- 0 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max) {\n                max = lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length\n                max_element = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        max",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) max = i\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elm = 0\n        for (elm <- lst.asInstanceOf[List[Any]]) {\n            if (elm.toString.length > max) {\n                max = elm.toString.length\n                max_elm = elm\n            }\n        }\n        max_elm",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]](0)\n        for (i <- 1 to lst.asInstanceOf[List[Any]].length - 1) {\n            if (lst.asInstanceOf[List[Any]](i).asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = lst.asInstanceOf[List[Any]](i)\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[String].length > max.asInstanceOf[String].length) {\n                max = elem\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max.toString.length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.toString.length > max) {\n                max = elem.toString.length\n                max_elem = elem\n            }\n        }\n        return max_elem",
    "        lst match {\n            case Nil => Nil\n            case h :: t => {\n                val max = FindMax(t)\n                max match {\n                    case Nil => h\n                    case _ => if (h.toString.length > max.toString.length) h else max\n                }\n            }\n        }",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]](0)\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        lst match {\n            case Nil => Nil\n            case x :: Nil => x\n            case x :: xs => {\n                val max = FindMax(xs)\n                if (max.toString.length > x.toString.length) max else x\n            }\n        }",
    "        var max = 0\n        var max_element = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = 0\n        for (i <- lst) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0\n        var max_element : Any = null\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max) {\n                max = i.asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return max_element",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = 0\n        var max_element = 0\n        for (i <- 0 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length > max) {\n                max = lst1(i).asInstanceOf[List[Any]].length\n                max_element = i\n            }\n        }\n        return lst1(max_element)",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (x <- lst.asInstanceOf[List[Any]]) {\n            if (x.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = x\n            }\n        }\n        return max",
    "        var max = lst.asInstanceOf[List[Any]].head\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.asInstanceOf[List[Any]].length > max.asInstanceOf[List[Any]].length) {\n                max = i\n            }\n        }\n        return max",
    "        val lst1 = lst.asInstanceOf[List[Any]]\n        var max = lst1(0).asInstanceOf[List[Any]].length\n        var max_index = 0\n        for (i <- 1 until lst1.length) {\n            if (lst1(i).asInstanceOf[List[Any]].length > max) {\n                max = lst1(i).asInstanceOf[List[Any]].length\n                max_index = i\n            }\n        }\n        lst1(max_index)",
    "        var max = 0\n        var maxElement = 0\n        for (i <- lst.asInstanceOf[List[Any]]) {\n            if (i.toString.length > max) {\n                max = i.toString.length\n                maxElement = i\n            }\n        }\n        return maxElement",
    "        var max = 0\n        var max_element = lst(0)\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).toString.length > max) {\n                max = lst(i).toString.length\n                max_element = lst(i)\n            }\n        }\n        return max_element",
    "        var max = lst.asInstanceOf[List[Any]].head.asInstanceOf[List[Any]].length\n        var max_elem = lst.asInstanceOf[List[Any]].head\n        for (elem <- lst.asInstanceOf[List[Any]]) {\n            if (elem.asInstanceOf[List[Any]].length > max) {\n                max = elem.asInstanceOf[List[Any]].length\n                max_elem = elem\n            }\n        }\n        return max_elem"
  ]
}
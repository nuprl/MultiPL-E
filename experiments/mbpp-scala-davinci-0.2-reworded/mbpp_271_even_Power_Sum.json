{
  "name": "mbpp_271_even_Power_Sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.\n    def evenPowerSum(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_271_even_Power_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(evenPowerSum((2l)) == (1056l));\n    assert(evenPowerSum((3l)) == (8832l));\n    assert(evenPowerSum((1l)) == (32l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n                sum += pow(i, 5).toLong\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) sum += pow(i, 5).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n                sum += pow(i, 5).toLong\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        def evenPowerSumHelper(n : Long, sum : Long, i : Long) : Long = {\n            if (i > n) sum\n            else evenPowerSumHelper(n, sum + pow(i * 2, 5).toLong, i + 1)\n        }\n        evenPowerSumHelper(n, 0, 1)",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            if (i % 2 == 0) {\n                sum += pow(i, 5).toLong\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        // Write your code here\n        0",
    "        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(2 * i, 5).toLong\n        }\n        sum"
  ]
}
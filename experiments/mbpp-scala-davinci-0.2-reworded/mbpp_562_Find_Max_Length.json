{
  "name": "mbpp_562_Find_Max_Length",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the length of the longest sublists.\n    def FindMaxLength(lst : List[List[Long]]) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_562_Find_Max_Length.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(FindMaxLength((List[List[Long]](List[Long](1l.toLong), List[Long](1l.toLong, 4l.toLong), List[Long](5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong)))) == (4l));\n    assert(FindMaxLength((List[List[Long]](List[Long](0l.toLong, 1l.toLong), List[Long](2l.toLong, 2l.toLong), List[Long](3l.toLong, 2l.toLong, 1l.toLong)))) == (3l));\n    assert(FindMaxLength((List[List[Long]](List[Long](7l.toLong), List[Long](22l.toLong, 23l.toLong), List[Long](13l.toLong, 14l.toLong, 15l.toLong), List[Long](10l.toLong, 20l.toLong, 30l.toLong, 40l.toLong, 50l.toLong)))) == (5l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (subList <- lst) {\n            if (subList.length > maxLength) {\n                maxLength = subList.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        lst.map(x => x.length).max",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        maxLength",
    "        lst.map(x => x.length).max",
    "        lst.map(x => x.length).max",
    "        lst.map(x => x.length).max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        maxLength",
    "        var maxLength = 0L\n        for (l <- lst) {\n            if (l.length > maxLength) {\n                maxLength = l.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        // Fill in the code here\n        return 0",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        // Fill in the code here.\n        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n            }\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength : Long = 0\n        for (l <- lst) {\n            if (l.length > maxLength) {\n                maxLength = l.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        // Fill in the code here.\n        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max = 0L\n        for (l <- lst) {\n            if (l.length > max) max = l.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublst <- lst) {\n            if (sublst.length > maxLength) {\n                maxLength = sublst.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            var sum : Long = 0\n            for (j <- 0 until lst(i).length) {\n                sum += lst(i)(j)\n            }\n            if (sum > max) max = sum\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        // Fill in the code here\n        var max:Long = 0\n        for(i <- 0 to lst.length-1){\n            if(lst(i).length > max)\n                max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 to lst.length - 1) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n            }\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            val length = sublist.length\n            if (length > maxLength) maxLength = length\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength : Long = 0\n        for (l <- lst) {\n            if (l.length > maxLength) {\n                maxLength = l.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        maxLength",
    "        // Fill in the code here\n        return 0",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (sublst <- lst) {\n            if (sublst.length > max) max = sublst.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (l <- lst) {\n            if (l.length > max) {\n                max = l.length\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            val length = sublist.length\n            if (length > maxLength) maxLength = length\n        }\n        maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            maxLength = max(maxLength, sublist.length)\n        }\n        maxLength",
    "        var maxLength : Long = 0\n        for(i <- 0 until lst.length) {\n            if(lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        max",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) {\n                max = sublist.length\n            }\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        // Fill in the code here.\n        0",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        max",
    "        // Fill in the code here.\n        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max)\n                max = lst(i).length\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        lst.map(x => x.length).max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n            }\n        }\n        max",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        // Fill in the code here\n        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) {\n                max = i.length\n            }\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (l <- lst) {\n            if (l.length > maxLength) {\n                maxLength = l.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength = 0\n        for (l <- lst) {\n            if (l.length > maxLength) {\n                maxLength = l.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (i <- 0 until lst.length) {\n            maxLength = max(maxLength, lst(i).length)\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) {\n                max = lst(i).length\n            }\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- lst) {\n            if (i.length > max) max = i.length\n        }\n        max",
    "        var maxLength = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) {\n                maxLength = lst(i).length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        max",
    "        // Fill in the code here\n        0",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > maxLength) maxLength = lst(i).length\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var max = 0L\n        for (sublist <- lst) {\n            if (sublist.length > max) {\n                max = sublist.length\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        return 0",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) maxLength = sublist.length\n        }\n        return maxLength",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max : Long = 0\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        lst.map(x => x.length).max",
    "        lst.map(x => x.length).max",
    "        var max : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > max) max = sublist.length\n        }\n        return max",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var max = 0L\n        for (i <- 0 until lst.length) {\n            if (lst(i).length > max) max = lst(i).length\n        }\n        return max",
    "        var maxLength = 0L\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength",
    "        var maxLength : Long = 0\n        for (sublist <- lst) {\n            if (sublist.length > maxLength) {\n                maxLength = sublist.length\n            }\n        }\n        return maxLength"
  ]
}
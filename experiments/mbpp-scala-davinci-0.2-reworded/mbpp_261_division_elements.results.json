{
  "name": "mbpp_261_division_elements",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_261_division_elements.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        else {\n            return test_tup1 / test_tup2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:14:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:14:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:15:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:15:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1/test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3aysuuc5.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3aysuuc5.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3aysuuc5.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3aysuuc5.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (5, 4, 3, 2, 1)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] / x._2.asInstanceOf[Long]).toList\n        tup3(test_tup1.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0stxgox.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0stxgox.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0stxgox.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt0stxgox.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5)\n        val test_tup2 = (5, 4, 3, 2, 1)\n        val test_tup3 = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        return test_tup3\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpqg8uoqod.scala:8:53 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup3\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqg8uoqod.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m test_tup3\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (test_tup3 : Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: EmptyTuple)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqg8uoqod.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqg8uoqod.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation availab",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val test_tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val test_tup3 = test_tup1.productIterator.zip(test_tup2.productIterator).map(x => x._1.asInstanceOf[Long] / x._2.asInstanceOf[Long]).toList\n        test_tup3.sum\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7q736y0.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7q736y0.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7q736y0.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn7q736y0.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        if (test_tup1 > test_tup2) {\n            result = test_tup1 / test_tup2\n        } else {\n            result = test_tup2 / test_tup1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgz0zokn.scala:15:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgz0zokn.scala:15:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgz0zokn.scala:16:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgz0zokn.scala:16:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5, 6)\n        val test_tup2 = (2, 2, 2, 2, 2, 2)\n        val result = test_tup1.productIterator.zip(test_tup2.productIterator).map(x => x._1.asInstanceOf[Long] / x._2.asInstanceOf[Long]).toList\n        return result.product\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe0s854i4.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe0s854i4.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe0s854i4.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe0s854i4.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        if (test_tup2 == 0) {\n            result = 0\n        } else {\n            result = test_tup1 / test_tup2\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x07o4am.scala:15:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x07o4am.scala:15:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x07o4am.scala:16:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x07o4am.scala:16:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val test_tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val result = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpreye4klw.scala:8:50 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpreye4klw.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m result\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (result : Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: \n\u001b[31m  |\u001b[0m  Nothing\n\u001b[31m  |\u001b[0m *: Nothing *: Nothing *: Nothing *: EmptyTuple)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpreye4klw.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpreye4klw.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      R",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9zt7hcy8.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var quotient = test_tup1 / test_tup2\n        return quotient\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rsxeymo.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rsxeymo.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rsxeymo.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rsxeymo.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1,2,3,4,5)\n        val test_tup2 = (5,4,3,2,1)\n        val test_tup3 = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        println(test_tup3)\n        return test_tup3\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp8c67h7_b.scala:8:53 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup3\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c67h7_b.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m test_tup3\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    (test_tup3 : Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: EmptyTuple)\n\u001b[31m   |\u001b[0mRequired: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c67h7_b.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c67h7_b.scala:13:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val res = test_tup1 / test_tup2\n        return res\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjvaach1.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjvaach1.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjvaach1.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcjvaach1.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
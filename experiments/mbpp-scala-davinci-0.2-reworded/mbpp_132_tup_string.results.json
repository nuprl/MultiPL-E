{
  "name": "mbpp_132_tup_string",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_132_tup_string.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.substring(1, tup1.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.split(\",\")\n        val tup3 = tup2.map(x => x.toInt)\n        val tup4 = tup3.toList\n        val tup5 = tup4.sorted\n        val tup6 = tup5.mkString(\",\")\n        return tup6\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp17kmr_qk.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp17kmr_qk.scala:15:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup = tup1.split(\",\")\n        val tup2 = tup.map(x => x.toInt)\n        val tup3 = tup2.map(x => x.toString)\n        val tup4 = tup3.mkString(\",\")\n        return tup4\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpusjex5x6.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpusjex5x6.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var tup2 = tup1.replace(\"(\", \"\")\n        tup2 = tup2.replace(\")\", \"\")\n        tup2 = tup2.replace(\",\", \"\")\n        return tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.substring(1, tup1.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')' || tup1(i) == ',') {\n                str = str + \"\"\n            } else {\n                str = str + tup1(i)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp0we8hlm4.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp0we8hlm4.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.substring(1, tup1.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var tup2 = tup1.replace(\"(\", \"\")\n        tup2 = tup2.replace(\")\", \"\")\n        tup2 = tup2.replace(\",\", \"\")\n        return tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.substring(1, tup1.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\")\n        val tup3 = tup2.replace(\")\", \"\")\n        val tup4 = tup3.replace(\",\", \"\")\n        return tup4\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpbgy_bxvh.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpbgy_bxvh.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var tup2 = tup1.replace(\"(\", \"\")\n        tup2 = tup2.replace(\")\", \"\")\n        tup2 = tup2.replace(\",\", \"\")\n        return tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4y3dx99c.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')' || tup1(i) == ',') {\n                str += \" \"\n            } else {\n                str += tup1(i)\n            }\n        }\n        return str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp1vl6yhdg.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp1vl6yhdg.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')' || tup1(i) == ',') {\n                str += \"\"\n            } else {\n                str += tup1(i)\n            }\n        }\n        return str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpqzp4bqg3.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpqzp4bqg3.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\")\n        val tup3 = tup2.replace(\")\", \"\")\n        val tup4 = tup3.replace(\",\", \"\")\n        tup4\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpum9mp6ak.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpum9mp6ak.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup = tup1.replace(\"(\", \"\").replace(\")\", \"\").split(\",\")\n        tup.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmphj61eavt.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmphj61eavt.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')') {\n                str += \"\"\n            } else {\n                str += tup1(i)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpu_k351b4.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpu_k351b4.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var tup2 = tup1.replaceAll(\"[()]\", \"\")\n        return tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpctzd7tg9.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpctzd7tg9.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.split(\",\")\n        val tup3 = tup2.map(x => x.toInt)\n        val tup4 = tup3.sorted\n        val tup5 = tup4.map(x => x.toString)\n        val tup6 = tup5.mkString(\",\")\n        return tup6\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp5inagcm2.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp5inagcm2.scala:15:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.substring(1, tup1.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpk92v0sc8.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"(\"\n        for (i <- 0 to tup1.length - 1) {\n            if (i == tup1.length - 1) str += tup1(i)\n            else str += tup1(i) + \",\"\n        }\n        str += \")\"\n        return str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpxi6w3rf7.scala:15:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpxi6w3rf7.scala:16:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for(i <- 0 to tup1.length - 1) {\n            if(tup1(i) == '(' || tup1(i) == ')') {\n                str += \"\"\n            }\n            else {\n                str += tup1(i)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpyagdlvr2.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpyagdlvr2.scala:19:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.replace(\"(\", \"\").replace(\")\", \"\").replace(\",\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpw8j_0p2r.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpw8j_0p2r.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup.split(\",\").mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpbkexvlan.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpbkexvlan.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp10t58dth.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp10t58dth.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')' || tup1(i) == ',') {\n                str += \" \"\n            } else {\n                str += tup1(i)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgvp2hfr2.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgvp2hfr2.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var tup2 = tup1.replace(\"(\", \"\")\n        tup2 = tup2.replace(\")\", \"\")\n        tup2 = tup2.replace(\",\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgbfwb4ek.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgbfwb4ek.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        var str = \"\"\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) == '(' || tup1(i) == ')' || tup1(i) == ',') {\n                str += \" \"\n            } else {\n                str += tup1(i)\n            }\n        }\n        str\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgvp2hfr2.scala:17:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgvp2hfr2.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.split(\",\")\n        val tup3 = tup2.map(x => x.replace(\"(\", \"\").replace(\")\", \"\"))\n        tup3.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpv_3pur3f.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpv_3pur3f.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_lisid2p.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_lisid2p.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup = tup1.split(\",\")\n        val tup2 = (tup(0), tup(1), tup(2))\n        return tup2.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpvagw71y2.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpvagw71y2.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510120,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpwwgc6o68.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp10t58dth.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp10t58dth.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\").replace(\")\", \"\")\n        tup2\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpagcixt5a.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        return tup1\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp4x9o4yok.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        val tup2 = tup1.replace(\"(\", \"\")\n        val tup3 = tup2.replace(\")\", \"\")\n        return tup3\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpubgm8e77.scala:11:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m   |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m   |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m   |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m   |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m   |\u001b[0m (x$0: String): String\n\u001b[31m   |\u001b[0m (): String\n\u001b[31m   |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpubgm8e77.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp_j05cktj.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a tuple to a string.\n    def tupString(tup1 : String) : String = {\n        tup1.toString\n    }\n    def main(args: Array[String]) = {\n    assert(tupString((String((\"e\", \"x\", \"e\", \"r\", \"c\", \"i\", \"s\", \"e\", \"s\")))).equals((\"exercises\")));\n    assert(tupString((String((\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")))).equals((\"python\")));\n    assert(tupString((String((\"p\", \"r\", \"o\", \"g\", \"r\", \"a\", \"m\")))).equals((\"program\")));\n    }\n\n}\n",
      "timestamp": 1665510119,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupString((String((\u001b[31m\"e\"\u001b[0m, \u001b[31m\"x\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"r\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"i\"\u001b[0m, \u001b[31m\"s\"\u001b[0m, \u001b[31m\"e\"\u001b[0m, \u001b[31m\"s\"\u001b[0m)))).equals((\u001b[31m\"exercises\"\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Byte): String\n\u001b[31m  |\u001b[0m (x$0: AbstractStringBuilder, x$1: Void): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int, x$3: Void): String\n\u001b[31m  |\u001b[0m (x$0: StringBuilder): String\n\u001b[31m  |\u001b[0m (x$0: StringBuffer): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte]): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: String): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\u001b[31m  |\u001b[0m (x$0: Array[Char]): String\n\u001b[31m  |\u001b[0m (x$0: String): String\n\u001b[31m  |\u001b[0m (): String\n\u001b[31m  |\u001b[0mmatch arguments ((String, String, String, String, String, String, String, String, String))\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpg5aa87br.scala:10:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupString((String((\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))).equals((\u001b[31m\"python\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mString\u001b[0m with types\n\u001b[31m   |\u001b[0m (x$0: Array[Byte], ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
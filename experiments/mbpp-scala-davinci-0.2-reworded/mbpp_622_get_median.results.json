{
  "name": "mbpp_622_get_median",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfppoovl.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvic8tiw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvic8tiw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvic8tiw.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvic8tiw.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvic8tiw.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 until n + 1) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty7euz9a.scala:10:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m until n + \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Long\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty7euz9a.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty7euz9a.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty7euz9a.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpty7euz9a.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcgs17wb.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcgs17wb.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcgs17wb.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcgs17wb.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72if1wy_.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                break\n            }\n            if(j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                break\n            }\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510635,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijermjxq.scala:15:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpijermjxq.scala:20:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyc3h1ys.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyc3h1ys.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyc3h1ys.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyc3h1ys.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6rwfae97.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6rwfae97.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = 0\n        var m2 : Long = 0\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return ((m1 + m2).toFloat / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpztfr0lkv.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6rwfae97.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6rwfae97.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvktlyb7.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1c23iby.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1c23iby.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1c23iby.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1c23iby.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1c23iby.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        if (n == 1) return (arr1(0) + arr2(0)) / 2\n        if (n == 2) return (max(arr1(0), arr2(0)) + min(arr1(1), arr2(1))) / 2\n        val m1 = median(arr1, n)\n        val m2 = median(arr2, n)\n        if (m1 == m2) m1\n        else if (m1 < m2) getMedian(arr1.slice(n / 2, n.toInt), arr2.slice(0, n / 2.toInt), n - n / 2)\n        else getMedian(arr1.slice(0, n / 2.toInt), arr2.slice(n / 2, n.toInt), n - n / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1kadqwxf.scala:8:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm1\u001b[0m = median(arr1, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 Not found: median\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1kadqwxf.scala:9:17 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm2\u001b[0m = median(arr2, n)\n\u001b[31m\u001b[31m  |\u001b[0m                 ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 Not found: median\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1kadqwxf.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (m1 < m2) getMedian(arr1.slice(n / \u001b[31m2\u001b[0m, n.toInt), arr2.slice(\u001b[31m0\u001b[0m, n / \u001b[31m2\u001b[0m.toInt), n - n / \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                               Found:    Long\n\u001b[31m   |\u001b[0m                                               Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1kadqwxf.scala:11:78 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (m1 < m2) getMedian(arr1.slice(n / \u001b[31m2\u001b[0m, n.toInt), arr2.slice(\u001b[31m0\u001b[0m, n / \u001b[31m2\u001b[0m.toInt), n - n / \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Found:    Long\n\u001b[31m   |\u001b[0m                                                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1kadqwxf.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33melse\u001b[0m getMedian(arr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpky_648z1.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return ((m1 + m2) / 2.0f)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10n0j3mp.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10n0j3mp.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10n0j3mp.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10n0j3mp.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = 0L\n        var m2 = 0L\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvktlyb7.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = 0L\n        var m2 = 0L\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return ((m1 + m2).toFloat / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        if (n % 2 == 0) (m1 + m2).toFloat / 2\n        else m2.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123824,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_rr0huy.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_rr0huy.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_rr0huy.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr_rr0huy.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123824,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk88wa1m.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk88wa1m.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk88wa1m.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzk88wa1m.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvktlyb7.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123824,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8pfx436.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8pfx436.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8pfx436.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm8pfx436.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        if(n % 2 == 0) (m1 + m2).toFloat / 2\n        else m2.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsgp5e4_.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsgp5e4_.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsgp5e4_.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjsgp5e4_.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = 0\n        var m2 = 0\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpun42srag.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpun42srag.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpun42srag.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpun42srag.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return ((m1 + m2).toFloat / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bsqy5au.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bsqy5au.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bsqy5au.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bsqy5au.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123824,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96pilub6.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96pilub6.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96pilub6.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96pilub6.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0; var j = 0; var m1 = -1; var m2 = -1; var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmseepgto.scala:11:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmseepgto.scala:16:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmseepgto.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmseepgto.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return ((m1 + m2).toFloat / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123823,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwbs1qg4l.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwbs1qg4l.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwbs1qg4l.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwbs1qg4l.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 1 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmuw0zh1z.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmuw0zh1z.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmuw0zh1z.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmuw0zh1z.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmuw0zh1z.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6kkew_u.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6kkew_u.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6kkew_u.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf6kkew_u.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplboswor9.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplboswor9.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplboswor9.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplboswor9.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeqo3vgnd.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsz6pwv0.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123824,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5p2eglyk.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return ((m1 + m2) / 2.0f).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123826,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpno_kuysh.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpno_kuysh.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpno_kuysh.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpno_kuysh.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return ((m1 + m2) / 2.0f)\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbznb149a.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbznb149a.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbznb149a.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbznb149a.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2j7p2s_.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2j7p2s_.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2j7p2s_.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe2j7p2s_.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuoq15325.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return ((m1 + m2) / 2.0).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123835,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjc_buya9.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjc_buya9.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjc_buya9.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjc_buya9.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 1 to (n + 1) / 2) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        if ((n & 1) == 1) m2 else (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_wesjezo.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m1\u001b[0m to (n + \u001b[31m1\u001b[0m) / \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Long\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_wesjezo.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_wesjezo.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_wesjezo.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_wesjezo.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3gdxhxls.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123835,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u1fr_ul.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u1fr_ul.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethlvd4h.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethlvd4h.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethlvd4h.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethlvd4h.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 1 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7o4vy0t.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e78l5bk.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e78l5bk.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e78l5bk.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e78l5bk.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvvktlyb7.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4d050yxq.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4d050yxq.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4d050yxq.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4d050yxq.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxii6he_.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxii6he_.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvn6shjqz.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qu59lml.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qu59lml.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qu59lml.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qu59lml.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qu59lml.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123825,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfb3gj6e.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxipibflq.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = 0\n        var m2 : Long = 0\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j).toFloat\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i).toFloat\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toFloat\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j).toFloat\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = 0\n        var m2 : Long = 0\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123837,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8mvzcbeb.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8mvzcbeb.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8mvzcbeb.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8mvzcbeb.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiegz2iip.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfppoovl.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq4td1i73.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1mmpj_15.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sk7s60z.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeuqipt7.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeuqipt7.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeuqipt7.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxeuqipt7.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuuj1z6gd.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuuj1z6gd.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuuj1z6gd.scala:22:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuuj1z6gd.scala:26:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyee_9d4.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppm205se5.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppm205se5.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppm205se5.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppm205se5.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53lcfkyb.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53lcfkyb.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe7rfi48x.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return ((m1 + m2) / 2.0).toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98zq3fmi.scala:14:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98zq3fmi.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98zq3fmi.scala:24:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                m2 = arr1(i.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98zq3fmi.scala:29:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                m2 = arr2(j.toInt)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = 0.0\n        var m2 = 0.0\n        var count = 0\n        while (count < n + 1) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1bhr7fyy.scala:34:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        (m1 + m2) / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0f\n        var m2 = -1.0f\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsfppoovl.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j).toInt\n                break\n            }\n            if(j == n) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                break\n            }\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i).toInt\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j).toInt\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123835,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpih0wwv95.scala:15:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpih0wwv95.scala:20:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = 0\n        var m2 : Long = 0\n        var count : Long = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i : Long = 0\n        var j : Long = 0\n        var m1 : Long = -1\n        var m2 : Long = -1\n        for (count <- 1 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if (arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123840,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6w_nfrur.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m1\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1.0\n        var m2 = -1.0\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123840,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpveen1852.scala:34:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        (m1 + m2) / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp98g1zrce.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6h6_lizj.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = 0L\n        var m2 = 0L\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:17:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:21:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgeb7pchw.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:20:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:25:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp6fqgf2.scala:30:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 : Long = 0\n        var m2 : Long = 0\n        var count = 0\n        while(count <= n) {\n            if(i == n) {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            } else if(j == n) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else if(arr1(i.toInt) < arr2(j.toInt)) {\n                m1 = m2\n                m2 = arr1(i.toInt)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j.toInt)\n                j += 1\n            }\n            count += 1\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123841,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while(count <= n) {\n            count += 1\n            if(arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8u04v68.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj_81gykj.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        var count = 0\n        while (count <= n) {\n            count += 1\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            } else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            } else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2) / 2.0f\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:15:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:19:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplf92u3pm.scala:27:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    def getMedian(arr1 : List[Long], arr2 : List[Long], n : Long) : Float = {\n        var i = 0\n        var j = 0\n        var m1 = -1\n        var m2 = -1\n        for (count <- 0 to n) {\n            if (i == n) {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n            else if (j == n) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else if (arr1(i) < arr2(j)) {\n                m1 = m2\n                m2 = arr1(i)\n                i += 1\n            }\n            else {\n                m1 = m2\n                m2 = arr2(j)\n                j += 1\n            }\n        }\n        return (m1 + m2).toFloat / 2\n    }\n    def main(args: Array[String]) = {\n    assert(getMedian((List[Long](1l.toLong, 12l.toLong, 15l.toLong, 26l.toLong, 38l.toLong)), (List[Long](2l.toLong, 13l.toLong, 17l.toLong, 30l.toLong, 45l.toLong)), (5l)) == (16.0f));\n    assert(getMedian((List[Long](2l.toLong, 4l.toLong, 8l.toLong, 9l.toLong)), (List[Long](7l.toLong, 13l.toLong, 19l.toLong, 28l.toLong)), (4l)) == (8.5f));\n    assert(getMedian((List[Long](3l.toLong, 6l.toLong, 14l.toLong, 23l.toLong, 36l.toLong, 42l.toLong)), (List[Long](2l.toLong, 18l.toLong, 27l.toLong, 39l.toLong, 49l.toLong, 55l.toLong)), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (count <- \u001b[31m0\u001b[0m to n) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    (n : Long)\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:13:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:18:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:23:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                m2 = arr1(i)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwm72dj4k.scala:28:25 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                m2 = arr2(j)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Found:    Long\n\u001b[31m   |\u001b[0m                     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
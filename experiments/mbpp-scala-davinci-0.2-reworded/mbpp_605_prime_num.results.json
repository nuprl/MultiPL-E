{
  "name": "mbpp_605_prime_num",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_605_prime_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) false\n        else if (num == 2) true\n        else {\n            val sqrtNum = sqrt(num).toLong\n            for (i <- 2L to sqrtNum) {\n                if (num % i == 0) return false\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpq8angiyd.scala:19)\n\tat Problem.main(tmpq8angiyd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1)\n            return false\n        if (num == 2)\n            return true\n        if (num % 2 == 0)\n            return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0)\n                return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        var i = 2\n        while (i <= sqrt(num).toInt) {\n            if (num % i == 0) return false\n            i += 1\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpektzzzjr.scala:18)\n\tat Problem.main(tmpektzzzjr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) {\n            return false\n        }\n        if (num == 2) {\n            return true\n        }\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp71z0zuz8.scala:22)\n\tat Problem.main(tmp71z0zuz8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) false\n        else if (num == 2) true\n        else !(2 to sqrt(num).toInt).exists(x => num % x == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        var i = 3\n        while (i <= sqrt(num).toInt) {\n            if (num % i == 0) return false\n            i += 2\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        var i = 3\n        while (i <= sqrt(num)) {\n            if (num % i == 0) return false\n            i += 2\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        val sqrtNum = sqrt(num)\n        for (i <- 2 to sqrtNum.toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpyqyx9wnb.scala:16)\n\tat Problem.main(tmpyqyx9wnb.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        val sqrtNum = sqrt(num).toInt\n        for (i <- 2 to sqrtNum) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpla_i288o.scala:17)\n\tat Problem.main(tmpla_i288o.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2)\n            return false\n        if (num == 2)\n            return true\n        if (num % 2 == 0)\n            return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0)\n                return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp9z2a_ucp.scala:15)\n\tat Problem.main(tmp9z2a_ucp.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbr2axqqh.scala:16)\n\tat Problem.main(tmpbr2axqqh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3 to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122585,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplswjamm5.scala:10:23 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to sqrtNum by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    (sqrtNum : Long)\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) false\n        else if (num == 2) true\n        else !(2 to sqrt(num).toInt).exists(x => num % x == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        for (i <- 2 to sqrt(num).toInt) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) false\n        else if (num == 2) true\n        else {\n            for (i <- 2 to sqrt(num).toInt) {\n                if (num % i == 0) return false\n            }\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpag4f9txa.scala:18)\n\tat Problem.main(tmpag4f9txa.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3 to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t35ytaj.scala:9:23 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to sqrtNum by \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       Found:    (sqrtNum : Long)\n\u001b[31m  |\u001b[0m                       Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122587,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 2L to sqrtNum) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666122586,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptllmoe9n.scala:16)\n\tat Problem.main(tmptllmoe9n.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        val sqrtNum = sqrt(num).toLong\n        for (i <- 3L to sqrtNum by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num <= 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num < 2) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given integer is a prime number.\n    def primeNum(num : Long) : Boolean = {\n        if (num == 1) return false\n        if (num == 2) return true\n        if (num % 2 == 0) return false\n        for (i <- 3 to sqrt(num).toInt by 2) {\n            if (num % i == 0) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeNum((13l)) == (true));\n    assert(primeNum((7l)) == (true));\n    assert(primeNum((-1010l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665510117,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_262_split_two_parts",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpxh5_w889.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpl2tvfhcv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var i = 0\n        for (i <- 0 to list2.length - 1) {\n            if (i < L) {\n                list3 = list3 :+ list2(i)\n            }\n            else {\n                list4 = list4 :+ list2(i)\n            }\n        }\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptn9w9g5h.scala:21:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptn9w9g5h.scala:22:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmptn9w9g5h.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptn9w9g5h.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp5d768pvv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5d768pvv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var i = 0\n        while (i < L) {\n            list3 = list3 :+ list2(i)\n            i += 1\n        }\n        i = L.toInt\n        while (i < list2.length) {\n            list4 = list4 :+ list2(i)\n            i += 1\n        }\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvobp7my_.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvobp7my_.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvobp7my_.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvobp7my_.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var list5 = List(list3, list4)\n        return list5\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpf4z10ubv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf4z10ubv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpee7aynr9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list1 = list.take(L.toInt)\n        val list2 = list.drop(L.toInt)\n        (list1, list2)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp72_1errv.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 : List[Any] = Nil\n        var list3 : List[Any] = Nil\n        var list4 : List[Any] = Nil\n        var list5 : List[Any] = Nil\n        var list6 : List[Any] = Nil\n        var list7 : List[Any] = Nil\n        var list8 : List[Any] = Nil\n        var list9 : List[Any] = Nil\n        var list10 : List[Any] = Nil\n        var list11 : List[Any] = Nil\n        var list12 : List[Any] = Nil\n        var list13 : List[Any] = Nil\n        var list14 : List[Any] = Nil\n        var list15 : List[Any] = Nil\n        var list16 : List[Any] = Nil\n        var list17 : List[Any] = Nil\n        var list18 : List[Any] = Nil\n        var list19 : List[Any] = Nil\n        var list20 : List[Any] = Nil\n        var list21 : List[Any] = Nil\n        var list22 : List[Any] = Nil\n        var list23 : List[Any] = Nil\n        var list24 : List[Any] = Nil\n        var list25 : List[Any] = Nil\n        var list26 : List[Any] = Nil\n        var list27 : List[Any] = Nil\n        var list28 : List[Any] = Nil\n        var list29 : List[Any] = Nil\n        var list30 : List[Any] = Nil\n        var list31 : List[Any] = Nil\n        var list32 : List[Any] = Nil\n        var list33 : List[Any] = Nil\n        var list34 : List[Any] = Nil\n        var list35 : List[Any] = Nil\n        var list36 : List[Any] = Nil\n        var list37 : List[Any] = Nil\n        var list38 : List[Any] = Nil\n        var list39 : List[Any] = Nil\n        var list40 : List[Any] = Nil\n        var list41 : List[Any] = Nil\n        var list42 : List[Any] = Nil\n        var list43 : List[Any] = Nil\n        var list44 : List[\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_1unzj0v.scala:49:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_1unzj0v.scala:51:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_1unzj0v.scala:52:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_1unzj0v.scala:53:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvt44vge3.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpl2tvfhcv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list : List[Any] => {\n                val list2 = list.slice(0, L.toInt)\n                val list3 = list.slice(L.toInt, list.length)\n                (list2, list3)\n            }\n            case _ => \"Invalid Input\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyjnmqy2q.scala:16:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyjnmqy2q.scala:17:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpyjnmqy2q.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyjnmqy2q.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list2 = list1.asInstanceOf[List[Any]]\n            val list3 = list2.take(L.toInt)\n            val list4 = list2.drop(L.toInt)\n            (list3, list4)\n        }\n        else {\n            val list2 = list1.asInstanceOf[Array[Any]]\n            val list3 = list2.take(L.toInt)\n            val list4 = list2.drop(L.toInt)\n            (list3, list4)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp55nw7rjq.scala:20:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp55nw7rjq.scala:21:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp55nw7rjq.scala:22:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp55nw7rjq.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length < L) {\n                return (list, List())\n            }\n            else {\n                val list2 = list.take(L.toInt)\n                val list3 = list.drop(L.toInt)\n                return (list2, list3)\n            }\n        }\n        else {\n            return (list1, List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps2m5gd0d.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps2m5gd0d.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmps2m5gd0d.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps2m5gd0d.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmphxh7iy_0.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphxh7iy_0.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.slice(0, L.toInt)\n        val list3 = list.slice(L.toInt, list.length)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpqb093dwe.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        // Write your code here\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaif8u_vg.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaif8u_vg.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpaif8u_vg.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpaif8u_vg.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length == 0) {\n                return (List(), List())\n            } else if (list.length == 1) {\n                return (List(list(0)), List())\n            } else {\n                val list2 = list.slice(0, L.toInt)\n                val list3 = list.slice(L.toInt, list.length)\n                return (list2, list3)\n            }\n        } else {\n            return (List(), List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8dd_0eoc.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8dd_0eoc.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8dd_0eoc.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8dd_0eoc.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuvuvcw35.scala:54:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuvuvcw35.scala:55:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpuvuvcw35.scala:56:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuvuvcw35.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpv52_0oq9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp4n4i1d52.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = List[Any]()\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var list5 = List[Any]()\n        var list6 = List[Any]()\n        var list7 = List[Any]()\n        var list8 = List[Any]()\n        var list9 = List[Any]()\n        var list10 = List[Any]()\n        var list11 = List[Any]()\n        var list12 = List[Any]()\n        var list13 = List[Any]()\n        var list14 = List[Any]()\n        var list15 = List[Any]()\n        var list16 = List[Any]()\n        var list17 = List[Any]()\n        var list18 = List[Any]()\n        var list19 = List[Any]()\n        var list20 = List[Any]()\n        var list21 = List[Any]()\n        var list22 = List[Any]()\n        var list23 = List[Any]()\n        var list24 = List[Any]()\n        var list25 = List[Any]()\n        var list26 = List[Any]()\n        var list27 = List[Any]()\n        var list28 = List[Any]()\n        var list29 = List[Any]()\n        var list30 = List[Any]()\n        var list31 = List[Any]()\n        var list32 = List[Any]()\n        var list33 = List[Any]()\n        var list34 = List[Any]()\n        var list35 = List[Any]()\n        var list36 = List[Any]()\n        var list37 = List[Any]()\n        var list38 = List[Any]()\n        var list39 = List[Any]()\n        var list40 = List[Any]()\n        var list41 = List[Any]()\n        var list42 = List[Any]()\n        var list43 = List[Any]()\n        var list44 = List[Any]()\n        var list45 = List[Any]()\n        var list46 = List[Any]()\n        var list47 = List[Any]()\n        var list48 =\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8d_1hjne.scala:52:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mlist48\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:55:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8d_1hjne.scala:56:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp8d_1hjne.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list1 = list.take(L.toInt)\n        val list2 = list.drop(L.toInt)\n        (list1, list2)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp72_1errv.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp72_1errv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.slice(0, L.toInt)\n        val list3 = list.slice(L.toInt, list.length)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpqb093dwe.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = List[Any]()\n        var list4 = List[Any]()\n        var i = 0\n        while (i < L) {\n            list3 = list3 :+ list2(i)\n            i += 1\n        }\n        i = L.toInt\n        while (i < list2.length) {\n            list4 = list4 :+ list2(i)\n            i += 1\n        }\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpljv6dw7b.scala:22:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpljv6dw7b.scala:23:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpljv6dw7b.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpljv6dw7b.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpxh5_w889.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxh5_w889.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpttdct6mf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpv52_0oq9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv52_0oq9.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvt44vge3.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvt44vge3.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        // Write your code here\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        val tuple = (list3, list4)\n        tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprcy7tomn.scala:14:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprcy7tomn.scala:15:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmprcy7tomn.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprcy7tomn.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.slice(0, L.toInt)\n        val list3 = list.slice(L.toInt, list.length)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpqb093dwe.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqb093dwe.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp9wyj0_zj.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Int]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpj0vkdq64.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj0vkdq64.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list2 = list1.asInstanceOf[List[Any]]\n            if (list2.length == 0) {\n                return (List(), List())\n            }\n            if (L == 0) {\n                return (List(), list2)\n            }\n            if (L == list2.length) {\n                return (list2, List())\n            }\n            if (L > list2.length) {\n                return (list2, List())\n            }\n            val list3 = list2.slice(0, L.toInt)\n            val list4 = list2.slice(L.toInt, list2.length)\n            return (list3, list4)\n        }\n        else {\n            return (List(), List())\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdssctw8f.scala:29:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdssctw8f.scala:30:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpdssctw8f.scala:31:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdssctw8f.scala:32:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpwk133_rt.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        var tuple = (list3, list4)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:13:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:14:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpl2tvfhcv.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl2tvfhcv.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.slice(0, L.toInt)\n        val list4 = list2.slice(L.toInt, list2.length)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp_cep2r63.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_cep2r63.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp4n4i1d52.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4n4i1d52.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        // Write your code here\n        var list = list1.asInstanceOf[List[Int]]\n        var list2 = list.take(L.toInt)\n        var list3 = list.drop(L.toInt)\n        var tuple = (list2, list3)\n        return tuple\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgqzw6ejo.scala:14:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgqzw6ejo.scala:15:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgqzw6ejo.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgqzw6ejo.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                val list2 = list1.splitAt(L.toInt)\n                list2\n            }\n            case _ => {\n                println(\"Invalid input\")\n                None\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3zel2o8j.scala:18:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3zel2o8j.scala:19:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp3zel2o8j.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3zel2o8j.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvt44vge3.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        return list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpju4j4b1q.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.splitAt(L.toInt)\n        return list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpju4j4b1q.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpju4j4b1q.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpttdct6mf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpttdct6mf.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Any]]\n        val list2 = list.take(L.toInt)\n        val list3 = list.drop(L.toInt)\n        (list2, list3)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp0wd_yuu9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0wd_yuu9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list = list1.asInstanceOf[List[Int]]\n        val list2 = list.splitAt(L.toInt)\n        list2\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp9wyj0_zj.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9wyj0_zj.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpwk133_rt.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwk133_rt.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.take(L.toInt)\n        var list4 = list2.drop(L.toInt)\n        return (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpee7aynr9.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpee7aynr9.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpjiwxxsfz.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjiwxxsfz.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp6xgkf48c.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6xgkf48c.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        if (list1.isInstanceOf[List[Any]]) {\n            val list = list1.asInstanceOf[List[Any]]\n            if (list.length == 0) return (List(), List())\n            if (list.length == 1) return (List(list(0)), List())\n            if (list.length == 2) return (List(list(0)), List(list(1)))\n            if (list.length == 3) return (List(list(0), list(1)), List(list(2)))\n            if (list.length == 4) return (List(list(0), list(1)), List(list(2), list(3)))\n            if (list.length == 5) return (List(list(0), list(1), list(2)), List(list(3), list(4)))\n            if (list.length == 6) return (List(list(0), list(1), list(2)), List(list(3), list(4), list(5)))\n            if (list.length == 7) return (List(list(0), list(1), list(2), list(3)), List(list(4), list(5), list(6)))\n            if (list.length == 8) return (List(list(0), list(1), list(2), list(3)), List(list(4), list(5), list(6), list(7)))\n            if (list.length == 9) return (List(list(0), list(1), list(2), list(3), list(4)), List(list(5), list(6), list(7), list(8)))\n            if (list.length == 10) return (List(list(0), list(1), list(2), list(3), list(4)), List(list(5), list(6), list(7), list(8), list(9)))\n            if (list.length == 11) return (List(list(0), list(1), list(2), list(3), list(4), list(5)), List(list(6), list(7), list(8), list(9), list(10)))\n            if (list.length == 12) return (List(list(0), list(1), list\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbvqmto9.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbvqmto9.scala:23:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbvqmto9.scala:24:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbvqmto9.scala:25:126 --------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Int]]\n        val list3 = list2.splitAt(L.toInt)\n        list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpvt44vge3.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvt44vge3.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        list1 match {\n            case list1 : List[Any] => {\n                val list2 = list1.splitAt(L.toInt)\n                list2\n            }\n            case _ => \"Invalid Input\"\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1666123709,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:15:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:16:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp44zrbgzh.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp44zrbgzh.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        val list2 = list1.asInstanceOf[List[Any]]\n        val list3 = list2.take(L.toInt)\n        val list4 = list2.drop(L.toInt)\n        (list3, list4)\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:12:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:13:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmpgxpuarpm.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgxpuarpm.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.\n    def splitTwoParts(list1 : Any, L : Long) : Any = {\n        var list2 = list1.asInstanceOf[List[Any]]\n        var list3 = list2.splitAt(L.toInt)\n        return list3\n    }\n    def main(args: Array[String]) = {\n    assert(splitTwoParts((Any(1l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)), (3l)).equals((Any(1l.toLong, 1l.toLong, 2l.toLong), List[Long](3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 1l.toLong)))));\n    assert(splitTwoParts((Any(\"a\", \"b\", \"c\", \"d\")), (2l)).equals((Any(\"a\", \"b\"), List[String](\"c\", \"d\")))));\n    assert(splitTwoParts((Any(\"p\", \"y\", \"t\", \"h\", \"o\", \"n\")), (4l)).equals((Any(\"p\", \"y\", \"t\", \"h\"), List[String](\"o\", \"n\")))));\n    }\n\n}\n",
      "timestamp": 1665510570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:11:240 --------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)), (\u001b[31m3l\u001b[0m)).equals((Any(\u001b[31m1l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong), List[\u001b[35mLong\u001b[0m](\u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m1l\u001b[0m.toLong)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                                                                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:12:106 --------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m, \u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)), (\u001b[31m2l\u001b[0m)).equals((Any(\u001b[31m\"a\"\u001b[0m, \u001b[31m\"b\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"c\"\u001b[0m, \u001b[31m\"d\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E103] Syntax Error: /tmp/tmp062n2uvf.scala:13:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(splitTwoParts((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m, \u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)), (\u001b[31m4l\u001b[0m)).equals((Any(\u001b[31m\"p\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"t\"\u001b[0m, \u001b[31m\"h\"\u001b[0m), List[\u001b[35mString\u001b[0m](\u001b[31m\"o\"\u001b[0m, \u001b[31m\"n\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Illegal start of toplevel definition\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp062n2uvf.scala:14:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
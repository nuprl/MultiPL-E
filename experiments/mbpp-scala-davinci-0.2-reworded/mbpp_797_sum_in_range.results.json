{
  "name": "mbpp_797_sum_in_range",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_797_sum_in_range.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        if (l > r) return 0\n        if (l % 2 == 0) return sumInRange(l + 1, r)\n        return l + sumInRange(l + 2, r)\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509849,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- l to r) {\n            if(i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509849,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp0augl5ha.scala:9)\n\tat Problem.main(tmp0augl5ha.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- l to r) {\n            if(i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- l to r) {\n            if(i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        if (l % 2 == 0) l + 1 else l\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpvgvp7ze5.scala:10)\n\tat Problem.main(tmpvgvp7ze5.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for(i <- l to r) {\n            if(i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509849,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp0augl5ha.scala:9)\n\tat Problem.main(tmp0augl5ha.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        if (l > r) 0\n        else if (l % 2 == 0) sumInRange(l + 1, r)\n        else l + sumInRange(l + 2, r)\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        if (l > r) 0\n        else if (l % 2 == 0) sumInRange(l + 1, r)\n        else l + sumInRange(l + 2, r)\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        val n = r - l + 1\n        val m = n / 2\n        val s = (l + r) * m\n        if (n % 2 == 0) s else s + (l + r) / 2\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpzk4v7yz8.scala:12)\n\tat Problem.main(tmpzk4v7yz8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509849,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp0augl5ha.scala:9)\n\tat Problem.main(tmp0augl5ha.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122595,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp59st7olu.scala:10)\n\tat Problem.main(tmp59st7olu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum : Long = 0\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) sum += i\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509849,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp0augl5ha.scala:9)\n\tat Problem.main(tmp0augl5ha.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 != 0) {\n                sum += i\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1666122596,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        // Write your code here\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) {\n                sum += i\n            }\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to find the sum of all odd natural numbers within the range l and r.\n    def sumInRange(l : Long, r : Long) : Long = {\n        var sum = 0L\n        for (i <- l to r) {\n            if (i % 2 == 1) sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(sumInRange((2l), (5l)) == (8l));\n    assert(sumInRange((5l), (7l)) == (12l));\n    assert(sumInRange((7l), (13l)) == (40l));\n    }\n\n}\n",
      "timestamp": 1665509850,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
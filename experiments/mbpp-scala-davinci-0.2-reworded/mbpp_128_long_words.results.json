{
  "name": "mbpp_128_long_words",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val strList = str.split(\" \").toList\n        val longWords = strList.filter(x => x.length > n)\n        longWords\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result += word\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]\n        for(word <- words) {\n            if(word.length > n) longWords += word\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = words.filter(word => word.length > n)\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = for (word <- words if word.length > n) yield word\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) longWords += word\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length() > n) longWords += word\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        var result = List[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result = result ::: List(word)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(w => w.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = ListBuffer[String]()\n        for (word <- words) {\n            if (word.length > n) longWords += word\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        var result = List[String]()\n        for (word <- words) {\n            if (word.length() > n) result = result ::: List(word)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n)\n                result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(x => x.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result += word\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) longWords += word\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = ListBuffer[String]()\n        for (word <- words) {\n            if (word.length > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(word => word.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result += word\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        words.filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = for (word <- words if word.length > n) yield word\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        var list = List[String]()\n        for (word <- words) {\n            if (word.length() > n) list = word :: list\n        }\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqr2seux_.scala:14)\n\tat Problem.main(tmpqr2seux_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]\n        for (word <- words) {\n            if (word.length > n) {\n                result += word\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length() > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124166,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        words.filter(word => word.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length > n) result += word\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        var result = List[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result = word :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmptuttucs_.scala:16)\n\tat Problem.main(tmptuttucs_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").toList.filter(x => x.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val longWords = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                longWords += word\n            }\n        }\n        longWords.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(x => x.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \").toList\n        words.filter(x => x.length > n)\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124167,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val res = for (word <- words if word.length > n) yield word\n        res.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1666124170,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        val words = str.split(\" \")\n        val result = new ListBuffer[String]()\n        for (word <- words) {\n            if (word.length() > n) {\n                result += word\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(_.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find words that are longer than n characters from a given list of words.\n    def longWords(n : Long, str : String) : List[String] = {\n        str.split(\" \").filter(x => x.length > n).toList\n    }\n    def main(args: Array[String]) = {\n    assert(longWords((3l), (\"python is a programming language\")).equals((List[String](\"python\", \"programming\", \"language\"))));\n    assert(longWords((2l), (\"writing a program\")).equals((List[String](\"writing\", \"program\"))));\n    assert(longWords((5l), (\"sorting list\")).equals((List[String](\"sorting\"))));\n    }\n\n}\n",
      "timestamp": 1665509926,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
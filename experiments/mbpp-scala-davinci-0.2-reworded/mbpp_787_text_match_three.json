{
  "name": "mbpp_787_text_match_three",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that matches a string that has an a followed by three 'b'.\n    def textMatchThree(text : String) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_787_text_match_three.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(textMatchThree((\"ac\")) == (false));\n    assert(textMatchThree((\"dc\")) == (false));\n    assert(textMatchThree((\"abbbba\")) == (true));\n    assert(textMatchThree((\"caacabbbba\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x.substring(0, 4) == \"abbb\" => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a\\\\bb\\\\bb\\\\b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length < 4 => false\n            case x if x.length == 4 => x == \"abbb\"\n            case x if x.length > 4 => x.substring(0, 4) == \"abbb\" || textMatchThree(x.substring(1))\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a\\\\bb\\\\bb\\\\b\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"a(bbb)\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        text match {\n            case x if x.length >= 4 && x(0) == 'a' && x(1) == 'b' && x(2) == 'b' && x(3) == 'b' => true\n            case _ => false\n        }",
    "        text match {\n            case x if x.contains(\"a\") && x.contains(\"bbb\") => true\n            case _ => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }",
    "        val pattern = \"ab{3}\".r\n        pattern.findFirstIn(text) match {\n            case Some(_) => true\n            case None => false\n        }"
  ]
}
{
  "name": "mbpp_222_check_type",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass.getName)\n        test_tuple_list_type.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmud988s9.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmud988s9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmud988s9.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val data_type = test_tuple.getClass.getName.split(\"\\\\.\").last\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass.getName.split(\"\\\\.\").last != data_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpou4fa7ze.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpou4fa7ze.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpou4fa7ze.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.isInstanceOf[Int] && y.isInstanceOf[Int]\n            case (x, y, z) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int]\n            case (x, y, z, w) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int]\n            case (x, y, z, w, v) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int] && v.isInstanceOf[Int]\n            case (x, y, z, w, v, u) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int] && v.isInstanceOf[Int] && u.isInstanceOf[Int]\n            case (x, y, z, w, v, u, t) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int] && v.isInstanceOf[Int] && u.isInstanceOf[Int] && t.isInstanceOf[Int]\n            case (x, y, z, w, v, u, t, s) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int] && v.isInstanceOf[Int] && u.isInstanceOf[Int] && t.isInstanceOf[Int] && s.isInstanceOf[Int]\n            case (x, y, z, w, v, u, t, s, r) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && w.isInstanceOf[Int] && v.isInstanceOf[Int] && u.isInstanceOf[Int] && t.isInstanceOf[Int] && s.isInstanceOf\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbwe3lrbd.scala:23:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwe3lrbd.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwe3lrbd.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwe3lrbd.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbwe3lrbd.scala:22:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpbwe3lrbd.scala:16:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m16 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : Double, y : Double, z : Double) => true\n            case (x : String, y : String, z : String) => true\n            case (x : Boolean, y : Boolean, z : Boolean) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywc72b2.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywc72b2.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmywc72b2.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.getClass\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn6hh_v60.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn6hh_v60.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != data_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6hh_v60.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6hh_v60.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6hh_v60.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (temp != test_tuple.asInstanceOf[Product].productElement(i).getClass) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnihqz5hi.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnihqz5hi.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnihqz5hi.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var tuple_type_list_index = 0\n        var check_type = true\n        while (tuple_type_list_index < tuple_type_list_size - 1) {\n            if (tuple_type_list(tuple_type_list_index) != tuple_type_list(tuple_type_list_index + 1)) {\n                check_type = false\n            }\n            tuple_type_list_index += 1\n        }\n        check_type\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_sub = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n        val tuple_type_list_last_sub_list = tuple_type_list_last_sub.split(\",\")\n        val tuple_type_list_last_sub_list_size = tuple_type_list_last_sub_list.size\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_sub_list_size - 1) {\n            if (tuple_type_list_last_sub_list(i) != tuple_type_list_last_sub_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40apt9v5.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40apt9v5.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp40apt9v5.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last_element = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_element_list = tuple_type_list_last_element.split(\"\\\\]\")\n        val tuple_type_list_last_element_list_size = tuple_type_list_last_element_list.size\n        val tuple_type_list_last_element_list_last_element = tuple_type_list_last_element_list(tuple_type_list_last_element_list_size - 1)\n        val tuple_type_list_last_element_list_last_element_list = tuple_type_list_last_element_list_last_element.split(\",\")\n        val tuple_type_list_last_element_list_last_element_list_size = tuple_type_list_last_element_list_last_element_list.size\n        val tuple_type_list_last_element_list_last_element_list_last_element = tuple_type_list_last_element_list_last_element_list(tuple_type_list_last_element_list_last_element_list_size - 1)\n        val tuple_type_list_last_element_list_last_element_list_last_element_list = tuple_type_list_last_element_list_last_element_list_last_element.split(\"\\\\$\")\n        val tuple_type_list_last_element_list_last_element_list_last_element_list_size = tuple_type_list_last_element_list_last_element_list_last_element_list.size\n        val tuple_type_list_last_element_list_last_element_list_last_element_list_last_element = tuple_type_list_last_element_list_last_element_list_last_element_list(tuple_type_list_last_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx3uowoi6.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3uowoi6.scala:18:167 -----------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_type_list_last_element_list_last_element_list_last_element_list_last_element\u001b[0m = tuple_type_list_last_element_list_last_element_list_last_element_list(tuple_type_list_last_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: tuple_type_list_last_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx3uowoi6.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3uowoi6.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx3uowoi6.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Er",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : String, y : String, z : String) => true\n            case (x : Double, y : Double, z : Double) => true\n            case (x : Float, y : Float, z : Float) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenhezvzq.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenhezvzq.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpenhezvzq.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_new = tuple_type_list(1).split(\"\\\\]\")\n        val tuple_type_list_new_new = tuple_type_list_new(0).split(\",\")\n        val tuple_type_list_new_new_new = tuple_type_list_new_new.map(x => x.split(\"\\\\.\")(1))\n        val tuple_type_list_new_new_new_new = tuple_type_list_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new = tuple_type_list_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new_new = tuple_type_list_new_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new_new_new = tuple_type_list_new_new_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new_new_new_new = tuple_type_list_new_new_new_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new_new_new_new_new = tuple_type_list_new_new_new_new_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_new_new_new_new_new_new_new_new_new_new = tuple_type_list_new_new_new_new_new_new_new_new_new.map(x => x.split(\"\\\\$\")(0))\n        val\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpljb45ngk.scala:18:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpljb45ngk.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljb45ngk.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljb45ngk.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpljb45ngk.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first_type = test_tuple.getClass.getName\n        for (i <- 0 to test_tuple.productArity - 1) {\n            if (test_tuple.productElement(i).getClass.getName != first_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5x1sdib.scala:8:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo5x1sdib.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != first_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5x1sdib.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5x1sdib.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5x1sdib.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass.getName\n        for (i <- 0 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != data_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdh8ouprf.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdh8ouprf.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdh8ouprf.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val first_type = tuple_type_list(1).split(\"\\\\]\")(0)\n            for (i <- 1 until tuple_type_list_size) {\n                val current_type = tuple_type_list(i).split(\"\\\\]\")(0)\n                if (current_type != first_type) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_1 = tuple_type_list(1).split(\"\\\\]\")\n        val tuple_type_list_2 = tuple_type_list_1(0).split(\",\")\n        val tuple_type_list_3 = tuple_type_list_2.map(x => x.trim)\n        val tuple_type_list_4 = tuple_type_list_3.map(x => x.split(\"\\\\.\"))\n        val tuple_type_list_5 = tuple_type_list_4.map(x => x(x.length - 1))\n        val tuple_type_list_6 = tuple_type_list_5.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_7 = tuple_type_list_6.map(x => x(x.length - 1))\n        val tuple_type_list_8 = tuple_type_list_7.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_9 = tuple_type_list_8.map(x => x(x.length - 1))\n        val tuple_type_list_10 = tuple_type_list_9.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_11 = tuple_type_list_10.map(x => x(x.length - 1))\n        val tuple_type_list_12 = tuple_type_list_11.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_13 = tuple_type_list_12.map(x => x(x.length - 1))\n        val tuple_type_list_14 = tuple_type_list_13.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_15 = tuple_type_list_14.map(x => x(x.length - 1))\n        val tuple_type_list_16 = tuple_type_list_15.map(x => x.split(\"\\\\$\"))\n        val tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnk43fgw9.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnk43fgw9.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n        val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n        val test_tuple_type_list_last_list_size = test_tuple_type_list_last_list.size\n        val test_tuple_type_list_last_list_last = test_tuple_type_list_last_list(test_tuple_type_list_last_list_size - 1)\n        val test_tuple_type_list_last_list_last_list = test_tuple_type_list_last_list_last.split(\"\\\\.\")\n        val test_tuple_type_list_last_list_last_list_size = test_tuple_type_list_last_list_last_list.size\n        val test_tuple_type_list_last_list_last_list_last = test_tuple_type_list_last_list_last_list(test_tuple_type_list_last_list_last_list_size - 1)\n        val test_tuple_type_list_last_list_last_list_last_list = test_tuple_type_list_last_list_last_list_last.split(\"\\\\$\")\n        val test_tuple_type_list_last_list_last_list_last_list_size = test_tuple_type_list_last_list_last_list_last_list.size\n        val test_tuple_type_list_last_list_last_list_last_list_last = test_tuple_type_list_last_list_last_list_last_list(test_tuple_type_list_last_list_last\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsbwroej9.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsbwroej9.scala:18:121 -------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_last_list_last_list_last_list_last\u001b[0m = test_tuple_type_list_last_list_last_list_last_list(test_tuple_type_list_last_list_last\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    (test_tuple_type_list_last_list_last : String)\n\u001b[31m   |\u001b[0m                Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsbwroej9.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbwroej9.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbwroej9.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbwroej9",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z, a) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z, a, b) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z, a, b, c) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z, a, b, c, d) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass) {\n                    true\n                }\n                else {\n                    false\n                }\n            }\n            case (x, y, z, a, b, c, d, e) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy2lev6dp.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy2lev6dp.scala:65:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2lev6dp.scala:56:104 -------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m                \u001b[33mif\u001b[0m (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    Class[?1.CAP]\n\u001b[31m   |\u001b[0mRequired: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mwhere:    ?\u001b[31m1\u001b[0m is an unknown value of type scala.runtime.TypeBox[Nothing, Object]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy2lev6dp.scala:59:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy2lev6dp.scala:60:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy2lev6dp.scala:61:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_size = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_size) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjlm5uys0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjlm5uys0.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjlm5uys0.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var data_type = test_tuple.getClass.getName\n        var flag = true\n        test_tuple.asInstanceOf[Product].productIterator.foreach {\n            i => if(i.getClass.getName != data_type) flag = false\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcatkb1g8.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcatkb1g8.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcatkb1g8.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : String, y : String, z : String) => true\n            case (x : Double, y : Double, z : Double) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        for(i <- 0 until test_tuple.productArity) {\n            if(test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd17pkmhw.scala:7:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd17pkmhw.scala:8:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m(test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass) {\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_len = tuple_type_list.length\n        if (tuple_type_list_len == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_last = tuple_type_list(tuple_type_list_len - 1)\n            val tuple_type_list_last_len = tuple_type_list_last.length\n            val tuple_type_list_last_new = tuple_type_list_last.substring(0, tuple_type_list_last_len - 1)\n            val tuple_type_list_last_new_list = tuple_type_list_last_new.split(\",\")\n            val tuple_type_list_last_new_list_len = tuple_type_list_last_new_list.length\n            val tuple_type_list_last_new_list_first = tuple_type_list_last_new_list(0)\n            for (i <- 1 to tuple_type_list_last_new_list_len - 1) {\n                if (tuple_type_list_last_new_list(i) != tuple_type_list_last_new_list_first) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilpc2un6.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilpc2un6.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilpc2un6.scala:30:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass.toString\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (first_type != test_tuple.asInstanceOf[Product].productElement(i).getClass.toString) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnggq1mln.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnggq1mln.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnggq1mln.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        val types = t.productIterator.map(_.getClass.getName).toSet\n        if (types.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kb1dgws.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kb1dgws.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3kb1dgws.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        val test_tuple_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != test_tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdy8ygutv.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdy8ygutv.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdy8ygutv.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_arr = tuple_type.split(\"\\\\[\")\n        val tuple_type_arr_len = tuple_type_arr.length\n        val tuple_type_arr_last = tuple_type_arr(tuple_type_arr_len - 1)\n        val tuple_type_arr_last_arr = tuple_type_arr_last.split(\"\\\\.\")\n        val tuple_type_arr_last_arr_len = tuple_type_arr_last_arr.length\n        val tuple_type_arr_last_arr_last = tuple_type_arr_last_arr(tuple_type_arr_last_arr_len - 1)\n        if (tuple_type_arr_last_arr_last == \"Object\") {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpccyfxvpb.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpccyfxvpb.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpccyfxvpb.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        val type_list = List(tuple._1.getClass, tuple._2.getClass, tuple._3.getClass)\n        val type_set = type_list.toSet\n        if (type_set.size == 1)\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdw73dgoy.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdw73dgoy.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdw73dgoy.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator.toList\n            val tuple_types = tuple_elements.map(x => x.getClass.getName)\n            val tuple_types_set = tuple_types.toSet\n            if (tuple_types_set.size == 1) {\n                true\n            } else {\n                false\n            }\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9jrcfn2a.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9jrcfn2a.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9jrcfn2a.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptrrjyxlk.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptrrjyxlk.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptrrjyxlk.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.toString\n        }\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hf72f2w.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hf72f2w.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hf72f2w.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass.getName)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        if (test_tuple_list_type_set.size == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp21wk_e1r.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp21wk_e1r.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp21wk_e1r.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list(0).getClass\n        test_tuple_list.forall(x => x.getClass == test_tuple_type)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplkb_hc8f.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplkb_hc8f.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplkb_hc8f.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_length_minus_one = test_tuple_type_list_length - 1\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length_minus_one)\n        val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n        val test_tuple_type_list_last_list_length = test_tuple_type_list_last_list.length\n        val test_tuple_type_list_last_list_length_minus_one = test_tuple_type_list_last_list_length - 1\n        val test_tuple_type_list_last_list_last = test_tuple_type_list_last_list(test_tuple_type_list_last_list_length_minus_one)\n        val test_tuple_type_list_last_list_last_list = test_tuple_type_list_last_list_last.split(\"\\\\.\")\n        val test_tuple_type_list_last_list_last_list_length = test_tuple_type_list_last_list_last_list.length\n        val test_tuple_type_list_last_list_last_list_length_minus_one = test_tuple_type_list_last_list_last_list_length - 1\n        val test_tuple_type_list_last_list_last_list_last = test_tuple_type_list_last_list_last_list(test_tuple_type_list_last_list_last_list_length_minus_one)\n        val test_tuple_type_list_last_list_last_list_last_list = test_tuple_type_list_last_list_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46rsqcvr.scala:19:65 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_last_list_last_list_last_list\u001b[0m = test_tuple_type_list_last_list_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Not found: test_tuple_type_list_last_list_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp46rsqcvr.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46rsqcvr.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46rsqcvr.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46rsqcvr.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-ex",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n            var element_type = tuple_elements.next.getClass.getName\n            for (i <- 1 until tuple_length) {\n                if (element_type != tuple_elements.next.getClass.getName) {\n                    return false\n                }\n            }\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        val type1 = tuple._1.getClass.getName\n        val type2 = tuple._2.getClass.getName\n        val type3 = tuple._3.getClass.getName\n        if (type1 == type2 && type2 == type3) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7do16nz2.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7do16nz2.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7do16nz2.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && x.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass && x.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass && x.getClass == e.getClass && x.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n4cz_n7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n4cz_n7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n4cz_n7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp2n4cz_n7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val t = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n            val t1 = t._1.getClass.getName\n            val t2 = t._2.getClass.getName\n            if (t1 == t2) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (tuple_type == \"scala.Tuple3\") {\n            val t = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n            val t1 = t._1.getClass.getName\n            val t2 = t._2.getClass.getName\n            val t3 = t._3.getClass.getName\n            if (t1 == t2 && t2 == t3) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (tuple_type == \"scala.Tuple4\") {\n            val t = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n            val t1 = t._1.getClass.getName\n            val t2 = t._2.getClass.getName\n            val t3 = t._3.getClass.getName\n            val t4 = t._4.getClass.getName\n            if (t1 == t2 && t2 == t3 && t3 == t4) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (tuple_type == \"scala.Tuple5\") {\n            val t = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n            val t1 = t._1.getClass.getName\n            val t2 = t._2.getClass.getName\n            val t3 = t._3.getClass.getName\n            val t4 = t._4.getClass.getName\n            val t5 = t._5.get\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123509,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuc7i_dxg.scala:58:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuc7i_dxg.scala:49:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mt5\u001b[0m = t._5.get\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value get is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuc7i_dxg.scala:52:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuc7i_dxg.scala:53:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuc7i_dxg.scala:54:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuc7i_dxg.scala:57:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpuc7i_dxg.scala:51:4 ----------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var flag = true\n        for (i <- 1 until tuple_type_list_size) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpndeb9l0m.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpndeb9l0m.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpndeb9l0m.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\", \"java.lang.Boolean\")\n        if (tuple_type_list.contains(tuple_type)) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtzxj_m5.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtzxj_m5.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvtzxj_m5.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        var flag = true\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type) {\n                    flag = false\n                }\n            }\n            case (x, y, z) => {\n                if (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type) {\n                    flag = false\n                }\n            }\n            case (x, y, z, a) => {\n                if (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type || a.getClass.getName != test_tuple_type) {\n                    flag = false\n                }\n            }\n            case (x, y, z, a, b) => {\n                if (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type || a.getClass.getName != test_tuple_type || b.getClass.getName != test_tuple_type) {\n                    flag = false\n                }\n            }\n            case (x, y, z, a, b, c) => {\n                if (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type || a.getClass.getName != test_tuple_type || b.getClass.getName != test_tuple_type || c.getClass.getName != test_tuple_type) {\n                    flag = false\n                }\n            }\n            case (x, y, z, a, b, c, d) => {\n                if (x.getClass\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123509,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3n8w7cak.scala:36:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3n8w7cak.scala:44:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n8w7cak.scala:10:16 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m                \u001b[33mif\u001b[0m (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m                Required: Boolean\n\u001b[31m   |\u001b[0m                Maybe you are missing an else part for the conditional?\n\u001b[31m11 |\u001b[0m                    flag = \u001b[31mfalse\u001b[0m\n\u001b[31m12 |\u001b[0m                }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n8w7cak.scala:15:16 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                \u001b[33mif\u001b[0m (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m                Required: Boolean\n\u001b[31m   |\u001b[0m                Maybe you are missing an else part for the conditional?\n\u001b[31m16 |\u001b[0m                    flag = \u001b[31mfalse\u001b[0m\n\u001b[31m17 |\u001b[0m                }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n8w7cak.scala:20:16 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                \u001b[33mif\u001b[0m (x.getClass.getName != test_tuple_type || y.getClass.getName != test_tuple_type || z.getClass.getName != test_tuple_type || a.getClass.getName != test_tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    Unit\n\u001b[31m   |\u001b[0m          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_check = test_tuple.asInstanceOf[Product].productElement(i).getClass.toString\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.toString != type_check) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_axt2lz.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_axt2lz.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_axt2lz.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b, c) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            case (a, b) => {\n                if (a.getClass == b.getClass) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n            case _ => {\n                return false\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_99ius5i.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_99ius5i.scala:30:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_99ius5i.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeuy9sl68.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeuy9sl68.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeuy9sl68.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_split_2 = tuple_type_split(1).split(\"\\\\]\")\n        val tuple_type_split_3 = tuple_type_split_2(0).split(\",\")\n        val tuple_type_split_4 = tuple_type_split_3.map(x => x.split(\"\\\\.\"))\n        val tuple_type_split_5 = tuple_type_split_4.map(x => x(x.length - 1))\n        val tuple_type_split_6 = tuple_type_split_5.map(x => x.split(\"\\\\$\"))\n        val tuple_type_split_7 = tuple_type_split_6.map(x => x(x.length - 1))\n        val tuple_type_split_8 = tuple_type_split_7.map(x => x.split(\"\\\\$mc\"))\n        val tuple_type_split_9 = tuple_type_split_8.map(x => x(x.length - 1))\n        val tuple_type_split_10 = tuple_type_split_9.map(x => x.split(\"\\\\$iw\"))\n        val tuple_type_split_11 = tuple_type_split_10.map(x => x(x.length - 1))\n        val tuple_type_split_12 = tuple_type_split_11.map(x => x.split(\"\\\\$mc\"))\n        val tuple_type_split_13 = tuple_type_split_12.map(x => x(x.length - 1))\n        val tuple_type_split_14 = tuple_type_split_13.map(x => x.split(\"\\\\$iw\"))\n        val tuple_type_split_15 = tuple_type_split_14.map(x => x(x.length - 1))\n        val tuple_type_split_16 = tuple_type_split_15.map(x => x.split(\"\\\\$mc\"))\n        val tuple_type_split_17 = tuple_type_split_16.map(x => x(x.\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123509,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp394lf9fw.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp394lf9fw.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp394lf9fw.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp394lf9fw.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp394lf9fw.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_size = tuple_type_list_last_last_list.size\n        var i = 0\n        var flag = true\n        while (i < tuple_type_list_last_last_list_size - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprog1n1ns.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprog1n1ns.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprog1n1ns.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list(0).getClass\n        for (i <- test_tuple_list) {\n            if (i.getClass != test_tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i3fpoz.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i3fpoz.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12i3fpoz.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n        val test_tuple_type_list_last_size = test_tuple_type_list_last.size\n        val test_tuple_type_list_last_size_minus_1 = test_tuple_type_list_last_size - 1\n        val test_tuple_type_list_last_size_minus_2 = test_tuple_type_list_last_size - 2\n        val test_tuple_type_list_last_size_minus_3 = test_tuple_type_list_last_size - 3\n        val test_tuple_type_list_last_size_minus_4 = test_tuple_type_list_last_size - 4\n        val test_tuple_type_list_last_size_minus_5 = test_tuple_type_list_last_size - 5\n        val test_tuple_type_list_last_size_minus_6 = test_tuple_type_list_last_size - 6\n        val test_tuple_type_list_last_size_minus_7 = test_tuple_type_list_last_size - 7\n        val test_tuple_type_list_last_size_minus_8 = test_tuple_type_list_last_size - 8\n        val test_tuple_type_list_last_size_minus_9 = test_tuple_type_list_last_size - 9\n        val test_tuple_type_list_last_size_minus_10 = test_tuple_type_list_last_size - 10\n        val test_tuple_type_list_last_size_minus_11 = test_tuple_type_list_last_size - 11\n        val test_t\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuz8bu169.scala:23:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuz8bu169.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuz8bu169.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuz8bu169.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuz8bu169.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_final = tuple_type_split(1).split(\"\\\\]\")(0)\n        val tuple_type_final_split = tuple_type_final.split(\",\")\n        val tuple_type_final_split_length = tuple_type_final_split.length\n        var flag = true\n        for (i <- 0 until tuple_type_final_split_length) {\n            if (tuple_type_final_split(i) != tuple_type_final_split(0)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq0s0g9in.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq0s0g9in.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpq0s0g9in.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first = test_tuple.asInstanceOf[Product].productElement(0).getClass()\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (first != test_tuple.asInstanceOf[Product].productElement(i).getClass()) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltpgthsu.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltpgthsu.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltpgthsu.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list.map(x => x.getClass.toString)\n        val test_tuple_type_set = test_tuple_type.toSet\n        if (test_tuple_type_set.size == 1) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgq2zc312.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgq2zc312.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgq2zc312.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName.split(\"\\\\.\").last\n        val test_tuple_type_list = test_tuple.productIterator.toList.map(x => x.getClass.getName.split(\"\\\\.\").last)\n        if (test_tuple_type_list.distinct.length == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123508,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe7oct8zm.scala:7:46 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list\u001b[0m = test_tuple.productIterator.toList.map(\u001b[36mx\u001b[0m => x.getClass.getName.split(\u001b[31m\"\\\\.\"\u001b[0m).last)\n\u001b[31m\u001b[31m  |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                              value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe7oct8zm.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe7oct8zm.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe7oct8zm.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var data_type = test_tuple.getClass.getName.split(\"\\\\.\").last\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass.getName.split(\"\\\\.\").last != data_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zzn7nax.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zzn7nax.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zzn7nax.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var prev_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != prev_type) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123513,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphdazjav0.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphdazjav0.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != prev_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdazjav0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdazjav0.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphdazjav0.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        val type_list = t.productIterator.toList.map(x => x.getClass)\n        val type_set = type_list.toSet\n        if (type_list.length == type_set.size) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123508,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcdmzlkt8.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcdmzlkt8.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcdmzlkt8.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for(i <- 0 to tuple_length - 1) {\n            val element_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n            if(element_type != tuple_type) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123509,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3k4dl3z.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3k4dl3z.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr3k4dl3z.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass\n        if (tuple_type.getName == \"scala.Tuple1\") {\n            return true\n        }\n        val tuple_length = test_tuple.productArity\n        val tuple_elements = test_tuple.productIterator\n        var first_type = tuple_elements.next.getClass\n        for (i <- 1 to tuple_length - 1) {\n            if (tuple_elements.next.getClass != first_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkwu7hni5.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_length\u001b[0m = test_tuple.productArity\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkwu7hni5.scala:11:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_elements\u001b[0m = test_tuple.productIterator\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwu7hni5.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwu7hni5.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkwu7hni5.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass.getName\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123514,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgjfsy944.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgjfsy944.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgjfsy944.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case (x, y, z) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass) true\n                else false\n            }\n            case (x, y, z, a) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass) true\n                else false\n            }\n            case (x, y, z, a, b) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e, f) => {\n                if (\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpwt1p5sm9.scala:36:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwt1p5sm9.scala:45:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwt1p5sm9.scala:42:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            var i = 0\n            var flag = true\n            while (i < tuple_length) {\n                val element_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n                if (element_type != tuple_type) {\n                    flag = false\n                    return flag\n                }\n                i += 1\n            }\n            return flag\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi30c13o2.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi30c13o2.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi30c13o2.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_2 = tuple_type_list(1).split(\"\\\\]\")\n        val tuple_type_list_3 = tuple_type_list_2(0).split(\",\")\n        val tuple_type_list_4 = tuple_type_list_3.map(x => x.split(\"\\\\.\")(1))\n        val tuple_type_list_5 = tuple_type_list_4.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_6 = tuple_type_list_5.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_7 = tuple_type_list_6.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_8 = tuple_type_list_7.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_9 = tuple_type_list_8.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_10 = tuple_type_list_9.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_11 = tuple_type_list_10.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_12 = tuple_type_list_11.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_13 = tuple_type_list_12.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_14 = tuple_type_list_13.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_15 = tuple_type_list_14.map(x => x.split(\"\\\\$\")(0))\n        val tuple_type_list_16 = tuple_type_list_15.map(x => x.split(\"\\\\$\")(0))\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpry3ir8.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxpry3ir8.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxpry3ir8.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxpry3ir8.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var t = test_tuple.asInstanceOf[Product]\n        var type_list = List[String]()\n        for (i <- 0 until t.productArity) {\n            type_list = type_list :+ t.productElement(i).getClass.getName\n        }\n        for (i <- 0 until type_list.length - 1) {\n            if (type_list(i) != type_list(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_u75lmzi.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_u75lmzi.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_u75lmzi.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => {\n                if (a.getClass == b.getClass) true\n                else false\n            }\n            case (a, b, c) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass) true\n                else false\n            }\n            case (a, b, c, d) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass) true\n                else false\n            }\n            case (a, b, c, d, e) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g, h) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g, h, i) => {\n                if (\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpv_fvi2k6.scala:36:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_fvi2k6.scala:45:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_fvi2k6.scala:42:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        val tuple_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpotrgvu9l.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpotrgvu9l.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName.split(\"\\\\.\").last\n        if (tuple_type == \"Tuple1\") {\n            return true\n        }\n        val tuple_length = test_tuple.productArity\n        var i = 0\n        var flag = true\n        while (i < tuple_length) {\n            val element_type = test_tuple.productElement(i).getClass.getName.split(\"\\\\.\").last\n            if (element_type != tuple_type) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplh_0pnt4.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_length\u001b[0m = test_tuple.productArity\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplh_0pnt4.scala:14:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36melement_type\u001b[0m = test_tuple.productElement(i).getClass.getName.split(\u001b[31m\"\\\\.\"\u001b[0m).last\n\u001b[31m\u001b[31m   |\u001b[0m                               ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplh_0pnt4.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplh_0pnt4.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplh_0pnt4.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n        val test_tuple_type_list_last_length = test_tuple_type_list_last.length\n        val test_tuple_type_list_last_last = test_tuple_type_list_last.substring(0, test_tuple_type_list_last_length - 1)\n        val test_tuple_type_list_last_last_length = test_tuple_type_list_last_last.length\n        val test_tuple_type_list_last_last_last = test_tuple_type_list_last_last.substring(0, test_tuple_type_list_last_last_length - 1)\n        val test_tuple_type_list_last_last_last_length = test_tuple_type_list_last_last_last.length\n        val test_tuple_type_list_last_last_last_last = test_tuple_type_list_last_last_last.substring(0, test_tuple_type_list_last_last_last_length - 1)\n        val test_tuple_type_list_last_last_last_last_length = test_tuple_type_list_last_last_last_last.length\n        val test_tuple_type_list_last_last_last_last_last = test_tuple_type_list_last_last_last_last.substring(0, test_tuple_type_list_last_last_last_last_length - 1)\n        val test_tuple_type_list_last_last_last_last_last_length = test_tuple_type_list_last_last_last_last_last.length\n        val test\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_1vu9o9j.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_1vu9o9j.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1vu9o9j.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1vu9o9j.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_1vu9o9j.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.toString\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_final = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        if (tuple_type_list_last_final == \"java.lang.String\") {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn912f9l3.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn912f9l3.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn912f9l3.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : Double, y : Double, z : Double) => true\n            case (x : String, y : String, z : String) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_new = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_new_list = tuple_type_list_last_new.split(\",\")\n        val tuple_type_list_last_new_list_length = tuple_type_list_last_new_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_new_list_length - 1) {\n            if (tuple_type_list_last_new_list(i) != tuple_type_list_last_new_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123518,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx49h_i5m.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx49h_i5m.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx49h_i5m.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass)\n        test_tuple_list_type.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpic_jbyro.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpic_jbyro.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpic_jbyro.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123527,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf7mhnh17.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf7mhnh17.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf7mhnh17.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf7mhnh17.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.next().getClass\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass != temp) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123521,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu09_7npw.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu09_7npw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu09_7npw.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_size_minus_one = test_tuple_type_list_size - 1\n        val test_tuple_type_list_size_minus_two = test_tuple_type_list_size - 2\n        val test_tuple_type_list_size_minus_three = test_tuple_type_list_size - 3\n        val test_tuple_type_list_size_minus_four = test_tuple_type_list_size - 4\n        val test_tuple_type_list_size_minus_five = test_tuple_type_list_size - 5\n        val test_tuple_type_list_size_minus_six = test_tuple_type_list_size - 6\n        val test_tuple_type_list_size_minus_seven = test_tuple_type_list_size - 7\n        val test_tuple_type_list_size_minus_eight = test_tuple_type_list_size - 8\n        val test_tuple_type_list_size_minus_nine = test_tuple_type_list_size - 9\n        val test_tuple_type_list_size_minus_ten = test_tuple_type_list_size - 10\n        val test_tuple_type_list_size_minus_eleven = test_tuple_type_list_size - 11\n        val test_tuple_type_list_size_minus_twelve = test_tuple_type_list_size - 12\n        val test_tuple_type_list_size_minus_thirteen = test_tuple_type_list_size - 13\n        val test_tuple_type_list_size_minus_fourteen = test_tuple_type_list_size - 14\n        val test_tuple_type_list_size_minus_fifteen = test\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123526,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpes29ip48.scala:23:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_size_minus_fifteen\u001b[0m = test\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                      Not found: test\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpes29ip48.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpes29ip48.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpes29ip48.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpes29ip48.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- 1 until type_list.length) {\n            if (type_list(i) != type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123525,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4cpxybz.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4cpxybz.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4cpxybz.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != first_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123531,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8csjkx_.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpl8csjkx_.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != first_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8csjkx_.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8csjkx_.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl8csjkx_.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var j = 1\n        while (i < test_tuple.productArity && flag) {\n            while (j < test_tuple.productArity && flag) {\n                if (test_tuple.productElement(i).getClass != test_tuple.productElement(j).getClass) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0nhylelk.scala:9:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity && flag) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0nhylelk.scala:10:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < test_tuple.productArity && flag) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0nhylelk.scala:11:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != test_tuple.productElement(j).getClass) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0nhylelk.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0nhylelk.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0nhylelk.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m))",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_length = tuple_type.length\n        val tuple_type_index = tuple_type.indexOf(\"[\")\n        val tuple_type_name = tuple_type.substring(tuple_type_index + 1, tuple_type_length - 1)\n        val tuple_type_name_length = tuple_type_name.length\n        val tuple_type_name_index = tuple_type_name.indexOf(\";\")\n        val tuple_type_name_final = tuple_type_name.substring(0, tuple_type_name_index)\n        val tuple_type_name_final_length = tuple_type_name_final.length\n        val tuple_type_name_final_index = tuple_type_name_final.indexOf(\".\")\n        val tuple_type_name_final_final = tuple_type_name_final.substring(tuple_type_name_final_index + 1, tuple_type_name_final_length)\n        val tuple_type_name_final_final_length = tuple_type_name_final_final.length\n        val tuple_type_name_final_final_index = tuple_type_name_final_final.indexOf(\"$\")\n        val tuple_type_name_final_final_final = tuple_type_name_final_final.substring(0, tuple_type_name_final_final_index)\n        val tuple_type_name_final_final_final_length = tuple_type_name_final_final_final.length\n        val tuple_type_name_final_final_final_index = tuple_type_name_final_final_final.indexOf(\"$\")\n        val tuple_type_name_final_final_final_final = tuple_type_name_final_final_final.substring(tuple_type_name_final_final_final_index + 1, tuple_type_name_final_final_final_length)\n        val tuple_type_name_final_final_final_final_length = tuple_type_name_final_final_final_final.length\n        val tuple_type_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123531,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqgfsjiwz.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqgfsjiwz.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfsjiwz.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfsjiwz.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqgfsjiwz.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123528,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val first_type = tuple_type_list(1).split(\"\\\\]\")(0)\n            for (i <- 1 to tuple_type_list_size - 1) {\n                val current_type = tuple_type_list(i).split(\"\\\\]\")(0)\n                if (first_type != current_type) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6q5tprw2.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6q5tprw2.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6q5tprw2.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_1 = test_tuple_type_list(1).split(\"\\\\]\")\n        val test_tuple_type_list_2 = test_tuple_type_list_1(0).split(\",\")\n        val test_tuple_type_list_3 = test_tuple_type_list_2.map(x => x.split(\"\\\\.\")(1))\n        val test_tuple_type_list_4 = test_tuple_type_list_3.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_5 = test_tuple_type_list_4.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_6 = test_tuple_type_list_5.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_7 = test_tuple_type_list_6.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_8 = test_tuple_type_list_7.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_9 = test_tuple_type_list_8.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_10 = test_tuple_type_list_9.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_11 = test_tuple_type_list_10.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_12 = test_tuple_type_list_11.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_list_13 = test_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0m_h_kk4.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0m_h_kk4.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0m_h_kk4.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0m_h_kk4.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        if (test_tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n            val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n            val test_tuple_type_list_last_list_first = test_tuple_type_list_last_list(0)\n            val test_tuple_type_list_last_list_first_list = test_tuple_type_list_last_list_first.split(\"\\\\.\")\n            val test_tuple_type_list_last_list_first_list_size = test_tuple_type_list_last_list_first_list.size\n            val test_tuple_type_list_last_list_first_list_last = test_tuple_type_list_last_list_first_list(test_tuple_type_list_last_list_first_list_size - 1)\n            for (i <- 0 until test_tuple_type_list_size - 1) {\n                val test_tuple_type_list_i = test_tuple_type_list(i)\n                val test_tuple_type_list_i_list = test_tuple_type_list_i.split(\"\\\\]\")\n                val test_tuple_type_list_i_list_first = test_tuple_type_list_i_list(0)\n                val test_tuple_type_list_i_list_first_list = test_tuple_type_list_i_list_first.split(\"\\\\.\")\n                val test_tuple_type_list_i_list_first_list_size = test_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8jn5g3yb.scala:33:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8jn5g3yb.scala:24:66 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_i_list_first_list_size\u001b[0m = test_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                        Not found: test_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8jn5g3yb.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8jn5g3yb.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8jn5g3yb.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8jn5g3yb.scala:32:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_size = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_size) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123531,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        test_tuple_list.map(x => x.getClass.getName).distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgdklptib.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgdklptib.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgdklptib.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass.getName)\n        val type_set = type_list.toSet\n        if (type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123530,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps5rrivv3.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps5rrivv3.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps5rrivv3.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.toList(0).getClass\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass != temp) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123532,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275kc61u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275kc61u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp275kc61u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = ListBuffer[String]()\n        for (i <- 0 to test_tuple.productArity - 1) {\n            type_list += test_tuple.productElement(i).getClass.toString\n        }\n        for (i <- 0 to test_tuple.productArity - 2) {\n            if (type_list(i) != type_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmvf0xese.scala:8:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmvf0xese.scala:9:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            type_list += test_tuple.productElement(i).getClass.toString\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmvf0xese.scala:11:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmvf0xese.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmvf0xese.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmvf0xese.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var flag = true\n        for (i <- 1 until tuple_type_list_size) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo0fkmb2x.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo0fkmb2x.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo0fkmb2x.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        t.productIterator.forall(x => x.getClass == t.productElement(0).getClass)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123534,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf6gd89u.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf6gd89u.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyf6gd89u.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_array = test_tuple_type.split(\"\\\\.\")\n        val test_tuple_type_name = test_tuple_type_array(test_tuple_type_array.length - 1)\n        if (test_tuple_type_name == \"Tuple2\") {\n            val test_tuple_type_1 = test_tuple.asInstanceOf[(Any, Any)]._1.getClass.getName\n            val test_tuple_type_2 = test_tuple.asInstanceOf[(Any, Any)]._2.getClass.getName\n            if (test_tuple_type_1 == test_tuple_type_2) {\n                true\n            } else {\n                false\n            }\n        } else if (test_tuple_type_name == \"Tuple3\") {\n            val test_tuple_type_1 = test_tuple.asInstanceOf[(Any, Any, Any)]._1.getClass.getName\n            val test_tuple_type_2 = test_tuple.asInstanceOf[(Any, Any, Any)]._2.getClass.getName\n            val test_tuple_type_3 = test_tuple.asInstanceOf[(Any, Any, Any)]._3.getClass.getName\n            if (test_tuple_type_1 == test_tuple_type_2 && test_tuple_type_1 == test_tuple_type_3) {\n                true\n            } else {\n                false\n            }\n        } else if (test_tuple_type_name == \"Tuple4\") {\n            val test_tuple_type_1 = test_tuple.asInstanceOf[(Any, Any, Any, Any)]._1.getClass.getName\n            val test_tuple_type_2 = test_tuple.asInstanceOf[(Any, Any, Any, Any)]._2.getClass.getName\n            val test_tuple_type_3 = test_tuple.asInstanceOf[(Any, Any, Any, Any)].\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7sa3hv3e.scala:30:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7sa3hv3e.scala:38:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7sa3hv3e.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7sa3hv3e.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7sa3hv3e.scala:34:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7sa3hv3e.scala:37:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp7sa3hv3e.scala:31:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m31 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36mar",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_name = test_tuple.getClass.getName\n        for (i <- 0 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != type_name) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123536,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflqxdohn.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflqxdohn.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpflqxdohn.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_list : List[String] = List()\n        for (i <- test_tuple.productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123542,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphgpnzsui.scala:7:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- test_tuple.productIterator) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphgpnzsui.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphgpnzsui.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphgpnzsui.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_of_element = test_tuple.asInstanceOf[Product].productElement(i).getClass\n        while (i < test_tuple.asInstanceOf[Product].productArity) {\n            if (type_of_element != test_tuple.asInstanceOf[Product].productElement(i).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123537,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpowi8cw2p.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpowi8cw2p.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpowi8cw2p.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < test_tuple.productArity && flag) {\n            if (test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass)\n                flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123542,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxlp2hx8f.scala:8:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity && flag) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxlp2hx8f.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass)\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxlp2hx8f.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxlp2hx8f.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxlp2hx8f.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuui_hsgc.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuui_hsgc.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuui_hsgc.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.Boolean\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123538,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgwzjntbu.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgwzjntbu.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgwzjntbu.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.next.getClass\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass != temp) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123541,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9mqt228.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9mqt228.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9mqt228.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv9svus3u.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv9svus3u.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != data_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag : Boolean = true\n        var i : Int = 0\n        while (i < test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != test_tuple.asInstanceOf[Product].productElement(i + 1).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123544,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9um14tv2.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9um14tv2.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9um14tv2.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.next.getClass\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass != temp) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.getClass.getSimpleName\n        for(i <- 0 until test_tuple.productArity) {\n            if(test_tuple.productElement(i).getClass.getSimpleName != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp66us73qi.scala:8:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp66us73qi.scala:9:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m(test_tuple.productElement(i).getClass.getSimpleName != data_type) {\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp66us73qi.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp66us73qi.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp66us73qi.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(tuple_type)\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            val element_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n            if (!tuple_type_list.contains(element_type)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123544,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyl7b01un.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyl7b01un.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyl7b01un.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list.map(x => x.getClass.getName)\n        val test_tuple_type_set = test_tuple_type.toSet\n        if (test_tuple_type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123544,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x234jvw.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x234jvw.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7x234jvw.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123544,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d5j90cj.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d5j90cj.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9d5j90cj.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd5f0sjye.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"scala.Tuple1\", \"scala.Tuple2\", \"scala.Tuple3\", \"scala.Tuple4\", \"scala.Tuple5\", \"scala.Tuple6\", \"scala.Tuple7\", \"scala.Tuple8\", \"scala.Tuple9\", \"scala.Tuple10\", \"scala.Tuple11\", \"scala.Tuple12\", \"scala.Tuple13\", \"scala.Tuple14\", \"scala.Tuple15\", \"scala.Tuple16\", \"scala.Tuple17\", \"scala.Tuple18\", \"scala.Tuple19\", \"scala.Tuple20\", \"scala.Tuple21\", \"scala.Tuple22\")\n        if (tuple_type_list.contains(tuple_type)) {\n            val tuple_size = tuple_type.split(\"\\\\.\").last.toInt\n            val tuple_type_list = ListBuffer[String]()\n            for (i <- 0 until tuple_size) {\n                tuple_type_list += test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n            }\n            val tuple_type_set = tuple_type_list.toSet\n            if (tuple_type_set.size == 1) true else false\n        }\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72e2jou8.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72e2jou8.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp72e2jou8.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val t1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            if (t1_type == t2_type) {\n                true\n            } else {\n                false\n            }\n        } else if (tuple_type == \"scala.Tuple3\") {\n            val t1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type) {\n                true\n            } else {\n                false\n            }\n        } else if (tuple_type == \"scala.Tuple4\") {\n            val t1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            val t4_type = t1._4.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type && t3_type == t4_type) {\n                true\n            } else {\n                false\n            }\n        } else if (tuple_type == \"scala.Tuple5\") {\n            val t1 = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx9wteboq.scala:41:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx9wteboq.scala:49:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9wteboq.scala:43:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9wteboq.scala:44:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx9wteboq.scala:45:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx9wteboq.scala:48:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpx9wteboq.scala:42:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m42 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36mar",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqv5y1zw_.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqv5y1zw_.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqv5y1zw_.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        var flag = true\n        for (i <- 1 until test_tuple_type_list_size) {\n            if (test_tuple_type_list(i) != test_tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27dw8_xr.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27dw8_xr.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp27dw8_xr.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- 0 to type_list.length - 2) {\n            if (type_list(i) != type_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97rvc7he.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97rvc7he.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp97rvc7he.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        if (test_tuple.isInstanceOf[Tuple1[Any]]) {\n            return true\n        }\n        val tuple_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123555,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj9l0t8bb.scala:10:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj9l0t8bb.scala:11:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9l0t8bb.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9l0t8bb.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9l0t8bb.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n        val test_tuple_type_list_last_size = test_tuple_type_list_last.size\n        val test_tuple_type_list_last_sub = test_tuple_type_list_last.substring(0, test_tuple_type_list_last_size - 1)\n        val test_tuple_type_list_last_sub_list = test_tuple_type_list_last_sub.split(\",\")\n        val test_tuple_type_list_last_sub_list_size = test_tuple_type_list_last_sub_list.size\n        val test_tuple_type_list_last_sub_list_first = test_tuple_type_list_last_sub_list(0)\n        for (i <- 1 until test_tuple_type_list_last_sub_list_size) {\n            if (test_tuple_type_list_last_sub_list_first != test_tuple_type_list_last_sub_list(i)) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjddcg5um.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjddcg5um.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjddcg5um.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n            val tuple_type_list_last_size = tuple_type_list_last.size\n            val tuple_type_list_last_type = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n            for (i <- 0 until tuple_type_list_size - 1) {\n                if (tuple_type_list(i) != tuple_type_list_last_type) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplpp05u32.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplpp05u32.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplpp05u32.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag : Boolean = true\n        var type_of_first_element : String = \"\"\n        for (element <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (type_of_first_element == \"\") {\n                type_of_first_element = element.getClass.toString\n            }\n            else {\n                if (type_of_first_element != element.getClass.toString) {\n                    flag = false\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123549,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfecs9xye.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfecs9xye.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfecs9xye.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n        val test_tuple_type_list_last_length = test_tuple_type_list_last.length\n        val test_tuple_type_list_last_last = test_tuple_type_list_last.substring(0, test_tuple_type_list_last_length - 1)\n        val test_tuple_type_list_last_last_list = test_tuple_type_list_last_last.split(\",\")\n        val test_tuple_type_list_last_last_list_length = test_tuple_type_list_last_last_list.length\n        var test_tuple_type_list_last_last_list_first = test_tuple_type_list_last_last_list(0)\n        var test_tuple_type_list_last_last_list_first_length = test_tuple_type_list_last_last_list_first.length\n        test_tuple_type_list_last_last_list_first = test_tuple_type_list_last_last_list_first.substring(0, test_tuple_type_list_last_last_list_first_length - 1)\n        for (i <- 1 until test_tuple_type_list_last_last_list_length) {\n            val test_tuple_type_list_last_last_list_first_length = test_tuple_type_list_last_last_list(i).length\n            val test_tuple_type_list_last_last_list_first_first = test_tuple_type_list_last_last_list(i).substring(0, test_tuple_type_list_last_last_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp23bxhctc.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp23bxhctc.scala:28:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp23bxhctc.scala:19:118 -----------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_last_last_list_first_first\u001b[0m = test_tuple_type_list_last_last_list(i).substring(\u001b[31m0\u001b[0m, test_tuple_type_list_last_last_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Not found: test_tuple_type_list_last_last_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp23bxhctc.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp23bxhctc.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp23bxhctc.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_of_element = test_tuple.asInstanceOf[Product].productElement(i).getClass.toString\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.toString != type_of_element) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnnks7dnb.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnnks7dnb.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnnks7dnb.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_size = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_size) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123531,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf3ld04du.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list(0).getClass\n        test_tuple_list.map(x => x.getClass == test_tuple_type).reduce((x, y) => x && y)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgi678iw6.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgi678iw6.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgi678iw6.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123560,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppgw5lij3.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m1\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgw5lij3.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgw5lij3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppgw5lij3.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple1\") {\n            return true\n        }\n        val tuple_length = test_tuple.productArity\n        val tuple_list = test_tuple.productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass.getName)\n        val type_set = type_list.toSet\n        if (type_set.size == 1) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbwj6p15j.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_length\u001b[0m = test_tuple.productArity\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbwj6p15j.scala:11:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_list\u001b[0m = test_tuple.productIterator.toList\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwj6p15j.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwj6p15j.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbwj6p15j.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- 0 until test_tuple.productArity) {\n            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n        }\n        for (i <- 0 until type_list.length - 1) {\n            if (type_list(i) != type_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpav6tpk_7.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpav6tpk_7.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpav6tpk_7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpav6tpk_7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpav6tpk_7.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        val tuple_type_list_last_last_list_first = tuple_type_list_last_last_list(0)\n        for (i <- 1 until tuple_type_list_last_last_list_length) {\n            if (tuple_type_list_last_last_list_first != tuple_type_list_last_last_list(i)) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123556,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvp1qu3kx.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvp1qu3kx.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvp1qu3kx.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123556,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyn60he_8.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyn60he_8.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyn60he_8.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyn60he_8.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123557,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxihnnp79.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxihnnp79.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxihnnp79.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = tuple_type.substring(tuple_type.indexOf(\"[\") + 1, tuple_type.indexOf(\"]\")).toInt\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n            var tuple_element_type = tuple_elements.next.getClass.getName\n            for (i <- 1 until tuple_length) {\n                if (tuple_elements.next.getClass.getName != tuple_element_type) {\n                    return false\n                }\n            }\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123558,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzfo4wo_.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzfo4wo_.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjzfo4wo_.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpczm2vq_8.scala:8:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpczm2vq_8.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_last = tuple_type_list_last(tuple_type_list_last_size - 1)\n        if (tuple_type_list_last_last == ']') {\n            val tuple_type_list_last_last_last = tuple_type_list_last(tuple_type_list_last_size - 2)\n            if (tuple_type_list_last_last_last == ',') {\n                return false\n            }\n            else {\n                return true\n            }\n        }\n        else {\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123558,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp869x_6tl.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp869x_6tl.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp869x_6tl.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        test_tuple_type match {\n            case \"scala.Tuple2\" => {\n                val test_tuple_type_1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._1.getClass.getName\n                val test_tuple_type_2 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._2.getClass.getName\n                if (test_tuple_type_1 == test_tuple_type_2) true\n                else false\n            }\n            case \"scala.Tuple3\" => {\n                val test_tuple_type_1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._1.getClass.getName\n                val test_tuple_type_2 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._2.getClass.getName\n                val test_tuple_type_3 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._3.getClass.getName\n                if (test_tuple_type_1 == test_tuple_type_2 && test_tuple_type_2 == test_tuple_type_3) true\n                else false\n            }\n            case \"scala.Tuple4\" => {\n                val test_tuple_type_1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._1.getClass.getName\n                val test_tuple_type_2 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._2.getClass.getName\n                val test_tuple_type_3 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._3.getClass.getName\n                val test_tuple_type_4 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._4.getClass.getName\n\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123567,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0aiexzpb.scala:35:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0aiexzpb.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0aiexzpb.scala:30:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0aiexzpb.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0aiexzpb.scala:32:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp0aiexzpb.scala:28:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m28 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        var result = true\n        for (i <- 1 until test_tuple_type_list_size) {\n            if (test_tuple_type_list(i) != test_tuple_type_list(i - 1)) {\n                result = false\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i2we0u2.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i2we0u2.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8i2we0u2.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_trimmed = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_trimmed_list = tuple_type_list_last_trimmed.split(\",\")\n        val tuple_type_list_last_trimmed_list_length = tuple_type_list_last_trimmed_list.length\n        var check_type = true\n        for (i <- 0 until tuple_type_list_last_trimmed_list_length - 1) {\n            if (tuple_type_list_last_trimmed_list(i) != tuple_type_list_last_trimmed_list(i + 1)) {\n                check_type = false\n            }\n        }\n        return check_type\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123562,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw6kl1el.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw6kl1el.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw6kl1el.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        var flag = true\n        for (i <- 1 until test_tuple_type_list_length) {\n            if (test_tuple_type_list(i) != test_tuple_type_list(i - 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123563,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3f_kobam.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3f_kobam.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3f_kobam.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        val tuple_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 to tuple_length - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123564,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46aanwf3.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46aanwf3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp46aanwf3.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var first_type = test_tuple.asInstanceOf[Product].productElement(i).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123564,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo_tpwq1e.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo_tpwq1e.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo_tpwq1e.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var test_type = test_tuple.getClass.getTypeName\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass.getTypeName != test_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123563,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4fhw1t0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4fhw1t0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf4fhw1t0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass.getName)\n        if (type_list.distinct.length == 1) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5jdvkcy.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5jdvkcy.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv5jdvkcy.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n        val test_tuple_type_list_last_length = test_tuple_type_list_last.length\n        val test_tuple_type_list_last_last = test_tuple_type_list_last.substring(0, test_tuple_type_list_last_length - 1)\n        val test_tuple_type_list_last_last_split = test_tuple_type_list_last_last.split(\"\\\\$\")\n        val test_tuple_type_list_last_last_split_length = test_tuple_type_list_last_last_split.length\n        val test_tuple_type_list_last_last_split_last = test_tuple_type_list_last_last_split(test_tuple_type_list_last_last_split_length - 1)\n        val test_tuple_type_list_last_last_split_last_length = test_tuple_type_list_last_last_split_last.length\n        val test_tuple_type_list_last_last_split_last_last = test_tuple_type_list_last_last_split_last.substring(0, test_tuple_type_list_last_last_split_last_length - 1)\n        val test_tuple_type_list_last_last_split_last_last_split = test_tuple_type_list_last_last_split_last_last.split(\"\\\\.\")\n        val test_tuple_type_list_last_last_split_last_last_split_length = test_tuple_type_list_last_last_split_last_last_split.length\n        val test_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppk9a52ws.scala:20:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppk9a52ws.scala:20:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppk9a52ws.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppk9a52ws.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppk9a52ws.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val t1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            if (t1_type == t2_type) {\n                return true\n            } else {\n                return false\n            }\n        } else if (tuple_type == \"scala.Tuple3\") {\n            val t1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type) {\n                return true\n            } else {\n                return false\n            }\n        } else if (tuple_type == \"scala.Tuple4\") {\n            val t1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            val t4_type = t1._4.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type && t3_type == t4_type) {\n                return true\n            } else {\n                return false\n            }\n        } else if (tuple_type == \"scala.Tuple5\") {\n            val t1 = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6o7v401w.scala:49:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6o7v401w.scala:43:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6o7v401w.scala:44:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6o7v401w.scala:45:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6o7v401w.scala:48:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp6o7v401w.scala:42:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m42 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && x.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass && x.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass && x.getClass == e.getClass && x.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123507,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n4cz_n7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n4cz_n7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2n4cz_n7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n4cz_n7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp2n4cz_n7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var tuple_type_list_index = 0\n        var check_type = true\n        while (tuple_type_list_index < tuple_type_list_size - 1) {\n            if (tuple_type_list(tuple_type_list_index) != tuple_type_list(tuple_type_list_index + 1)) {\n                check_type = false\n            }\n            tuple_type_list_index += 1\n        }\n        check_type\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpilx8k9sl.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        test_tuple_type.contains(\"Tuple\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wn29vfb.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wn29vfb.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wn29vfb.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator.toList\n            val tuple_element_types = tuple_elements.map(x => x.getClass.getName)\n            val tuple_element_types_set = tuple_element_types.toSet\n            if (tuple_element_types_set.size == 1) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh_gpbv0.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh_gpbv0.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh_gpbv0.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass)\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphxo4q2d8.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphxo4q2d8.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphxo4q2d8.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass.getName\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (data_type != test_tuple.asInstanceOf[Product].productElement(i).getClass.getName) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123569,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltju7mua.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltju7mua.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpltju7mua.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        if (test_tuple_list_type_set.size == 1) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123570,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h69gtox.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h69gtox.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8h69gtox.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123571,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass.getName\n        while (i < test_tuple.productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != type_of_first) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3of11tjy.scala:9:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity && flag) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3of11tjy.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3of11tjy.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3of11tjy.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n            val tuple_type_list_last_size = tuple_type_list_last.size\n            val tuple_type_list_last_substring = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n            val tuple_type_list_last_substring_list = tuple_type_list_last_substring.split(\",\")\n            val tuple_type_list_last_substring_list_size = tuple_type_list_last_substring_list.size\n            for (i <- 0 until tuple_type_list_last_substring_list_size - 1) {\n                if (tuple_type_list_last_substring_list(i) != tuple_type_list_last_substring_list(i + 1)) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123573,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2ww6g92.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2ww6g92.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2ww6g92.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpawjvi1td.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpawjvi1td.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpawjvi1td.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpawjvi1td.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (tuple_elements.next.getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123572,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6duq5s7c.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6duq5s7c.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6duq5s7c.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val first_type = tuple_type_list(1).split(\"\\\\]\")(0)\n            for (i <- 1 until tuple_type_list_size) {\n                val current_type = tuple_type_list(i).split(\"\\\\]\")(0)\n                if (current_type != first_type) {\n                    return false\n                }\n            }\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfxghrald.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_size_minus_one = tuple_type_list_size - 1\n            val tuple_type_list_size_minus_two = tuple_type_list_size - 2\n            val tuple_type_list_size_minus_three = tuple_type_list_size - 3\n            val tuple_type_list_size_minus_four = tuple_type_list_size - 4\n            val tuple_type_list_size_minus_five = tuple_type_list_size - 5\n            val tuple_type_list_size_minus_six = tuple_type_list_size - 6\n            val tuple_type_list_size_minus_seven = tuple_type_list_size - 7\n            val tuple_type_list_size_minus_eight = tuple_type_list_size - 8\n            val tuple_type_list_size_minus_nine = tuple_type_list_size - 9\n            val tuple_type_list_size_minus_ten = tuple_type_list_size - 10\n            val tuple_type_list_size_minus_eleven = tuple_type_list_size - 11\n            val tuple_type_list_size_minus_twelve = tuple_type_list_size - 12\n            val tuple_type_list_size_minus_thirteen = tuple_type_list_size - 13\n            val tuple_type_list_size_minus_fourteen = tuple_type_list_size - 14\n            val tuple_type_list_size_minus_fifteen = tuple_type_list_size - 15\n            val tuple_type_list_size_minus_sixteen = tuple_type_list_size - 16\n            val tuple_type_list_size_minus_seventeen = tuple_type_list_size - 17\n            val tuple_type_list_size_minus_eighteen =\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8ifbymyz.scala:30:53 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mtuple_type_list_size_minus_eighteen\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8ifbymyz.scala:39:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8ifbymyz.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8ifbymyz.scala:34:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8ifbymyz.scala:35:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ifbymyz.scala:38:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var data_type = test_tuple.asInstanceOf[Product].productElement(i).getClass\n        while (i < test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type) {\n                flag = false\n                return flag\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd831c0mp.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd831c0mp.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd831c0mp.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 2) {\n            val tuple_type_list_1 = tuple_type_list(1).split(\"\\\\]\")\n            val tuple_type_list_1_size = tuple_type_list_1.size\n            if (tuple_type_list_1_size == 2) {\n                val tuple_type_list_1_0 = tuple_type_list_1(0)\n                val tuple_type_list_1_0_list = tuple_type_list_1_0.split(\",\")\n                val tuple_type_list_1_0_list_size = tuple_type_list_1_0_list.size\n                if (tuple_type_list_1_0_list_size > 1) {\n                    val tuple_type_list_1_0_list_0 = tuple_type_list_1_0_list(0)\n                    val tuple_type_list_1_0_list_0_list = tuple_type_list_1_0_list_0.split(\"\\\\.\")\n                    val tuple_type_list_1_0_list_0_list_size = tuple_type_list_1_0_list_0_list.size\n                    if (tuple_type_list_1_0_list_0_list_size == 2) {\n                        val tuple_type_list_1_0_list_0_list_0 = tuple_type_list_1_0_list_0_list(1)\n                        for (i <- 1 until tuple_type_list_1_0_list_size) {\n                            val tuple_type_list_1_0_list_i = tuple_type_list_1_0_list(i)\n                            val tuple_type_list_1_0_list_i_list = tuple_type_list_1_0_list_i.split(\"\\\\.\")\n                            val tuple_type_list_1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ggkozji.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_ggkozji.scala:34:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ggkozji.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ggkozji.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ggkozji.scala:30:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp_ggkozji.scala:27:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m27 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var first_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != first_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fgyv660.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fgyv660.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fgyv660.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var data_type = test_tuple.asInstanceOf[Product].productElement(i).getClass\n        while(i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type)\n                flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123574,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh65a9b.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh65a9b.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpleh65a9b.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var flag = true\n        for (i <- 1 to tuple_type_list_size - 1) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylp109su.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylp109su.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylp109su.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Product]\n        val first_type = tuple.productElement(0).getClass\n        for (i <- 1 until tuple.productArity) {\n            if (tuple.productElement(i).getClass != first_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplvz1iac5.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplvz1iac5.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplvz1iac5.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b, c) => a.isInstanceOf[Int] && b.isInstanceOf[Int] && c.isInstanceOf[Int]\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3c250kdp.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3c250kdp.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3c250kdp.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_type = test_list(0).getClass\n        for (i <- test_list) {\n            if (i.getClass != test_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9pv2u7ug.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9pv2u7ug.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9pv2u7ug.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.String\", \"java.lang.Double\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaboc7c3j.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaboc7c3j.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaboc7c3j.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_135_hexagonal_num",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the nth hexagonal number.\n    def hexagonalNum(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_135_hexagonal_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(hexagonalNum((10l)) == (190l));\n    assert(hexagonalNum((5l)) == (45l));\n    assert(hexagonalNum((7l)) == (91l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)",
    "        n * (2 * n - 1)"
  ]
}
{
  "name": "mbpp_764_number_ctr",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val nums = str.split(\" \").map(x => x.toLong)\n        nums.map(x => x.toString.length).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "java.lang.NumberFormatException: For input string: \"program2bedone\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\tat scala.collection.StringOps$.toLong$extension(StringOps.scala:928)\n\tat Problem$.$anonfun$1(tmpfrwljws6.scala:6)\n\tat scala.collection.ArrayOps$.map$extension(ArrayOps.scala:929)\n\tat Problem$.numberCtr(tmpfrwljws6.scala:6)\n\tat Problem$.main(tmpfrwljws6.scala:10)\n\tat Problem.main(tmpfrwljws6.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val num = str.filter(c => c.isDigit).map(_.asDigit).sum\n        num\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_5bt5usv.scala:10)\n\tat Problem.main(tmp_5bt5usv.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val nums = str.split(\" \").map(_.toLong)\n        nums.map(_.toString.length).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "java.lang.NumberFormatException: For input string: \"program2bedone\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\tat scala.collection.StringOps$.toLong$extension(StringOps.scala:928)\n\tat Problem$.$anonfun$1(tmp8db78pyl.scala:6)\n\tat scala.collection.ArrayOps$.map$extension(ArrayOps.scala:929)\n\tat Problem$.numberCtr(tmp8db78pyl.scala:6)\n\tat Problem$.main(tmp8db78pyl.scala:10)\n\tat Problem.main(tmp8db78pyl.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for(i <- 0 until str.length) {\n            if(str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).map(_.asDigit).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp2b98wxfh.scala:9)\n\tat Problem.main(tmp2b98wxfh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val nums = str.split(\" \").map(_.toLong)\n        nums.map(x => x.toString.length).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "java.lang.NumberFormatException: For input string: \"program2bedone\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\tat scala.collection.StringOps$.toLong$extension(StringOps.scala:928)\n\tat Problem$.$anonfun$1(tmpvhtv6z8l.scala:6)\n\tat scala.collection.ArrayOps$.map$extension(ArrayOps.scala:929)\n\tat Problem$.numberCtr(tmpvhtv6z8l.scala:6)\n\tat Problem$.main(tmpvhtv6z8l.scala:10)\n\tat Problem.main(tmpvhtv6z8l.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- str) {\n            if (i.isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var count = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var count = 0L\n        for (c <- str) {\n            if (c.isDigit) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.map(x => if (x.isDigit) 1 else 0).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.count(_.isDigit)\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var count = 0\n        for(i <- 0 until str.length) {\n            if(str(i) >= '0' && str(i) <= '9') count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i) >= '0' && str(i) <= '9') ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.count(_.isDigit)\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var count = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val num = str.filter(c => c.isDigit).map(_.asDigit).sum\n        num\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_5bt5usv.scala:10)\n\tat Problem.main(tmp_5bt5usv.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i) >= '0' && str(i) <= '9') ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- str) {\n            if (i.isDigit) {\n                ctr += 1\n            }\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.map(x => if (x.isDigit) 1 else 0).sum\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i) >= '0' && str(i) <= '9') ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i) >= '0' && str(i) <= '9') ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.map(_.isDigit).count(_ == true)\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val nums = str.filter(_.isDigit)\n        nums.length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i) >= '0' && str(i) <= '9') ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val num = str.filter(c => c.isDigit).map(c => c.asDigit).sum\n        num\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmphjqxj6cx.scala:10)\n\tat Problem.main(tmphjqxj6cx.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- str) {\n            if (i.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.count(_.isDigit)\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.toList.filter(x => x.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val nums = str.filter(x => x.isDigit)\n        nums.length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for(i <- 0 until str.length) {\n            if(str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        return str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- str) {\n            if (i.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        val num = str.filter(_.isDigit).map(_.asDigit).sum\n        num\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpm5u1qe1z.scala:10)\n\tat Problem.main(tmpm5u1qe1z.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- str) {\n            if (i.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) {\n                ctr += 1\n            }\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 to str.length - 1) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr : Long = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        return ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(c => c.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).size\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0\n        for (i <- 0 until str.length) {\n            if (str(i).isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1666122707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        var ctr = 0L\n        for (c <- str) {\n            if (c.isDigit) ctr += 1\n        }\n        ctr\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(_.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function to count number of digits in a given string.\n    def numberCtr(str : String) : Long = {\n        str.filter(x => x.isDigit).length\n    }\n    def main(args: Array[String]) = {\n    assert(numberCtr((\"program2bedone\")) == (1l));\n    assert(numberCtr((\"3wonders\")) == (1l));\n    assert(numberCtr((\"123\")) == (3l));\n    assert(numberCtr((\"3wond-1ers2\")) == (3l));\n    }\n\n}\n",
      "timestamp": 1665510115,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
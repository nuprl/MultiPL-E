{
  "name": "mbpp_70_get_equal",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_70_get_equal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var l = Input.length\n        var flag = true\n        for (i <- 0 until l) {\n            if (Input(i) != Input(0)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyd02q24w.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyd02q24w.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyd02q24w.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyd02q24w.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 until Input.length) {\n            if (temp != Input(i)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        for (i <- 0 until length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpey0ae0m8.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpey0ae0m8.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpey0ae0m8.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpey0ae0m8.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val n = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        for (i <- 0 to n - 1) {\n            for (j <- i + 1 to n - 1) {\n                if (Input(i) != Input(j)) {\n                    flag = false\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxyd6isa.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxyd6isa.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxyd6isa.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxyd6isa.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var result = true\n        while(i < length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxt8ngbon.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxt8ngbon.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxt8ngbon.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxt8ngbon.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1 && result) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                i = Input.length\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxpw04xe.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxpw04xe.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxpw04xe.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyxpw04xe.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val sorted = Input.sorted\n        val first = sorted.head\n        val last = sorted.last\n        if (first == last) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfhj0j5h9.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfhj0j5h9.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfhj0j5h9.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfhj0j5h9.scala:13:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        if (length == 0) return true\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0lzc7qv.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0lzc7qv.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0lzc7qv.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0lzc7qv.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var k = 0\n        var l = 0\n        var m = 0\n        var n = 0\n        var o = 0\n        var p = 0\n        var q = 0\n        var r = 0\n        var s = 0\n        var t = 0\n        var u = 0\n        var v = 0\n        var w = 0\n        var x = 0\n        var y = 0\n        var z = 0\n        var aa = 0\n        var ab = 0\n        var ac = 0\n        var ad = 0\n        var ae = 0\n        var af = 0\n        var ag = 0\n        var ah = 0\n        var ai = 0\n        var aj = 0\n        var ak = 0\n        var al = 0\n        var am = 0\n        var an = 0\n        var ao = 0\n        var ap = 0\n        var aq = 0\n        var ar = 0\n        var as = 0\n        var at = 0\n        var au = 0\n        var av = 0\n        var aw = 0\n        var ax = 0\n        var ay = 0\n        var az = 0\n        var ba = 0\n        var bb = 0\n        var bc = 0\n        var bd = 0\n        var be = 0\n        var bf = 0\n        var bg = 0\n        var bh = 0\n        var bi = 0\n        var bj = 0\n        var bk = 0\n        var bl = 0\n        var bm = 0\n        var bn = 0\n        var bo = 0\n        var bp = 0\n        var bq = 0\n        var br = 0\n        var bs = 0\n        var bt = 0\n        var bu = 0\n        var bv = 0\n        var bw = 0\n        var bx = 0\n        var by = 0\n        var bz = 0\n        var ca = 0\n        var cb = 0\n        var cc = 0\n        var cd = 0\n        var ce = 0\n        var cf = 0\n        var cg = 0\n        var ch = 0\n        var ci = 0\n        var c\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpho37u1fd.scala:87:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpho37u1fd.scala:87:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpho37u1fd.scala:89:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpho37u1fd.scala:89:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpho37u1fd.scala:90:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m90 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) result = false\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvfj0cvw.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvfj0cvw.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvfj0cvw.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvfj0cvw.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        while(i < length && flag) {\n            j = i + 1\n            while(j < length && flag) {\n                if(Input(i) != Input(j)) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdpckuz9o.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdpckuz9o.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdpckuz9o.scala:24:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdpckuz9o.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6kt_p4y.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6kt_p4y.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6kt_p4y.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp6kt_p4y.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1 && result) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) result = false\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        if (length == 0) return true\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val min = Input.min\n        val max = Input.max\n        if (min == max) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprfaqm1wt.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprfaqm1wt.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprfaqm1wt.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprfaqm1wt.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val set = Input.toSet\n        if (set.size == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:13:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var count = 0\n        var prev = 0\n        for (i <- 0 to Input.length - 1) {\n            if (Input(i) == 0) {\n                count += 1\n                if (count > 1) return false\n            } else {\n                if (count == 1) {\n                    if (prev != Input(i)) return false\n                }\n                prev = Input(i)\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz69pn8kp.scala:16:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m                prev = Input(i)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Found:    Long\n\u001b[31m   |\u001b[0m                       Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz69pn8kp.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz69pn8kp.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz69pn8kp.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while (i < length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                equal = false\n            }\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8g0yhy9.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8g0yhy9.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8g0yhy9.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf8g0yhy9.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = Input(0).toString.length\n        for (i <- 1 until Input.length) {\n            if (Input(i).toString.length != length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpby7jq8c5.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpby7jq8c5.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpby7jq8c5.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpby7jq8c5.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var prev = 0\n        for (i <- 0 until Input.length) {\n            if (i == 0) {\n                prev = Input(i).toString.length\n            } else {\n                if (Input(i).toString.length != prev) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4y5z7yco.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4y5z7yco.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4y5z7yco.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4y5z7yco.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        for (i <- 0 until length) {\n            for (j <- i + 1 until length) {\n                if (Input(i) != Input(j)) return false\n            }\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123676,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd88101yg.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd88101yg.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd88101yg.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd88101yg.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var result = true\n        for (i <- 0 until length) {\n            if (Input(i) != length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3dvjrpo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3dvjrpo.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3dvjrpo.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp3dvjrpo.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb0p2i24.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb0p2i24.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb0p2i24.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb0p2i24.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g08v4qj.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var result = true\n        while(i < length && result) {\n            j = i + 1\n            while(j < length && result) {\n                if(Input(i) != Input(j)) {\n                    result = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp19oyk1hk.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp19oyk1hk.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp19oyk1hk.scala:24:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp19oyk1hk.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1 && result) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) result = false\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp45rdaxxs.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val n = Input.length\n        val m = Input.map(x => x.toString.length).toSet\n        m.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = 0\n        for (i <- Input) {\n            if (length == 0) length = i.toString.length\n            else if (length != i.toString.length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfhapg9v.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfhapg9v.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfhapg9v.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfhapg9v.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result : Boolean = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhoi22l1.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhoi22l1.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhoi22l1.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhoi22l1.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var last = 0\n        for (i <- Input) {\n            if (last == 0) {\n                last = i.toString.length\n            } else {\n                if (last != i.toString.length) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65kkk4qg.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65kkk4qg.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65kkk4qg.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp65kkk4qg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmnn_1mt5.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmnn_1mt5.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmnn_1mt5.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmnn_1mt5.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var count = 0\n        for (i <- 0 to Input.length - 1) {\n            if (Input(i) == Input(0)) count += 1\n        }\n        if (count == Input.length) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_tv7a3nf.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_tv7a3nf.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_tv7a3nf.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_tv7a3nf.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = 0\n        for (i <- 0 to Input.length - 1) {\n            if (length == 0) {\n                length = Input(i).toString.length\n            } else {\n                if (length != Input(i).toString.length) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_g_8bfwo.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_g_8bfwo.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_g_8bfwo.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_g_8bfwo.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var flag = true\n        for (i <- 0 until length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4zhxpei.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4zhxpei.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4zhxpei.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4zhxpei.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val set = Input.toSet\n        if (set.size == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuctvwfe.scala:13:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = Input.length\n        var counter = 0\n        for (i <- 0 until length) {\n            if (Input(i) == Input(i + 1)) {\n                counter += 1\n            }\n        }\n        if (counter == length - 1) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ehunegg.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ehunegg.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ehunegg.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ehunegg.scala:22:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3uc8ssy.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3uc8ssy.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3uc8ssy.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3uc8ssy.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var i = 0\n        var j = 1\n        var flag = true\n        while(i < Input.length && j < Input.length && flag) {\n            if(Input(i) != Input(j)) {\n                flag = false\n            }\n            i += 1\n            j += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41dhcpln.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41dhcpln.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41dhcpln.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41dhcpln.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        val len1 = Input(0).toString.length\n        for (i <- 1 until len) {\n            if (Input(i).toString.length != len1) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t3vas2r.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t3vas2r.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t3vas2r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3t3vas2r.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var flag = true\n        for (i <- 0 until len - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp375kteo7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp375kteo7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp375kteo7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp375kteo7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        while(i < l - 1) {\n            j = i + 1\n            while(j < l) {\n                if(Input(i) != Input(j)) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5dax6aa5.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5dax6aa5.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5dax6aa5.scala:24:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5dax6aa5.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.size - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsv475mog.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsv475mog.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsv475mog.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsv475mog.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        for (i <- 0 until len) {\n            if (Input(i) != Input(0)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_w376pk.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_w376pk.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_w376pk.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk_w376pk.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val n = Input.length\n        val m = Input.map(x => x.toString.length).toSet\n        m.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 1) true\n        else if (Input.head == Input.tail.head) getEqual(Input.tail)\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123692,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1tvjg47e.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1tvjg47e.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1tvjg47e.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1tvjg47e.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(0)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4w9jin5_.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4w9jin5_.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4w9jin5_.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4w9jin5_.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result : Boolean = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt3n4c_w.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt3n4c_w.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt3n4c_w.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptt3n4c_w.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val result = Input.groupBy(x => x).map(x => (x._1, x._2.length)).toList.sortBy(x => x._1)\n        if (result.length == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofeax0h0.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofeax0h0.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofeax0h0.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofeax0h0.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123689,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2hvi58u.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        val sqrt = sqrt(len).toInt\n        val sqrt_len = sqrt * sqrt\n        if (len != sqrt_len) return false\n        val sqrt_len_half = sqrt_len / 2\n        val half = len / 2\n        val first_half = Input.slice(0, half)\n        val second_half = Input.slice(half, len)\n        val first_half_sqrt = sqrt(half).toInt\n        val second_half_sqrt = sqrt(len - half).toInt\n        val first_half_sqrt_len = first_half_sqrt * first_half_sqrt\n        val second_half_sqrt_len = second_half_sqrt * second_half_sqrt\n        if (first_half_sqrt_len != half || second_half_sqrt_len != len - half) return false\n        val first_half_sqrt_len_half = first_half_sqrt_len / 2\n        val second_half_sqrt_len_half = second_half_sqrt_len / 2\n        val first_half_first_half = first_half.slice(0, first_half_sqrt_len_half)\n        val first_half_second_half = first_half.slice(first_half_sqrt_len_half, first_half_sqrt_len)\n        val second_half_first_half = second_half.slice(0, second_half_sqrt_len_half)\n        val second_half_second_half = second_half.slice(second_half_sqrt_len_half, second_half_sqrt_len)\n        val first_half_first_half_sqrt = sqrt(first_half_sqrt_len_half).toInt\n        val first_half_second_half_sqrt = sqrt(first_half_sqrt_len - first_half_sqrt_len_half).toInt\n        val second_half_first_half_sqrt = sqrt(second_half_sqrt_len_half).toInt\n        val second_half_second_half_sqrt =\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpefr4n7q7.scala:28:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msecond_half_second_half_sqrt\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpefr4n7q7.scala:7:19 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(len).toInt\n\u001b[31m\u001b[31m  |\u001b[0m                   ^\u001b[0m\n\u001b[31m  |\u001b[0m                   Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefr4n7q7.scala:29:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefr4n7q7.scala:31:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpefr4n7q7.scala:31:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val set = Input.toSet\n        if (length == set.size) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwflamu29.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwflamu29.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwflamu29.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwflamu29.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var result = true\n        for (i <- 0 until length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123706,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9bxp01k.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9bxp01k.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9bxp01k.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw9bxp01k.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != temp) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        var first = Input(0)\n        for (i <- 1 until Input.length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var k = 0\n        var l = 0\n        var m = 0\n        var n = 0\n        var o = 0\n        var p = 0\n        var q = 0\n        var r = 0\n        var s = 0\n        var t = 0\n        var u = 0\n        var v = 0\n        var w = 0\n        var x = 0\n        var y = 0\n        var z = 0\n        var aa = 0\n        var bb = 0\n        var cc = 0\n        var dd = 0\n        var ee = 0\n        var ff = 0\n        var gg = 0\n        var hh = 0\n        var ii = 0\n        var jj = 0\n        var kk = 0\n        var ll = 0\n        var mm = 0\n        var nn = 0\n        var oo = 0\n        var pp = 0\n        var qq = 0\n        var rr = 0\n        var ss = 0\n        var tt = 0\n        var uu = 0\n        var vv = 0\n        var ww = 0\n        var xx = 0\n        var yy = 0\n        var zz = 0\n        var aaa = 0\n        var bbb = 0\n        var ccc = 0\n        var ddd = 0\n        var eee = 0\n        var fff = 0\n        var ggg = 0\n        var hhh = 0\n        var iii = 0\n        var jjj = 0\n        var kkk = 0\n        var lll = 0\n        var mmm = 0\n        var nnn = 0\n        var ooo = 0\n        var ppp = 0\n        var qqq = 0\n        var rrr = 0\n        var sss = 0\n        var ttt = 0\n        var uuu = 0\n        var vvv = 0\n        var www = 0\n        var xxx = 0\n        var yyy = 0\n        var zzz = 0\n        var aaaa = 0\n        var bbbb = 0\n        var cccc = 0\n        var dddd = 0\n        var eeee = 0\n        var f\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuw8r6red.scala:83:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw8r6red.scala:83:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw8r6red.scala:85:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw8r6red.scala:85:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuw8r6red.scala:86:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long,",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var i = 0\n        var j = 1\n        var flag = true\n        while(i < Input.length && j < Input.length) {\n            if(Input(i) != Input(j)) {\n                flag = false\n            }\n            i += 1\n            j += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88jy4p3c.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88jy4p3c.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88jy4p3c.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88jy4p3c.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5ehk8jq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5ehk8jq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5ehk8jq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5ehk8jq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while(i < length - 1 && equal) {\n            if(Input(i) != Input(i + 1)) {\n                equal = false\n            }\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpik4djbto.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpik4djbto.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpik4djbto.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpik4djbto.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var count = 0\n        var length = 0\n        while(count < Input.length) {\n            if(count == 0) {\n                length = Input(count).toString.length\n            } else {\n                if(length != Input(count).toString.length) {\n                    result = false\n                }\n            }\n            count += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1i3gzt0a.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1i3gzt0a.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1i3gzt0a.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1i3gzt0a.scala:23:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1 && result) {\n            if(Input(i).toString.length != Input(i + 1).toString.length)\n                result = false\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3951t3y.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3951t3y.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3951t3y.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3951t3y.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while (i < length - 1 && equal) {\n            if (Input(i) != Input(i + 1)) equal = false\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vkdeh1q.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vkdeh1q.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vkdeh1q.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vkdeh1q.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var equal = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                equal = false\n            }\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9i_03s2x.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9i_03s2x.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9i_03s2x.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9i_03s2x.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < Input.length - 1 && flag) {\n            if (Input(i) != Input(i + 1)) flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjw7rm94c.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjw7rm94c.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjw7rm94c.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjw7rm94c.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihgswb7_.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihgswb7_.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihgswb7_.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihgswb7_.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        if (len == 0) return true\n        val first = Input(0)\n        for (i <- 1 until len) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        val sqrt = sqrt(len).toInt\n        val sqrt2 = sqrt * sqrt\n        val sqrt3 = sqrt2 + sqrt\n        val sqrt4 = sqrt3 + sqrt\n        if (len == sqrt2 || len == sqrt3 || len == sqrt4) {\n            val arr = Array.ofDim[Long](sqrt, sqrt)\n            for (i <- 0 until len) {\n                val x = i / sqrt\n                val y = i % sqrt\n                arr(x)(y) = Input(i)\n            }\n            for (i <- 0 until sqrt) {\n                val sum = arr(i).sum\n                for (j <- 0 until sqrt) {\n                    if (arr(i)(j) != sum) return false\n                }\n            }\n            for (i <- 0 until sqrt) {\n                val sum = (for (j <- 0 until sqrt) yield arr(j)(i)).sum\n                for (j <- 0 until sqrt) {\n                    if (arr(j)(i) != sum) return false\n                }\n            }\n            val sum = (for (i <- 0 until sqrt) yield arr(i)(i)).sum\n            for (i <- 0 until sqrt) {\n                if (arr(i)(i) != sum) return false\n            }\n            val sum2 = (for (i <- 0 until sqrt) yield arr(i)(sqrt - i - 1)).sum\n            for (i <- 0 until sqrt) {\n                if (arr(i)(sqrt - i - 1) != sum2) return false\n            }\n            true\n        } else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4ey77oma.scala:7:19 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(len).toInt\n\u001b[31m\u001b[31m  |\u001b[0m                   ^\u001b[0m\n\u001b[31m  |\u001b[0m                   Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ey77oma.scala:42:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ey77oma.scala:42:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ey77oma.scala:43:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation av",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result : Boolean = true\n        var prev : Long = 0\n        for (i <- Input) {\n            if (prev == 0) {\n                prev = i\n            } else {\n                if (prev != i) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpztvm01w4.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpztvm01w4.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpztvm01w4.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpztvm01w4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var temp = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != temp) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpld8gcit3.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpld8gcit3.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpld8gcit3.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpld8gcit3.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val sum = Input.sum\n        val sqrt = sqrt(sum).toLong\n        val result = (1L to sqrt).filter(x => sum % x == 0).toList\n        val result2 = result.map(x => (x, sum / x))\n        val result3 = result2.filter(x => x._1 * x._2 == sum)\n        val result4 = result3.filter(x => x._1 + x._2 == length + 1)\n        result4.length > 0\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmps8cz__4w.scala:8:19 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36msqrt\u001b[0m = sqrt(sum).toLong\n\u001b[31m\u001b[31m  |\u001b[0m                   ^\u001b[0m\n\u001b[31m  |\u001b[0m                   Recursive \u001b[33mvalue\u001b[0m \u001b[35msqrt\u001b[0m needs type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps8cz__4w.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps8cz__4w.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps8cz__4w.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = Input(0).toString.length\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i).toString.length != length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123719,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var flag = true\n        for (i <- 0 to len - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn3lnu5g.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn3lnu5g.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn3lnu5g.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppn3lnu5g.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv7pisqn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var flag = true\n        for (i <- 0 until length) {\n            if (Input(i) != length) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5nkhusf.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5nkhusf.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5nkhusf.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5nkhusf.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var flag = true\n        while(i < len - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowo0eolu.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowo0eolu.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowo0eolu.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowo0eolu.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var result = true\n        for (i <- 0 until length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5fr11r_.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5fr11r_.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5fr11r_.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5fr11r_.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = 0\n        for (i <- 0 to Input.length - 1) {\n            if (i == 0) length = Input(i).toString.length\n            else {\n                if (length != Input(i).toString.length) result = false\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5y0n9n1b.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5y0n9n1b.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5y0n9n1b.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5y0n9n1b.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var flag = true\n        while(i < length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp068yrfn7.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp068yrfn7.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp068yrfn7.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp068yrfn7.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var j = 1\n        var flag = true\n        while(i < len) {\n            while(j < len) {\n                if(Input(i) != Input(j)) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1b9psiry.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1b9psiry.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1b9psiry.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1b9psiry.scala:23:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var flag = true\n        while(i < len - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = Input.length\n        var result = true\n        for(i <- 0 until length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyzli0n9.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyzli0n9.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyzli0n9.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphyzli0n9.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        var i = 0\n        var flag = true\n        while(i < l - 1 && flag) {\n            if(Input(i) != Input(i + 1)) flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123720,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbd7wj03c.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbd7wj03c.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbd7wj03c.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbd7wj03c.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        for (i <- 0 until length - 1) {\n            if (Input(i) != Input(i + 1)) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwucedib.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwucedib.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwucedib.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwucedib.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val max = Input.max\n        val min = Input.min\n        if (max == min) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptl_hyx0f.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptl_hyx0f.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptl_hyx0f.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptl_hyx0f.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input.head\n        val last = Input.last\n        if (length == 1) {\n            return true\n        }\n        else if (first == last) {\n            return getEqual(Input.tail)\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uwwib3v.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uwwib3v.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uwwib3v.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0uwwib3v.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        for (i <- 0 until l) {\n            for (j <- i + 1 until l) {\n                if (Input(i) != Input(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44mcbqgw.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        if (length == 0) return true\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var flag = true\n        for (i <- 0 until len) {\n            if (Input(i) != Input(0)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1u6xc9o7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1u6xc9o7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1u6xc9o7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1u6xc9o7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var count = 0\n        for (i <- 0 until Input.length) {\n            if (Input(i) == Input(0)) count += 1\n        }\n        if (count != Input.length) result = false\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaiot740j.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaiot740j.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaiot740j.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaiot740j.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
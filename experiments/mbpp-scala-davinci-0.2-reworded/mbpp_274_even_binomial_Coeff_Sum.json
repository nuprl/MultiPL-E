{
  "name": "mbpp_274_even_binomial_Coeff_Sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a scalathon function that takes in a positive integer n and finds the sum of even index binomial coefficients.\n    def evenBinomialCoeffSum(n : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_274_even_binomial_Coeff_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(evenBinomialCoeffSum((4l)) == (8l));\n    assert(evenBinomialCoeffSum((6l)) == (32l));\n    assert(evenBinomialCoeffSum((2l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        def binomialCoeff(n : Long, k : Long) : Long = {\n            if (k == 0 || k == n) 1\n            else binomialCoeff(n - 1, k - 1) + binomialCoeff(n - 1, k)\n        }\n        var sum = 0L\n        for (i <- 0 to n.toInt by 2) sum += binomialCoeff(n, i)\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt) {\n            if (i % 2 == 0) {\n                sum += binomialCoeff(n, i)\n            }\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        def fact(n : Long) : Long = {\n            if (n == 0) 1\n            else n * fact(n - 1)\n        }\n        def binomialCoeff(n : Long, k : Long) : Long = {\n            fact(n) / (fact(k) * fact(n - k))\n        }\n        def evenBinomialCoeffSum(n : Long, k : Long) : Long = {\n            if (k == n) binomialCoeff(n, k)\n            else binomialCoeff(n, k) + evenBinomialCoeffSum(n, k + 2)\n        }\n        evenBinomialCoeffSum(n, 0)",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt) {\n            if (i % 2 == 0) {\n                sum += binomialCoeff(n, i)\n            }\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        // Fill in the code here\n        0",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum : Long = 0\n        for (k <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, k)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum"
  ]
}
{
  "name": "mbpp_227_min_of_three",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        return min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        return min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        } else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        return min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        min(min(a, b), c)\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        }\n        else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a <= b && a <= c) a\n        else if (b <= a && b <= c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        } else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        var min = a\n        if (b < min) min = b\n        if (c < min) min = c\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        } else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a else c\n        } else {\n            if (b < c) b else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b) {\n            if (a < c) a\n            else c\n        } else {\n            if (b < c) b\n            else c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find minimum of three numbers.\n    def minOfThree(a : Long, b : Long, c : Long) : Long = {\n        if (a < b && a < c) a\n        else if (b < a && b < c) b\n        else c\n    }\n    def main(args: Array[String]) = {\n    assert(minOfThree((10l), (20l), (0l)) == (0l));\n    assert(minOfThree((19l), (15l), (18l)) == (15l));\n    assert(minOfThree((-10l), (-20l), (-30l)) == (-30l));\n    }\n\n}\n",
      "timestamp": 1665509804,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_475_sort_counter",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list = List[Either[String, Long]]()\n        for (i <- 0 to dict2.length - 1) {\n            list = Left(dict2(i)._1) :: list\n            list = Right(dict2(i)._2) :: list\n        }\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj07vbo0a.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj07vbo0a.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj07vbo0a.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Left(x._1) else Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp72_418zw.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith(_._2 > _._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi3xku3n.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi3xku3n.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi3xku3n.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprozh1klw.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprozh1klw.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprozh1klw.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.map(x => (x._2, x._1))\n        val list1 = dict2.toList.sortWith((x, y) => x._1 > y._1)\n        val list2 = list1.map(x => Left(x._2))\n        val list3 = list1.map(x => Right(x._1))\n        val list4 = list2.zip(list3).map(x => x._1.asInstanceOf[Either[String, Long]])\n        list4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7svnbc7q.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7svnbc7q.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7svnbc7q.scala:14:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList.sortBy(_._2)\n        list.map(x => Right(x._2)) ::: list.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9a__3pc.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9a__3pc.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9a__3pc.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:9:77 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((a,b) => a._2 < b._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24n30pt7.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24n30pt7.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24n30pt7.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ::: dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict4.zip(dict3)\n        dict5.map(x => x._1.right.flatMap(y => x._2.left.map(z => (y, z))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqprf8dy.scala:10:66 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (y, z))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Nothing, Nothing)\n\u001b[31m   |\u001b[0m                                            Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqprf8dy.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqprf8dy.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                           ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xlj5l5w.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xlj5l5w.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6xlj5l5w.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Left(x._1)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsljrd62s.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsljrd62s.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsljrd62s.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.right.map(y => (x._1.left.get, y))).map(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr6wq1k8i.scala:9:92 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.right.map(\u001b[36my\u001b[0m => (x._1.left.get, y))).map(\u001b[36mx\u001b[0m => x.right.get)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                    ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (String, Nothing)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr6wq1k8i.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr6wq1k8i.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp72_418zw.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list1 = dict1.toList.sortBy(_._2)\n        val list2 = list1.map(x => Right(x._2))\n        val list3 = list1.map(x => Left(x._1))\n        list2 ::: list3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4n788o70.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4n788o70.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4n788o70.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ++ dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lpnf86v.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lpnf86v.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6lpnf86v.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = List[Either[String, Long]]()\n        for ((k,v) <- dict1) {\n            dict2 = Right(v) :: Left(k) :: dict2\n        }\n        dict2.sortWith((x,y) => x.right.get > y.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvgm6ms3.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvgm6ms3.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvgm6ms3.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list = list :+ Left(dict2(i)._1)\n            list = list :+ Right(dict2(i)._2)\n        }\n        return list\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgnfoh6_.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgnfoh6_.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppgnfoh6_.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val sorted = dict1.toList.sortWith(_._2 > _._2)\n        sorted.map(x => Left(x._1)) ::: sorted.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8nd743zc.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8nd743zc.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8nd743zc.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var dict3 = dict2.map(x => Right(x._2))\n        var dict4 = dict2.map(x => Left(x._1))\n        var dict5 = dict3.zip(dict4)\n        var dict6 = dict5.map(x => x._1.right.getOrElse(x._2.left.get))\n        return dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxr2_8jsn.scala:11:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mreturn\u001b[0m dict6\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    (dict6 : List[Matchable])\n\u001b[31m   |\u001b[0m               Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxr2_8jsn.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxr2_8jsn.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Foun",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4).map(x => x._1.right.getOrElse(x._2.left.get))\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnegeood4.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (dict5 : List[Matchable])\n\u001b[31m   |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnegeood4.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnegeood4.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Left(x._1)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcc59anq6.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcc59anq6.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcc59anq6.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = List[Either[String, Long]]()\n        for ((k,v) <- dict1) {\n            dict2 = Right(v) :: Left(k) :: dict2\n        }\n        dict2.sortWith(_.right.get > _.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrm9z1n_.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrm9z1n_.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrm9z1n_.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ++ dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdt6g43_.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdt6g43_.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprdt6g43_.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122417,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4s7i15ph.scala:37:32 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict33\u001b[0m = dict32.map(\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4s7i15ph.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4s7i15ph.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4s7i15ph.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.map(x => Left(x))\n        val dict12 = dict10.map(x => Right(x))\n        val dict13 = dict11.zip(dict12)\n        val dict14 = dict13.map(x => x._1)\n        val dict15 = dict13.map(x => x._2)\n        val dict16 = dict14 ::: dict15\n        dict16\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpg0xi_t.scala:24:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpg0xi_t.scala:24:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkpg0xi_t.scala:24:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Left(x._1) else Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpspmd0ufi.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:10:66 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => x match {\n            case (a,b) => Left(a)\n            case _ => Right(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list = dict1.toList\n        val sorted = list.sortBy(_._2)\n        sorted.map(x => Left(x._1)) ::: sorted.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vl8jt_t.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vl8jt_t.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vl8jt_t.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm959xw8.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm959xw8.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm959xw8.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Left(x._1)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp72_418zw.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:9:77 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                  Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp60y4bn7b.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ::: dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict4.zip(dict3)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbejwwb5.scala:10:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    Right[Nothing, Long]\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbejwwb5.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbejwwb5.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp72_418zw.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.map(y => (y, x._2.left.get))).map(x => x.right.get)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvx8t7cbc.scala:7:135 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.map(\u001b[36my\u001b[0m => (y, x._2.left.get))).map(\u001b[36mx\u001b[0m => x.right.get)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                               ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (Long, String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvx8t7cbc.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvx8t7cbc.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ++ dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_so16u_9.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_so16u_9.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_so16u_9.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).reverse ::: dict2.map(x => Left(x._1)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ndd5we1.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ndd5we1.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4ndd5we1.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list = List[Either[String, Long]]()\n        for (i <- dict2) {\n            list = list :+ Left(i._1) :+ Right(i._2)\n        }\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdvugcmo.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdvugcmo.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdvugcmo.scala:14:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Left(x._1) : Either[String, Long]).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsci11scf.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsci11scf.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsci11scf.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).zip(dict1.toList.sortBy(_._2).map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmps4uxgmro.scala:6:122 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4uxgmro.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps4uxgmro.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Left(x._1)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbmcnly6f.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpd1d1r50i.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortWith((x,y) => x._2 > y._2)\n        dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzhy4h_x.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzhy4h_x.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkzhy4h_x.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list1 = dict1.toList.sortBy(_._2)\n        list1.map(x => Left(x._1)) ::: list1.map(x => Right(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kiovehm.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kiovehm.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kiovehm.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.right.getOrElse(x._2.left.get))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidq1s1dv.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        dict6\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (dict6 : List[Matchable])\n\u001b[31m   |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidq1s1dv.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpidq1s1dv.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var dict3 = dict2.map(x => Right(x._2))\n        var dict4 = dict2.map(x => Left(x._1))\n        var dict5 = dict3 ::: dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbn3tm979.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbn3tm979.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbn3tm979.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)) ::: dict2.map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe3ijte58.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => Left(x._1))\n        val dict7 = dict5.map(x => Right(x._2))\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps52ae3h4.scala:37:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict33\u001b[0m = dict\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: dict\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps52ae3h4.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps52ae3h4.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps52ae3h4.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        return dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hvezp0n.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hvezp0n.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8hvezp0n.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppa518kwy.scala:10:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    Right[Nothing, Long]\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppa518kwy.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppa518kwy.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 zip dict4\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp_b0tssoi.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_b0tssoi.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_b0tssoi.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list1 = dict1.toList.sortBy(_._2)\n        val list2 = list1.map(x => Left(x._1))\n        val list3 = list1.map(x => Right(x._2))\n        list2.zip(list3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63t5z9z8.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        list2.zip(list3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63t5z9z8.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp63t5z9z8.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpd1d1r50i.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3 ::: dict4\n        dict5\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn1myt7ez.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict = dict1.toList\n        var sorted = dict.sortBy(_._2)\n        var result = sorted.map(x => Left(x._1)) ::: sorted.map(x => Right(x._2))\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmetp_0bi.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmetp_0bi.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmetp_0bi.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list1 = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list1 = list1 :+ Left(dict2(i)._1)\n            list1 = list1 :+ Right(dict2(i)._2)\n        }\n        list1\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxuo2knc.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxuo2knc.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxuo2knc.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).map(x => Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp72_418zw.scala:6:72 -------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortBy(_._2).map(\u001b[36mx\u001b[0m => Right(x._2)).map(\u001b[36mx\u001b[0m => Left(x._1))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value _1 is not a member of Right[Nothing, Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72_418zw.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortWith((a,b) => a._2 > b._2).map(x => Right(x._2)).zip(dict1.toList.sortWith((a,b) => a._2 > b._2).map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7n58xf2.scala:6:173 --------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        dict1.toList.sortWith((\u001b[36ma\u001b[0m,\u001b[36mb\u001b[0m) => a._2 > b._2).map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict1.toList.sortWith((\u001b[36ma\u001b[0m,\u001b[36mb\u001b[0m) => a._2 > b._2).map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7n58xf2.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf7n58xf2.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1.merge(x._2))\n        dict6\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwnutdot8.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mdict6\u001b[0m = dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    Right[Nothing, Long]\n\u001b[31m   |\u001b[0m                                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwnutdot8.scala:11:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        dict6\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    (dict6 : List[Char])\n\u001b[31m   |\u001b[0m        Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwnutdot8.scala:14:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwnutdot8.scala:14:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.getOrElse(x._2.left.get))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:7:97 ---------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.getOrElse(x._2.left.get))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Matchable\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3dkw5_16.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n      val dict2 = dict1.toList.sortBy(_._2)\n      val dict3 = dict2.map(x => Right(x._2))\n      val dict4 = dict2.map(x => Left(x._1))\n      dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122447,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpro99b_6i.scala:9:37 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m      dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpro99b_6i.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpro99b_6i.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:7:141 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                           ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw1tfuk4.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122434,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:10:66 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpleaqof4i.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m        ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val list1 = dict1.toList\n        val list2 = list1.sortBy(_._2)\n        val list3 = list2.map(x => Left(x._1))\n        val list4 = list2.map(x => Right(x._2))\n        val list5 = list3.zip(list4)\n        val list6 = list5.map(x => x._1)\n        val list7 = list5.map(x => x._2)\n        val list8 = list6 ::: list7\n        list8\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9izncon.scala:17:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9izncon.scala:17:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9izncon.scala:17:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpd1d1r50i.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvgoltrr.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvgoltrr.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvgoltrr.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        dict1.toList.sortBy(_._2).map(x => Right(x._2)).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:131 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:151 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwr1x4be7.scala:9:169 --------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(sortCounter((Map[\u001b[35mSt",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n            .map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7dag337y.scala:8:24 ---------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            .map(x => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                      Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7dag337y.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7dag337y.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(_ => x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdm2sbnqu.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdm2sbnqu.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdm2sbnqu.scala:10:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_v8rpd6a.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.map(x => Left(x))\n        val dict9 = dict7.map(x => Right(x))\n        val dict10 = dict8.zip(dict9)\n        val dict11 = dict10.map(x => x._1)\n        val dict12 = dict10.map(x => x._2)\n        val dict13 = dict11 ::: dict12\n        dict13\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy3vrsh9d.scala:21:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.right.flatMap(y => x._2.left.map(z => (z,y)))).map(x => x.merge)\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:7:140 --------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z,y)))).map(\u001b[36mx\u001b[0m => x.merge)\n\u001b[31m\u001b[31m  |\u001b[0m                                                                                                                                          ^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                            Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplx27myc8.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict4.zip(dict3).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict4.zip(dict3).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    Right[Nothing, Long]\n\u001b[31m  |\u001b[0m                                            Required: Int\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4hil9k1q.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        def sortCounterHelper(dict : Map[String,Long], acc : List[Either[String, Long]]) : List[Either[String, Long]] = {\n            if (dict.isEmpty) acc\n            else {\n                val (key, value) = dict.maxBy(_._2)\n                sortCounterHelper(dict - key, Right(value) :: Left(key) :: acc)\n            }\n        }\n        sortCounterHelper(dict1, List())\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdujakot9.scala:16:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdujakot9.scala:16:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdujakot9.scala:16:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList\n        val dict3 = dict2.sortWith((a,b) => a._2 > b._2)\n        val dict4 = dict3.map(x => Left(x._1))\n        val dict5 = dict3.map(x => Right(x._2))\n        val dict6 = dict4.zip(dict5)\n        val dict7 = dict6.map(x => x._1)\n        val dict8 = dict6.map(x => x._2)\n        val dict9 = dict7 ::: dict8\n        dict9\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mx627tg.scala:17:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mx627tg.scala:17:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mx627tg.scala:17:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ::: dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9578l5n5.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1)) ++ dict2.map(x => Right(x._2))\n        dict3\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbdymgadk.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(x => x._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        dict3 ++ dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_bubg4w.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_bubg4w.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc_bubg4w.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ++ dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp29rotc5b.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp29rotc5b.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp29rotc5b.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3.zip(dict4).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpikkqlfo2.scala:9:39 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        dict3.zip(dict4).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpikkqlfo2.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        dict3 ::: dict4\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122416,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc0m22y1.scala:12:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => (x._1, x._2))\n        dict3.map(x => if (x._2 % 2 == 0) Right(x._2) else Left(x._1))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122448,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6p2kqi2o.scala:11:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6p2kqi2o.scala:11:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6p2kqi2o.scala:11:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => x._2 match {\n            case x if x % 2 == 0 => Left(x._1)\n            case x if x % 2 == 1 => Right(x._2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprsvw4ku8.scala:8:43 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mcase\u001b[0m x \u001b[33mif\u001b[0m x % \u001b[31m2\u001b[0m == \u001b[31m0\u001b[0m => Left(x._1)\n\u001b[31m\u001b[31m  |\u001b[0m                                         ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                         value _1 is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprsvw4ku8.scala:9:44 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mcase\u001b[0m x \u001b[33mif\u001b[0m x % \u001b[31m2\u001b[0m == \u001b[31m1\u001b[0m => Right(x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                          ^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                          value _2 is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprsvw4ku8.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprsvw4ku8.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m8",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => Right(x._2)).zip(dict2.map(x => Left(x._1))).map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122435,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpd1d1r50i.scala:7:82 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        dict2.map(\u001b[36mx\u001b[0m => Right(x._2)).zip(dict2.map(\u001b[36mx\u001b[0m => Left(x._1))).map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m  |\u001b[0m                                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1d1r50i.scala:10:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Left(x._1))\n        val dict4 = dict2.map(x => Right(x._2))\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6 ::: dict7\n        dict8\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9eosr6h8.scala:16:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9eosr6h8.scala:16:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9eosr6h8.scala:16:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.right.flatMap(y => x._2.left.map(z => (z, y))))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p89wx6.scala:10:66 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.right.flatMap(\u001b[36my\u001b[0m => x._2.left.map(\u001b[36mz\u001b[0m => (z, y))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                  ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0mString\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0m\u001b[1m\u001b[31mLong\u001b[0m\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                                Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p89wx6.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp4p89wx6.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => x._1)\n        val dict4 = dict2.map(x => x._2)\n        val dict5 = dict3.zip(dict4)\n        val dict6 = dict5.map(x => x._1)\n        val dict7 = dict5.map(x => x._2)\n        val dict8 = dict6.zip(dict7)\n        val dict9 = dict8.map(x => x._1)\n        val dict10 = dict8.map(x => x._2)\n        val dict11 = dict9.zip(dict10)\n        val dict12 = dict11.map(x => x._1)\n        val dict13 = dict11.map(x => x._2)\n        val dict14 = dict12.zip(dict13)\n        val dict15 = dict14.map(x => x._1)\n        val dict16 = dict14.map(x => x._2)\n        val dict17 = dict15.zip(dict16)\n        val dict18 = dict17.map(x => x._1)\n        val dict19 = dict17.map(x => x._2)\n        val dict20 = dict18.zip(dict19)\n        val dict21 = dict20.map(x => x._1)\n        val dict22 = dict20.map(x => x._2)\n        val dict23 = dict21.zip(dict22)\n        val dict24 = dict23.map(x => x._1)\n        val dict25 = dict23.map(x => x._2)\n        val dict26 = dict24.zip(dict25)\n        val dict27 = dict26.map(x => x._1)\n        val dict28 = dict26.map(x => x._2)\n        val dict29 = dict27.zip(dict28)\n        val dict30 = dict29.map(x => x._1)\n        val dict31 = dict29.map(x => x._2)\n        val dict32 = dict30.zip(dict31)\n        val dict33 = dict32.map(x => x\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbam52cq8.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:38:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: List[Either[String, Long]]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbam52cq8.scala:40:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        dict2.map(x => x match {\n            case (a,b) => Left(a)\n            case _ => Right(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122433,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp400j4v7l.scala:13:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        var dict2 = dict1.toList.sortBy(_._2)\n        var list1 = List[Either[String, Long]]()\n        for (i <- 0 until dict2.length) {\n            list1 = list1 :+ Left(dict2(i)._1)\n            list1 = list1 :+ Right(dict2(i)._2)\n        }\n        return list1\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vnco4hr.scala:15:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vnco4hr.scala:15:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5vnco4hr.scala:15:169 -------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(sortCounter((Map[\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a map by value.\n    def sortCounter(dict1 : Map[String,Long]) : List[Either[String, Long]] = {\n        val dict2 = dict1.toList.sortBy(_._2)\n        val dict3 = dict2.map(x => Right(x._2))\n        val dict4 = dict2.map(x => Left(x._1))\n        val dict5 = dict3.zip(dict4)\n        dict5.map(x => x._1.merge(x._2))\n    }\n    def main(args: Array[String]) = {\n    assert(sortCounter((Map[String,Long](\"Math\" -> 81l, \"Physics\" -> 83l, \"Chemistry\" -> 87l))).equals((List[Either[String, Long]]((\"Chemistry\", 87l), (\"Physics\", 83l), (\"Math\", 81l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 400l, \"Physics\" -> 300l, \"Chemistry\" -> 250l))).equals((List[Either[String, Long]]((\"Math\", 400l), (\"Physics\", 300l), (\"Chemistry\", 250l)))));\n    assert(sortCounter((Map[String,Long](\"Math\" -> 900l, \"Physics\" -> 1000l, \"Chemistry\" -> 1250l))).equals((List[Either[String, Long]]((\"Chemistry\", 1250l), (\"Physics\", 1000l), (\"Math\", 900l)))));\n    }\n\n}\n",
      "timestamp": 1665510027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu3_1956e.scala:10:28 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        dict5.map(\u001b[36mx\u001b[0m => x._1.merge(x._2))\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m          \u001b[33mmethod\u001b[0m \u001b[35mmerge\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mMergeableEither\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:131 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                   ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    \u001b[1m\u001b[31m(\u001b[0mString, Long\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                          Required: \u001b[1m\u001b[32mEither\u001b[0m\u001b[1m\u001b[32m[\u001b[0mString, Long\u001b[1m\u001b[32m]\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu3_1956e.scala:13:151 -------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(sortCounter((Map[\u001b[35mString\u001b[0m,\u001b[35mLong\u001b[0m](\u001b[31m\"Math\"\u001b[0m -> \u001b[31m81l\u001b[0m, \u001b[31m\"Physics\"\u001b[0m -> \u001b[31m83l\u001b[0m, \u001b[31m\"Chemistry\"\u001b[0m -> \u001b[31m87l\u001b[0m))).equals((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]]((\u001b[31m\"Chemistry\"\u001b[0m, \u001b[31m87l\u001b[0m), (\u001b[31m\"Physics\"\u001b[0m, \u001b[31m83l\u001b[0m), (\u001b[31m\"Math\"\u001b[0m, \u001b[31m81l\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_805_max_sum_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that returns the list in a list of lists whose sum of elements is the highest.\n    def maxSumList(lists : List[List[Long]]) : List[Long] = {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxSumList((List[List[Long]](List[Long](1l.toLong, 2l.toLong, 3l.toLong), List[Long](4l.toLong, 5l.toLong, 6l.toLong), List[Long](10l.toLong, 11l.toLong, 12l.toLong), List[Long](7l.toLong, 8l.toLong, 9l.toLong)))).equals((List[Long](10l.toLong, 11l.toLong, 12l.toLong))));\n    assert(maxSumList((List[List[Long]](List[Long](3l.toLong, 2l.toLong, 1l.toLong), List[Long](6l.toLong, 5l.toLong, 4l.toLong), List[Long](12l.toLong, 11l.toLong, 10l.toLong)))).equals((List[Long](12l.toLong, 11l.toLong, 10l.toLong))));\n    assert(maxSumList((List[List[Long]](List[Long](2l.toLong, 3l.toLong, 1l.toLong)))).equals((List[Long](2l.toLong, 3l.toLong, 1l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = Nil\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var max = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            var sum = 0L\n            for (elem <- list) {\n                sum += elem\n            }\n            if (sum > max) {\n                max = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var max = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > max) {\n                max = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.sum\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        lists.maxBy(list => list.sum)",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.sum\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        lists.maxBy(list => list.sum)",
    "        var maxSum = 0L\n        var maxList : List[Long] = null\n        for (list <- lists) {\n            val sum = list.sum\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = List()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList",
    "        var maxSum = 0L\n        var maxList : List[Long] = Nil\n        for (list <- lists) {\n            var sum = 0L\n            for (x <- list) sum += x\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        return maxList",
    "        var maxSum = 0L\n        var maxList = List[Long]()\n        for (list <- lists) {\n            val sum = list.foldLeft(0L)(_ + _)\n            if (sum > maxSum) {\n                maxSum = sum\n                maxList = list\n            }\n        }\n        maxList"
  ]
}